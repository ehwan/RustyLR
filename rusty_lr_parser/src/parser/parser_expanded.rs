// This file was generated by rustylr 1.14.0
// This generated code is targeting rusty_lr version 3.22.0.
// There might be a build error if the version is not matched.
//
// ================================User Codes Begin================================
use crate::parser::args::GrammarArgs;
use crate::parser::args::IdentOrLiteral;
use crate::parser::args::PatternArgs;
use crate::parser::args::PrecDPrecArgs;
use crate::parser::args::RecoveredError;
use crate::parser::args::RuleDefArgs;
use crate::parser::args::RuleLineArgs;
use crate::parser::lexer::Lexed;
use crate::parser::span_pair::SpanPair;
use crate::terminalset::TerminalSet;
use crate::terminalset::TerminalSetItem;
use proc_macro2::Group;
use proc_macro2::Ident;
use proc_macro2::Span;
use proc_macro2::TokenStream;
use quote::format_ident;
use quote::ToTokens;
use rusty_lr_core::builder::ReduceType;
use std::boxed::Box;
// =================================User Codes End=================================
/*
====================================Grammar=====================================

# of terminal classes: 43
# of states: 206

Rule -> ident RuleType colon RuleLines semicolon
RuleType -> parengroup
RuleType ->
RuleLines -> RuleLines pipe RuleLine
RuleLines -> RuleLine
RuleLine -> TokenMapped* PrecDef* Action
PrecDef -> percent prec IdentOrLiteral
PrecDef -> percent prec 'error'
PrecDef -> percent dprec literal
PrecDef -> percent dprec 'error'
PrecDef -> percent 'error'
TokenMapped -> Pattern
TokenMapped -> ident equal Pattern
TerminalSetItem -> ident
TerminalSetItem -> ident minus ident
TerminalSetItem -> ident minus 'error'
TerminalSetItem -> literal
TerminalSetItem -> literal minus literal
TerminalSetItem -> literal minus 'error'
TerminalSet -> lbracket caret? TerminalSetItem* rbracket
TerminalSet -> dot
Pattern -> ident
Pattern -> Pattern plus
Pattern -> Pattern star
Pattern -> Pattern question
Pattern -> Pattern exclamation
Pattern -> TerminalSet
Pattern -> Pattern slash Pattern
Pattern -> lparen Pattern+ rparen
Pattern -> literal
Pattern -> Pattern minus Pattern
Action -> bracegroup
Action ->
IdentOrLiteral -> ident
IdentOrLiteral -> literal
RustCode -> [^semicolon]+
Directive -> percent token ident RustCode semicolon
Directive -> percent token ident semicolon
Directive -> percent token 'error' semicolon
Directive -> percent start ident semicolon
Directive -> percent start 'error' semicolon
Directive -> percent eofdef RustCode semicolon
Directive -> percent eofdef semicolon
Directive -> percent tokentype RustCode semicolon
Directive -> percent tokentype semicolon
Directive -> percent userdata RustCode semicolon
Directive -> percent userdata semicolon
Directive -> percent left IdentOrLiteral+ semicolon
Directive -> percent left 'error' semicolon
Directive -> percent right IdentOrLiteral+ semicolon
Directive -> percent right 'error' semicolon
Directive -> percent precedence IdentOrLiteral+ semicolon
Directive -> percent precedence 'error' semicolon
Directive -> percent errortype RustCode semicolon
Directive -> percent errortype semicolon
Directive -> percent moduleprefix RustCode semicolon
Directive -> percent moduleprefix semicolon
Directive -> percent glr semicolon
Directive -> percent glr 'error' semicolon
Directive -> percent lalr semicolon
Directive -> percent lalr 'error' semicolon
Directive -> percent nooptim semicolon
Directive -> percent nooptim 'error' semicolon
Directive -> percent dense semicolon
Directive -> percent dense 'error' semicolon
Directive -> percent trace ident* semicolon
Directive -> percent trace 'error' semicolon
Directive -> percent filter RustCode semicolon
Directive -> percent filter semicolon
Directive -> percent runtime semicolon
Directive -> percent runtime 'error' semicolon
Directive -> percent location RustCode semicolon
Directive -> percent location semicolon
Directive -> percent 'error' semicolon
GrammarLine -> Rule
TokenMapped+ -> TokenMapped
TokenMapped+ -> TokenMapped+ TokenMapped
TokenMapped* ->
PrecDef+ -> PrecDef
PrecDef+ -> PrecDef+ PrecDef
PrecDef* ->
caret? -> caret
caret? ->
TerminalSetItem+ -> TerminalSetItem
TerminalSetItem+ -> TerminalSetItem+ TerminalSetItem
TerminalSetItem* ->
Pattern+ -> Pattern
Pattern+ -> Pattern+ Pattern
[^semicolon]+ -> [^semicolon]
[^semicolon]+ -> [^semicolon]+ [^semicolon]
IdentOrLiteral+ -> IdentOrLiteral
IdentOrLiteral+ -> IdentOrLiteral+ IdentOrLiteral
ident+ -> ident
ident+ -> ident+ ident
ident* ->
TokenMapped* -> TokenMapped+
PrecDef* -> PrecDef+
TerminalSetItem* -> TerminalSetItem+
[^semicolon] -> ident
[^semicolon] -> colon
[^semicolon] -> pipe
[^semicolon] -> percent
[^semicolon] -> equal
[^semicolon] -> plus
[^semicolon] -> star
[^semicolon] -> question
[^semicolon] -> caret
[^semicolon] -> minus
[^semicolon] -> exclamation
[^semicolon] -> slash
[^semicolon] -> dot
[^semicolon] -> literal
[^semicolon] -> parengroup
[^semicolon] -> bracegroup
[^semicolon] -> lparen
[^semicolon] -> rparen
[^semicolon] -> lbracket
[^semicolon] -> rbracket
[^semicolon] -> left
[^semicolon] -> right
[^semicolon] -> token
[^semicolon] -> start
[^semicolon] -> eofdef
[^semicolon] -> tokentype
[^semicolon] -> userdata
[^semicolon] -> errortype
[^semicolon] -> moduleprefix
[^semicolon] -> lalr
[^semicolon] -> glr
[^semicolon] -> prec
[^semicolon] -> precedence
[^semicolon] -> nooptim
[^semicolon] -> dense
[^semicolon] -> trace
[^semicolon] -> dprec
[^semicolon] -> filter
[^semicolon] -> runtime
[^semicolon] -> location
[^semicolon] -> <Others>
ident* -> ident+
GrammarLine -> Directive
Grammar -> GrammarLine+
GrammarLine+ -> GrammarLine
GrammarLine+ -> GrammarLine GrammarLine+
Augmented -> Grammar eof

*/
// =============================Generated Codes Begin==============================
#[doc = r" type alias for `Context`"]
#[allow(non_camel_case_types, dead_code)]
pub type GrammarContext = ::rusty_lr_core::parser::deterministic::Context<GrammarTokenData>;
#[doc = r" type alias for CFG production rule"]
#[allow(non_camel_case_types, dead_code)]
pub type GrammarRule = ::rusty_lr_core::rule::ProductionRule<&'static str, GrammarNonTerminals>;
#[doc = r" type alias for DFA state"]
#[allow(non_camel_case_types, dead_code)]
pub type GrammarState =
    ::rusty_lr_core::parser::deterministic::state::SparseState<GrammarNonTerminals>;
#[doc = r" type alias for `ParseError`"]
#[allow(non_camel_case_types, dead_code)]
pub type GrammarParseError = ::rusty_lr_core::parser::deterministic::ParseError<GrammarTokenData>;
#[doc = r" An enum that represents non-terminal symbols"]
#[allow(non_camel_case_types, dead_code)]
#[derive(
    Clone,
    Copy,
    std :: hash :: Hash,
    std :: cmp :: PartialEq,
    std :: cmp :: Eq,
    std :: cmp :: PartialOrd,
    std :: cmp :: Ord,
)]
pub enum GrammarNonTerminals {
    Rule,
    RuleType,
    RuleLines,
    RuleLine,
    PrecDef,
    TokenMapped,
    TerminalSetItem,
    TerminalSet,
    Pattern,
    Action,
    IdentOrLiteral,
    RustCode,
    Directive,
    GrammarLine,
    Grammar,
    error,
    _TokenMappedPlus16,
    _TokenMappedStar17,
    _PrecDefPlus18,
    _PrecDefStar19,
    _caretQuestion20,
    _TerminalSetItemPlus21,
    _TerminalSetItemStar22,
    _PatternPlus23,
    _TermSet24,
    __TermSet24Plus25,
    _IdentOrLiteralPlus26,
    _identPlus27,
    _identStar28,
    _GrammarLinePlus29,
    Augmented,
}
impl std::fmt::Display for GrammarNonTerminals {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        use rusty_lr_core::nonterminal::NonTerminal;
        write!(f, "{}", self.as_str())
    }
}
impl std::fmt::Debug for GrammarNonTerminals {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        use rusty_lr_core::nonterminal::NonTerminal;
        write!(f, "{}", self.as_str())
    }
}
impl ::rusty_lr_core::nonterminal::NonTerminal for GrammarNonTerminals {
    fn as_str(&self) -> &'static str {
        match self {
            GrammarNonTerminals::Rule => "Rule",
            GrammarNonTerminals::RuleType => "RuleType",
            GrammarNonTerminals::RuleLines => "RuleLines",
            GrammarNonTerminals::RuleLine => "RuleLine",
            GrammarNonTerminals::PrecDef => "PrecDef",
            GrammarNonTerminals::TokenMapped => "TokenMapped",
            GrammarNonTerminals::TerminalSetItem => "TerminalSetItem",
            GrammarNonTerminals::TerminalSet => "TerminalSet",
            GrammarNonTerminals::Pattern => "Pattern",
            GrammarNonTerminals::Action => "Action",
            GrammarNonTerminals::IdentOrLiteral => "IdentOrLiteral",
            GrammarNonTerminals::RustCode => "RustCode",
            GrammarNonTerminals::Directive => "Directive",
            GrammarNonTerminals::GrammarLine => "GrammarLine",
            GrammarNonTerminals::Grammar => "Grammar",
            GrammarNonTerminals::error => "'error'",
            GrammarNonTerminals::_TokenMappedPlus16 => "TokenMapped+",
            GrammarNonTerminals::_TokenMappedStar17 => "TokenMapped*",
            GrammarNonTerminals::_PrecDefPlus18 => "PrecDef+",
            GrammarNonTerminals::_PrecDefStar19 => "PrecDef*",
            GrammarNonTerminals::_caretQuestion20 => "caret?",
            GrammarNonTerminals::_TerminalSetItemPlus21 => "TerminalSetItem+",
            GrammarNonTerminals::_TerminalSetItemStar22 => "TerminalSetItem*",
            GrammarNonTerminals::_PatternPlus23 => "Pattern+",
            GrammarNonTerminals::_TermSet24 => "[^semicolon]",
            GrammarNonTerminals::__TermSet24Plus25 => "[^semicolon]+",
            GrammarNonTerminals::_IdentOrLiteralPlus26 => "IdentOrLiteral+",
            GrammarNonTerminals::_identPlus27 => "ident+",
            GrammarNonTerminals::_identStar28 => "ident*",
            GrammarNonTerminals::_GrammarLinePlus29 => "GrammarLine+",
            GrammarNonTerminals::Augmented => "Augmented",
        }
    }
    fn is_trace(&self) -> bool {
        match self {
            GrammarNonTerminals::Rule => false,
            GrammarNonTerminals::RuleType => false,
            GrammarNonTerminals::RuleLines => false,
            GrammarNonTerminals::RuleLine => false,
            GrammarNonTerminals::PrecDef => false,
            GrammarNonTerminals::TokenMapped => false,
            GrammarNonTerminals::TerminalSetItem => false,
            GrammarNonTerminals::TerminalSet => false,
            GrammarNonTerminals::Pattern => false,
            GrammarNonTerminals::Action => false,
            GrammarNonTerminals::IdentOrLiteral => false,
            GrammarNonTerminals::RustCode => false,
            GrammarNonTerminals::Directive => false,
            GrammarNonTerminals::GrammarLine => false,
            GrammarNonTerminals::Grammar => false,
            GrammarNonTerminals::error => false,
            GrammarNonTerminals::_TokenMappedPlus16 => false,
            GrammarNonTerminals::_TokenMappedStar17 => false,
            GrammarNonTerminals::_PrecDefPlus18 => false,
            GrammarNonTerminals::_PrecDefStar19 => false,
            GrammarNonTerminals::_caretQuestion20 => false,
            GrammarNonTerminals::_TerminalSetItemPlus21 => false,
            GrammarNonTerminals::_TerminalSetItemStar22 => false,
            GrammarNonTerminals::_PatternPlus23 => false,
            GrammarNonTerminals::_TermSet24 => false,
            GrammarNonTerminals::__TermSet24Plus25 => false,
            GrammarNonTerminals::_IdentOrLiteralPlus26 => false,
            GrammarNonTerminals::_identPlus27 => false,
            GrammarNonTerminals::_identStar28 => false,
            GrammarNonTerminals::_GrammarLinePlus29 => false,
            GrammarNonTerminals::Augmented => false,
        }
    }
    fn nonterm_type(&self) -> Option<::rusty_lr_core::nonterminal::NonTerminalType> {
        match self {
            GrammarNonTerminals::Rule => None,
            GrammarNonTerminals::RuleType => None,
            GrammarNonTerminals::RuleLines => None,
            GrammarNonTerminals::RuleLine => None,
            GrammarNonTerminals::PrecDef => None,
            GrammarNonTerminals::TokenMapped => None,
            GrammarNonTerminals::TerminalSetItem => None,
            GrammarNonTerminals::TerminalSet => None,
            GrammarNonTerminals::Pattern => None,
            GrammarNonTerminals::Action => None,
            GrammarNonTerminals::IdentOrLiteral => None,
            GrammarNonTerminals::RustCode => None,
            GrammarNonTerminals::Directive => None,
            GrammarNonTerminals::GrammarLine => None,
            GrammarNonTerminals::Grammar => None,
            GrammarNonTerminals::error => {
                Some(::rusty_lr_core::nonterminal::NonTerminalType::Error)
            }
            GrammarNonTerminals::_TokenMappedPlus16 => {
                Some(::rusty_lr_core::nonterminal::NonTerminalType::PlusLeft)
            }
            GrammarNonTerminals::_TokenMappedStar17 => {
                Some(::rusty_lr_core::nonterminal::NonTerminalType::Star)
            }
            GrammarNonTerminals::_PrecDefPlus18 => {
                Some(::rusty_lr_core::nonterminal::NonTerminalType::PlusLeft)
            }
            GrammarNonTerminals::_PrecDefStar19 => {
                Some(::rusty_lr_core::nonterminal::NonTerminalType::Star)
            }
            GrammarNonTerminals::_caretQuestion20 => {
                Some(::rusty_lr_core::nonterminal::NonTerminalType::Optional)
            }
            GrammarNonTerminals::_TerminalSetItemPlus21 => {
                Some(::rusty_lr_core::nonterminal::NonTerminalType::PlusLeft)
            }
            GrammarNonTerminals::_TerminalSetItemStar22 => {
                Some(::rusty_lr_core::nonterminal::NonTerminalType::Star)
            }
            GrammarNonTerminals::_PatternPlus23 => {
                Some(::rusty_lr_core::nonterminal::NonTerminalType::PlusLeft)
            }
            GrammarNonTerminals::_TermSet24 => {
                Some(::rusty_lr_core::nonterminal::NonTerminalType::TerminalSet)
            }
            GrammarNonTerminals::__TermSet24Plus25 => {
                Some(::rusty_lr_core::nonterminal::NonTerminalType::PlusLeft)
            }
            GrammarNonTerminals::_IdentOrLiteralPlus26 => {
                Some(::rusty_lr_core::nonterminal::NonTerminalType::PlusLeft)
            }
            GrammarNonTerminals::_identPlus27 => {
                Some(::rusty_lr_core::nonterminal::NonTerminalType::PlusLeft)
            }
            GrammarNonTerminals::_identStar28 => {
                Some(::rusty_lr_core::nonterminal::NonTerminalType::Star)
            }
            GrammarNonTerminals::_GrammarLinePlus29 => {
                Some(::rusty_lr_core::nonterminal::NonTerminalType::PlusRight)
            }
            GrammarNonTerminals::Augmented => {
                Some(::rusty_lr_core::nonterminal::NonTerminalType::Augmented)
            }
        }
    }
}
#[doc = r" enum for each non-terminal and terminal symbol, that actually hold data"]
#[allow(unused_braces, unused_parens, non_snake_case, non_camel_case_types)]
pub enum GrammarTokenData {
    Terminals(Lexed),
    Empty,
    Variant2(RuleDefArgs),
    Variant3(Option<Group>),
    Variant4(Vec<RuleLineArgs>),
    Variant5(RuleLineArgs),
    Variant6(PrecDPrecArgs),
    Variant7((Option<Ident>, PatternArgs)),
    Variant8(TerminalSetItem),
    Variant9(TerminalSet),
    Variant10(PatternArgs),
    Variant11(IdentOrLiteral),
    Variant12(TokenStream),
    Variant13(Vec<(Option<Ident>, PatternArgs)>),
    Variant14(Vec<PrecDPrecArgs>),
    Variant15(Option<Lexed>),
    Variant16(Vec<TerminalSetItem>),
    Variant17(Vec<PatternArgs>),
    Variant18(Vec<Lexed>),
    Variant19(Vec<IdentOrLiteral>),
}
#[allow(
    unused_braces,
    unused_parens,
    unused_variables,
    non_snake_case,
    unused_mut,
    dead_code
)]
impl GrammarTokenData {
    fn reduce_identity(args: &mut Vec<(Self, SpanPair)>, idx: usize) -> Self {
        let value = args.swap_remove(idx).0;
        args.clear();
        value
    }
    fn reduce_clear(args: &mut Vec<(Self, SpanPair)>) -> Self {
        args.clear();
        GrammarTokenData::Empty
    }
    #[doc = "Rule -> ident RuleType colon RuleLines semicolon"]
    #[inline]
    fn reduce_Rule_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant3(mut RuleType), __rustylr_location_RuleType) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut colon), __rustylr_location_colon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant4(mut RuleLines), __rustylr_location_RuleLines) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant2({
            let Lexed::Ident(ident) = ident else {
                unreachable!("Rule-Ident");
            };
            let span = __rustylr_location_colon.span();
            if let Some(fisrt) = RuleLines.first_mut() {
                fisrt.separator_span = span;
            }
            RuleDefArgs {
                name: ident,
                typename: RuleType.map(|t| t.stream()),
                rule_lines: RuleLines,
            }
        }))
    }
    #[doc = "RuleType -> parengroup"]
    #[inline]
    fn reduce_RuleType_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut parengroup), __rustylr_location_parengroup) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant3({
            let Lexed::ParenGroup(group) = parengroup else {
                unreachable!("RuleType - Group");
            };
            Some(group)
        }))
    }
    #[doc = "RuleType -> "]
    #[inline]
    fn reduce_RuleType_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        Ok(GrammarTokenData::Variant3({ None }))
    }
    #[doc = "RuleLines -> RuleLines pipe RuleLine"]
    #[inline]
    fn reduce_RuleLines_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant4(mut RuleLines), __rustylr_location_RuleLines) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut pipe), __rustylr_location_pipe) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant5(mut RuleLine), __rustylr_location_RuleLine) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant4({
            RuleLine.separator_span = __rustylr_location_pipe.span();
            RuleLines.push(RuleLine);
            RuleLines
        }))
    }
    #[doc = "RuleLines -> RuleLine"]
    #[inline]
    fn reduce_RuleLines_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant5(mut RuleLine), __rustylr_location_RuleLine) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant4({ vec![RuleLine] }))
    }
    #[doc = "RuleLine -> TokenMapped* PrecDef* Action"]
    #[inline]
    fn reduce_RuleLine_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant13(mut TokenMapped), __rustylr_location_TokenMapped) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant14(mut PrecDef), __rustylr_location_PrecDef) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant3(mut Action), __rustylr_location_Action) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant5({
            RuleLineArgs {
                tokens: TokenMapped,
                reduce_action: Action.map(|action| action.to_token_stream()),
                separator_span: Span::call_site(),
                precs: PrecDef,
                prec: None,
                dprec: None,
            }
        }))
    }
    #[doc = "PrecDef -> percent prec IdentOrLiteral"]
    #[inline]
    fn reduce_PrecDef_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut prec), __rustylr_location_prec) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant11(mut IdentOrLiteral), __rustylr_location_IdentOrLiteral) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant6({
            PrecDPrecArgs::Prec(IdentOrLiteral)
        }))
    }
    #[doc = "PrecDef -> percent prec 'error'"]
    #[inline]
    fn reduce_PrecDef_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut prec), __rustylr_location_prec) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        Ok(GrammarTokenData::Variant6({
            data.error_recovered.push(RecoveredError {
                message: "Expected <ident> to token or <literal>".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#operator-precedence"
                    .to_string(),
                span: __rustylr_location_error,
            });
            PrecDPrecArgs::None
        }))
    }
    #[doc = "PrecDef -> percent dprec literal"]
    #[inline]
    fn reduce_PrecDef_2(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut dprec), __rustylr_location_dprec) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut literal), __rustylr_location_literal) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant6({
            let Lexed::Literal(literal) = literal else {
                unreachable!("PrecDPrecArgs-DPrec");
            };
            PrecDPrecArgs::DPrec(literal)
        }))
    }
    #[doc = "PrecDef -> percent dprec 'error'"]
    #[inline]
    fn reduce_PrecDef_3(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut dprec), __rustylr_location_dprec) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        Ok(GrammarTokenData::Variant6({
            data.error_recovered.push(RecoveredError {
                message: "Expected integer literal".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#rule-priority"
                    .to_string(),
                span: __rustylr_location_error,
            });
            PrecDPrecArgs::None
        }))
    }
    #[doc = "PrecDef -> percent 'error'"]
    #[inline]
    fn reduce_PrecDef_4(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        Ok(GrammarTokenData::Variant6({
            data.error_recovered.push(RecoveredError {
                message: "Expected %prec or %dprec".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#operator-precedence"
                    .to_string(),
                span: __rustylr_location_error,
            });
            PrecDPrecArgs::None
        }))
    }
    #[doc = "TokenMapped -> Pattern"]
    #[inline]
    fn reduce_TokenMapped_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant10(mut Pattern), __rustylr_location_Pattern) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant7({ (None, Pattern) }))
    }
    #[doc = "TokenMapped -> ident equal Pattern"]
    #[inline]
    fn reduce_TokenMapped_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut equal), __rustylr_location_equal) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant10(mut Pattern), __rustylr_location_Pattern) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant7({
            let Lexed::Ident(ident) = ident else {
                unreachable!("Token-Ident");
            };
            (Some(ident), Pattern)
        }))
    }
    #[doc = "TerminalSetItem -> ident"]
    #[inline]
    fn reduce_TerminalSetItem_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant8({
            let Lexed::Ident(ident) = ident else {
                unreachable!("TerminalSetItem-Range1");
            };
            TerminalSetItem::Terminal(ident)
        }))
    }
    #[doc = "TerminalSetItem -> ident minus ident"]
    #[inline]
    fn reduce_TerminalSetItem_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut first), __rustylr_location_first) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut minus), __rustylr_location_minus) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut last), __rustylr_location_last) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant8({
            let Lexed::Ident(first) = first else {
                unreachable!("TerminalSetItem-Range1");
            };
            let Lexed::Ident(last) = last else {
                unreachable!("TerminalSetItem-Range3");
            };
            TerminalSetItem::Range(first, last)
        }))
    }
    #[doc = "TerminalSetItem -> ident minus 'error'"]
    #[inline]
    fn reduce_TerminalSetItem_2(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut minus), __rustylr_location_minus) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        Ok(GrammarTokenData::Variant8({
            data.error_recovered.push(RecoveredError {
                message: "Expected ident for terminal set".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#patterns".to_string(),
                span: __rustylr_location_error,
            });
            TerminalSetItem::Terminal(format_ident!("dummy"))
        }))
    }
    #[doc = "TerminalSetItem -> literal"]
    #[inline]
    fn reduce_TerminalSetItem_3(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut literal), __rustylr_location_literal) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant8({
            let Lexed::Literal(literal) = literal else {
                unreachable!("TerminalSetItem-Literal");
            };
            TerminalSetItem::Literal(literal)
        }))
    }
    #[doc = "TerminalSetItem -> literal minus literal"]
    #[inline]
    fn reduce_TerminalSetItem_4(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut first), __rustylr_location_first) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut minus), __rustylr_location_minus) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut last), __rustylr_location_last) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant8({
            let Lexed::Literal(first) = first else {
                unreachable!("TerminalSetItem-Range1");
            };
            let Lexed::Literal(last) = last else {
                unreachable!("TerminalSetItem-Range3");
            };
            TerminalSetItem::LiteralRange(first, last)
        }))
    }
    #[doc = "TerminalSetItem -> literal minus 'error'"]
    #[inline]
    fn reduce_TerminalSetItem_5(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut literal), __rustylr_location_literal) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut minus), __rustylr_location_minus) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        Ok(GrammarTokenData::Variant8({
            data.error_recovered.push(RecoveredError {
                message: "Expected literal for terminal set".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#patterns".to_string(),
                span: __rustylr_location_error,
            });
            TerminalSetItem::Terminal(format_ident!("dummy"))
        }))
    }
    #[doc = "TerminalSet -> lbracket caret? TerminalSetItem* rbracket"]
    #[inline]
    fn reduce_TerminalSet_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut lbracket), __rustylr_location_lbracket) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant15(mut caret), __rustylr_location_caret) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant16(mut TerminalSetItem), __rustylr_location_TerminalSetItem) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut rbracket), __rustylr_location_rbracket) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant9({
            TerminalSet {
                negate: caret.is_some(),
                items: TerminalSetItem,
                open_span: __rustylr_location_lbracket.span(),
                close_span: __rustylr_location_rbracket.span(),
            }
        }))
    }
    #[doc = "TerminalSet -> dot"]
    #[inline]
    fn reduce_TerminalSet_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut dot), __rustylr_location_dot) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant9({
            let span = __rustylr_location_dot.span();
            TerminalSet {
                negate: true,
                items: vec![],
                open_span: span,
                close_span: span,
            }
        }))
    }
    #[doc = "Pattern -> ident"]
    #[inline]
    fn reduce_Pattern_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant10({
            let Lexed::Ident(ident) = ident else {
                unreachable!("Pattern-Ident");
            };
            PatternArgs::Ident(ident)
        }))
    }
    #[doc = "Pattern -> Pattern plus"]
    #[inline]
    fn reduce_Pattern_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant10(mut Pattern), __rustylr_location_Pattern) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut plus), __rustylr_location_plus) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant10({
            let Lexed::Plus(plus) = plus else {
                unreachable!("Pattern-Plus");
            };
            PatternArgs::Plus(Box::new(Pattern), __rustylr_location_plus.span())
        }))
    }
    #[doc = "Pattern -> Pattern star"]
    #[inline]
    fn reduce_Pattern_2(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant10(mut Pattern), __rustylr_location_Pattern) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut star), __rustylr_location_star) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant10({
            PatternArgs::Star(Box::new(Pattern), __rustylr_location_star.span())
        }))
    }
    #[doc = "Pattern -> Pattern question"]
    #[inline]
    fn reduce_Pattern_3(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant10(mut Pattern), __rustylr_location_Pattern) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut question), __rustylr_location_question) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant10({
            PatternArgs::Question(Box::new(Pattern), __rustylr_location_question.span())
        }))
    }
    #[doc = "Pattern -> Pattern exclamation"]
    #[inline]
    fn reduce_Pattern_4(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant10(mut Pattern), __rustylr_location_Pattern) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut exclamation), __rustylr_location_exclamation) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant10({
            PatternArgs::Exclamation(Box::new(Pattern), __rustylr_location_exclamation.span())
        }))
    }
    #[doc = "Pattern -> TerminalSet"]
    #[inline]
    fn reduce_Pattern_5(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant9(mut TerminalSet), __rustylr_location_TerminalSet) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant10({
            PatternArgs::TerminalSet(TerminalSet)
        }))
    }
    #[doc = "Pattern -> Pattern slash Pattern"]
    #[inline]
    fn reduce_Pattern_6(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant10(mut p1), __rustylr_location_p1) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut slash), __rustylr_location_slash) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant10(mut lh), __rustylr_location_lh) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant10({
            PatternArgs::Lookaheads(Box::new(p1), Box::new(lh))
        }))
    }
    #[doc = "Pattern -> lparen Pattern+ rparen"]
    #[inline]
    fn reduce_Pattern_7(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut lparen), __rustylr_location_lparen) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant17(mut Pattern), __rustylr_location_Pattern) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut rparen), __rustylr_location_rparen) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant10({
            PatternArgs::Group(
                Pattern,
                __rustylr_location_lparen.span(),
                __rustylr_location_rparen.span(),
            )
        }))
    }
    #[doc = "Pattern -> literal"]
    #[inline]
    fn reduce_Pattern_8(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut literal), __rustylr_location_literal) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant10({
            let Lexed::Literal(literal) = literal else {
                unreachable!("Pattern-Literal");
            };
            PatternArgs::Literal(literal)
        }))
    }
    #[doc = "Pattern -> Pattern minus Pattern"]
    #[inline]
    fn reduce_Pattern_9(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant10(mut p1), __rustylr_location_p1) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut minus), __rustylr_location_minus) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant10(mut p2), __rustylr_location_p2) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant10({
            PatternArgs::Minus(Box::new(p1), Box::new(p2))
        }))
    }
    #[doc = "Action -> bracegroup"]
    #[inline]
    fn reduce_Action_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut bracegroup), __rustylr_location_bracegroup) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant3({
            let Lexed::BraceGroup(group) = bracegroup else {
                unreachable!("Action0");
            };
            Some(group)
        }))
    }
    #[doc = "Action -> "]
    #[inline]
    fn reduce_Action_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        Ok(GrammarTokenData::Variant3({ None }))
    }
    #[doc = "IdentOrLiteral -> ident"]
    #[inline]
    fn reduce_IdentOrLiteral_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant11({
            let Lexed::Ident(ident) = ident else {
                unreachable!("IdentOrLiteral-Ident");
            };
            IdentOrLiteral::Ident(ident)
        }))
    }
    #[doc = "IdentOrLiteral -> literal"]
    #[inline]
    fn reduce_IdentOrLiteral_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut literal), __rustylr_location_literal) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant11({
            let Lexed::Literal(literal) = literal else {
                unreachable!("IdentOrLiteral-Literal");
            };
            IdentOrLiteral::Literal(literal)
        }))
    }
    #[doc = "RustCode -> [^semicolon]+"]
    #[inline]
    fn reduce_RustCode_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant18(mut t), __rustylr_location_t) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant12({
            let mut tokens = TokenStream::new();
            for token in t.into_iter() {
                token.append_to_stream(&mut tokens);
            }
            tokens
        }))
    }
    #[doc = "Directive -> percent token ident RustCode semicolon"]
    #[inline]
    fn reduce_Directive_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut token), __rustylr_location_token) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant12(mut RustCode), __rustylr_location_RustCode) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            let Lexed::Ident(ident) = ident else {
                unreachable!("TokenDef-Ident");
            };
            data.terminals.push((ident, RustCode));
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent token ident semicolon"]
    #[inline]
    fn reduce_Directive_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut token), __rustylr_location_token) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data . error_recovered . push (RecoveredError { message : "Expected token definition" . to_string () , link : "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#token-definition-must-defined" . to_string () , span : __rustylr_location_ident }) ;
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent token 'error' semicolon"]
    #[inline]
    fn reduce_Directive_2(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut token), __rustylr_location_token) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data . error_recovered . push (RecoveredError { message : "Expected token name" . to_string () , link : "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#token-definition-must-defined" . to_string () , span : __rustylr_location_error }) ;
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent start ident semicolon"]
    #[inline]
    fn reduce_Directive_3(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut start), __rustylr_location_start) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            let Lexed::Ident(ident) = ident else {
                unreachable!("StartDef-Ident");
            };
            data.start_rule_name.push(ident);
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent start 'error' semicolon"]
    #[inline]
    fn reduce_Directive_4(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut start), __rustylr_location_start) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected start rule name".to_string(),
                link:
                    "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#start-symbol-must-defined"
                        .to_string(),
                span: __rustylr_location_error,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent eofdef RustCode semicolon"]
    #[inline]
    fn reduce_Directive_5(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut eofdef), __rustylr_location_eofdef) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant12(mut RustCode), __rustylr_location_RustCode) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.eof.push((__rustylr_location_eofdef.span(), RustCode));
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent eofdef semicolon"]
    #[inline]
    fn reduce_Directive_6(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut eofdef), __rustylr_location_eofdef) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected EOF definition".to_string(),
                link:
                    "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#eof-symbol-must-defined"
                        .to_string(),
                span: __rustylr_location_eofdef,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent tokentype RustCode semicolon"]
    #[inline]
    fn reduce_Directive_7(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut tokentype), __rustylr_location_tokentype) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant12(mut RustCode), __rustylr_location_RustCode) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.token_typename
                .push((__rustylr_location_tokentype.span(), RustCode));
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent tokentype semicolon"]
    #[inline]
    fn reduce_Directive_8(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut tokentype), __rustylr_location_tokentype) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected token type definition".to_string(),
                link:
                    "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#token-type-must-defined"
                        .to_string(),
                span: __rustylr_location_tokentype,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent userdata RustCode semicolon"]
    #[inline]
    fn reduce_Directive_9(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut userdata), __rustylr_location_userdata) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant12(mut RustCode), __rustylr_location_RustCode) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.userdata_typename
                .push((__rustylr_location_userdata.span(), RustCode));
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent userdata semicolon"]
    #[inline]
    fn reduce_Directive_10(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut userdata), __rustylr_location_userdata) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected userdata definition".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#userdata-type-optional"
                    .to_string(),
                span: __rustylr_location_userdata,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent left IdentOrLiteral+ semicolon"]
    #[inline]
    fn reduce_Directive_11(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut left), __rustylr_location_left) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant19(mut IdentOrLiteral), __rustylr_location_IdentOrLiteral) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.precedences.push(IdentOrLiteral.clone());
            data.reduce_types.push((ReduceType::Left, IdentOrLiteral));
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent left 'error' semicolon"]
    #[inline]
    fn reduce_Directive_12(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut left), __rustylr_location_left) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected <ident> to token or <literal>".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#operator-precedence"
                    .to_string(),
                span: __rustylr_location_error,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent right IdentOrLiteral+ semicolon"]
    #[inline]
    fn reduce_Directive_13(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut right), __rustylr_location_right) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant19(mut IdentOrLiteral), __rustylr_location_IdentOrLiteral) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.precedences.push(IdentOrLiteral.clone());
            data.reduce_types.push((ReduceType::Right, IdentOrLiteral));
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent right 'error' semicolon"]
    #[inline]
    fn reduce_Directive_14(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut right), __rustylr_location_right) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected <ident> to token or <literal>".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#operator-precedence"
                    .to_string(),
                span: __rustylr_location_error,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent precedence IdentOrLiteral+ semicolon"]
    #[inline]
    fn reduce_Directive_15(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut precedence), __rustylr_location_precedence) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant19(mut IdentOrLiteral), __rustylr_location_IdentOrLiteral) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.precedences.push(IdentOrLiteral);
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent precedence 'error' semicolon"]
    #[inline]
    fn reduce_Directive_16(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut precedence), __rustylr_location_precedence) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected <ident> to token or <literal>".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#operator-precedence"
                    .to_string(),
                span: __rustylr_location_error,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent errortype RustCode semicolon"]
    #[inline]
    fn reduce_Directive_17(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut errortype), __rustylr_location_errortype) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant12(mut RustCode), __rustylr_location_RustCode) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_typename
                .push((__rustylr_location_errortype.span(), RustCode));
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent errortype semicolon"]
    #[inline]
    fn reduce_Directive_18(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut errortype), __rustylr_location_errortype) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected error type definition".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#error-type-optional"
                    .to_string(),
                span: __rustylr_location_errortype,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent moduleprefix RustCode semicolon"]
    #[inline]
    fn reduce_Directive_19(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut moduleprefix), __rustylr_location_moduleprefix) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant12(mut RustCode), __rustylr_location_RustCode) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.module_prefix
                .push((__rustylr_location_moduleprefix.span(), RustCode));
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent moduleprefix semicolon"]
    #[inline]
    fn reduce_Directive_20(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut moduleprefix), __rustylr_location_moduleprefix) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected moduleprefix definition".to_string(),
                link: "This is hidden directive, user must not use this explicitly".to_string(),
                span: __rustylr_location_moduleprefix,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent glr semicolon"]
    #[inline]
    fn reduce_Directive_21(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut glr), __rustylr_location_glr) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.glr = true;
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent glr 'error' semicolon"]
    #[inline]
    fn reduce_Directive_22(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut glr), __rustylr_location_glr) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected semicolon".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#glr-parser-generation"
                    .to_string(),
                span: __rustylr_location_error,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent lalr semicolon"]
    #[inline]
    fn reduce_Directive_23(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut lalr), __rustylr_location_lalr) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.lalr = true;
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent lalr 'error' semicolon"]
    #[inline]
    fn reduce_Directive_24(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut lalr), __rustylr_location_lalr) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected semicolon".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#lalr-parser-generation"
                    .to_string(),
                span: __rustylr_location_error,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent nooptim semicolon"]
    #[inline]
    fn reduce_Directive_25(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut nooptim), __rustylr_location_nooptim) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.no_optim = true;
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent nooptim 'error' semicolon"]
    #[inline]
    fn reduce_Directive_26(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut nooptim), __rustylr_location_nooptim) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected semicolon".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#no-optimization"
                    .to_string(),
                span: __rustylr_location_error,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent dense semicolon"]
    #[inline]
    fn reduce_Directive_27(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut dense), __rustylr_location_dense) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.dense = true;
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent dense 'error' semicolon"]
    #[inline]
    fn reduce_Directive_28(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut dense), __rustylr_location_dense) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected semicolon".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#dense-parser-table"
                    .to_string(),
                span: __rustylr_location_error,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent trace ident* semicolon"]
    #[inline]
    fn reduce_Directive_29(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut trace), __rustylr_location_trace) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant18(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            let idents = ident.into_iter().map(|t| {
                let Lexed::Ident(ident) = t else {
                    unreachable!("Trace-Ident");
                };
                ident
            });
            data.traces.extend(idents);
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent trace 'error' semicolon"]
    #[inline]
    fn reduce_Directive_30(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut trace), __rustylr_location_trace) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected ident".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#tracing-non-terminals"
                    .to_string(),
                span: __rustylr_location_error,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent filter RustCode semicolon"]
    #[inline]
    fn reduce_Directive_31(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut filter), __rustylr_location_filter) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant12(mut RustCode), __rustylr_location_RustCode) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.filter = Some(RustCode);
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent filter semicolon"]
    #[inline]
    fn reduce_Directive_32(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut filter), __rustylr_location_filter) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected filter definition".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#filter-directive"
                    .to_string(),
                span: __rustylr_location_filter,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent runtime semicolon"]
    #[inline]
    fn reduce_Directive_33(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut runtime), __rustylr_location_runtime) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.compiled = false;
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent runtime 'error' semicolon"]
    #[inline]
    fn reduce_Directive_34(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut runtime), __rustylr_location_runtime) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected semicolon".to_string(),
                link:
                    "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#runtime-table-calculation"
                        .to_string(),
                span: __rustylr_location_error,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent location RustCode semicolon"]
    #[inline]
    fn reduce_Directive_35(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut location), __rustylr_location_location) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant12(mut RustCode), __rustylr_location_RustCode) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.location_typename = Some(RustCode);
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent location semicolon"]
    #[inline]
    fn reduce_Directive_36(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut location), __rustylr_location_location) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected location type definition".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#location-tracking"
                    .to_string(),
                span: __rustylr_location_location,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "Directive -> percent 'error' semicolon"]
    #[inline]
    fn reduce_Directive_37(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_error) = __rustylr_args.pop().unwrap();
        let (GrammarTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.error_recovered.push(RecoveredError {
                message: "Expected directive, e.g. %token, %start, %eof, ...".to_string(),
                link: "https://github.com/ehwan/RustyLR/blob/main/SYNTAX.md#syntax".to_string(),
                span: __rustylr_location_error,
            });
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "GrammarLine -> Rule"]
    #[inline]
    fn reduce_GrammarLine_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant2(mut Rule), __rustylr_location_Rule) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        {
            data.rules.push(Rule);
        }
        Ok(GrammarTokenData::Empty)
    }
    #[doc = "TokenMapped+ -> TokenMapped"]
    #[inline]
    fn reduce__TokenMappedPlus16_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant7(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant13({ vec![A] }))
    }
    #[doc = "TokenMapped+ -> TokenMapped+ TokenMapped"]
    #[inline]
    fn reduce__TokenMappedPlus16_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant13(mut Ap), __rustylr_location_Ap) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant7(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant13({
            Ap.push(A);
            Ap
        }))
    }
    #[doc = "TokenMapped* -> "]
    #[inline]
    fn reduce__TokenMappedStar17_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        Ok(GrammarTokenData::Variant13({ vec![] }))
    }
    #[doc = "PrecDef+ -> PrecDef"]
    #[inline]
    fn reduce__PrecDefPlus18_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant6(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant14({ vec![A] }))
    }
    #[doc = "PrecDef+ -> PrecDef+ PrecDef"]
    #[inline]
    fn reduce__PrecDefPlus18_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant14(mut Ap), __rustylr_location_Ap) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant6(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant14({
            Ap.push(A);
            Ap
        }))
    }
    #[doc = "PrecDef* -> "]
    #[inline]
    fn reduce__PrecDefStar19_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        Ok(GrammarTokenData::Variant14({ vec![] }))
    }
    #[doc = "caret? -> caret"]
    #[inline]
    fn reduce__caretQuestion20_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant15(Some(A)))
    }
    #[doc = "caret? -> "]
    #[inline]
    fn reduce__caretQuestion20_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        Ok(GrammarTokenData::Variant15({ None }))
    }
    #[doc = "TerminalSetItem+ -> TerminalSetItem"]
    #[inline]
    fn reduce__TerminalSetItemPlus21_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant8(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant16({ vec![A] }))
    }
    #[doc = "TerminalSetItem+ -> TerminalSetItem+ TerminalSetItem"]
    #[inline]
    fn reduce__TerminalSetItemPlus21_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant16(mut Ap), __rustylr_location_Ap) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant8(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant16({
            Ap.push(A);
            Ap
        }))
    }
    #[doc = "TerminalSetItem* -> "]
    #[inline]
    fn reduce__TerminalSetItemStar22_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        Ok(GrammarTokenData::Variant16({ vec![] }))
    }
    #[doc = "Pattern+ -> Pattern"]
    #[inline]
    fn reduce__PatternPlus23_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant10(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant17({ vec![A] }))
    }
    #[doc = "Pattern+ -> Pattern+ Pattern"]
    #[inline]
    fn reduce__PatternPlus23_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant17(mut Ap), __rustylr_location_Ap) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant10(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant17({
            Ap.push(A);
            Ap
        }))
    }
    #[doc = "[^semicolon]+ -> [^semicolon]"]
    #[inline]
    fn reduce___TermSet24Plus25_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant18({ vec![A] }))
    }
    #[doc = "[^semicolon]+ -> [^semicolon]+ [^semicolon]"]
    #[inline]
    fn reduce___TermSet24Plus25_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant18(mut Ap), __rustylr_location_Ap) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant18({
            Ap.push(A);
            Ap
        }))
    }
    #[doc = "IdentOrLiteral+ -> IdentOrLiteral"]
    #[inline]
    fn reduce__IdentOrLiteralPlus26_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant11(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant19({ vec![A] }))
    }
    #[doc = "IdentOrLiteral+ -> IdentOrLiteral+ IdentOrLiteral"]
    #[inline]
    fn reduce__IdentOrLiteralPlus26_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant19(mut Ap), __rustylr_location_Ap) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Variant11(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant19({
            Ap.push(A);
            Ap
        }))
    }
    #[doc = "ident+ -> ident"]
    #[inline]
    fn reduce__identPlus27_0(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Terminals(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant18({ vec![A] }))
    }
    #[doc = "ident+ -> ident+ ident"]
    #[inline]
    fn reduce__identPlus27_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        let (GrammarTokenData::Variant18(mut Ap), __rustylr_location_Ap) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (GrammarTokenData::Terminals(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(GrammarTokenData::Variant18({
            Ap.push(A);
            Ap
        }))
    }
    #[doc = "ident* -> "]
    #[inline]
    fn reduce__identStar28_1(
        __rustylr_args: &mut Vec<(Self, SpanPair)>,
        shift: &mut bool,
        lookahead: &Lexed,
        data: &mut GrammarArgs,
        __rustylr_location0: &mut SpanPair,
    ) -> Result<GrammarTokenData, ::rusty_lr_core::DefaultReduceActionError> {
        Ok(GrammarTokenData::Variant18({ vec![] }))
    }
}
#[allow(
    unused_braces,
    unused_parens,
    non_snake_case,
    non_camel_case_types,
    unused_variables
)]
impl ::rusty_lr_core::nonterminal::TokenData for GrammarTokenData {
    type Term = Lexed;
    type NonTerm = GrammarNonTerminals;
    type ReduceActionError = ::rusty_lr_core::DefaultReduceActionError;
    type UserData = GrammarArgs;
    type StartType = ();
    type Location = SpanPair;
    fn reduce_action(
        rule_index: usize,
        reduce_args: &mut Vec<(Self, Self::Location)>,
        shift: &mut bool,
        lookahead: &Self::Term,
        user_data: &mut Self::UserData,
        location0: &mut Self::Location,
    ) -> Result<Self, Self::ReduceActionError> {
        match rule_index {
            0usize => Self::reduce_Rule_0(reduce_args, shift, lookahead, user_data, location0),
            1usize => Self::reduce_RuleType_0(reduce_args, shift, lookahead, user_data, location0),
            2usize => Self::reduce_RuleType_1(reduce_args, shift, lookahead, user_data, location0),
            3usize => Self::reduce_RuleLines_0(reduce_args, shift, lookahead, user_data, location0),
            4usize => Self::reduce_RuleLines_1(reduce_args, shift, lookahead, user_data, location0),
            5usize => Self::reduce_RuleLine_0(reduce_args, shift, lookahead, user_data, location0),
            6usize => Self::reduce_PrecDef_0(reduce_args, shift, lookahead, user_data, location0),
            7usize => Self::reduce_PrecDef_1(reduce_args, shift, lookahead, user_data, location0),
            8usize => Self::reduce_PrecDef_2(reduce_args, shift, lookahead, user_data, location0),
            9usize => Self::reduce_PrecDef_3(reduce_args, shift, lookahead, user_data, location0),
            10usize => Self::reduce_PrecDef_4(reduce_args, shift, lookahead, user_data, location0),
            11usize => {
                Self::reduce_TokenMapped_0(reduce_args, shift, lookahead, user_data, location0)
            }
            12usize => {
                Self::reduce_TokenMapped_1(reduce_args, shift, lookahead, user_data, location0)
            }
            13usize => {
                Self::reduce_TerminalSetItem_0(reduce_args, shift, lookahead, user_data, location0)
            }
            14usize => {
                Self::reduce_TerminalSetItem_1(reduce_args, shift, lookahead, user_data, location0)
            }
            15usize => {
                Self::reduce_TerminalSetItem_2(reduce_args, shift, lookahead, user_data, location0)
            }
            16usize => {
                Self::reduce_TerminalSetItem_3(reduce_args, shift, lookahead, user_data, location0)
            }
            17usize => {
                Self::reduce_TerminalSetItem_4(reduce_args, shift, lookahead, user_data, location0)
            }
            18usize => {
                Self::reduce_TerminalSetItem_5(reduce_args, shift, lookahead, user_data, location0)
            }
            19usize => {
                Self::reduce_TerminalSet_0(reduce_args, shift, lookahead, user_data, location0)
            }
            20usize => {
                Self::reduce_TerminalSet_1(reduce_args, shift, lookahead, user_data, location0)
            }
            21usize => Self::reduce_Pattern_0(reduce_args, shift, lookahead, user_data, location0),
            22usize => Self::reduce_Pattern_1(reduce_args, shift, lookahead, user_data, location0),
            23usize => Self::reduce_Pattern_2(reduce_args, shift, lookahead, user_data, location0),
            24usize => Self::reduce_Pattern_3(reduce_args, shift, lookahead, user_data, location0),
            25usize => Self::reduce_Pattern_4(reduce_args, shift, lookahead, user_data, location0),
            26usize => Self::reduce_Pattern_5(reduce_args, shift, lookahead, user_data, location0),
            27usize => Self::reduce_Pattern_6(reduce_args, shift, lookahead, user_data, location0),
            28usize => Self::reduce_Pattern_7(reduce_args, shift, lookahead, user_data, location0),
            29usize => Self::reduce_Pattern_8(reduce_args, shift, lookahead, user_data, location0),
            30usize => Self::reduce_Pattern_9(reduce_args, shift, lookahead, user_data, location0),
            31usize => Self::reduce_Action_0(reduce_args, shift, lookahead, user_data, location0),
            32usize => Self::reduce_Action_1(reduce_args, shift, lookahead, user_data, location0),
            33usize => {
                Self::reduce_IdentOrLiteral_0(reduce_args, shift, lookahead, user_data, location0)
            }
            34usize => {
                Self::reduce_IdentOrLiteral_1(reduce_args, shift, lookahead, user_data, location0)
            }
            35usize => Self::reduce_RustCode_0(reduce_args, shift, lookahead, user_data, location0),
            36usize => {
                Self::reduce_Directive_0(reduce_args, shift, lookahead, user_data, location0)
            }
            37usize => {
                Self::reduce_Directive_1(reduce_args, shift, lookahead, user_data, location0)
            }
            38usize => {
                Self::reduce_Directive_2(reduce_args, shift, lookahead, user_data, location0)
            }
            39usize => {
                Self::reduce_Directive_3(reduce_args, shift, lookahead, user_data, location0)
            }
            40usize => {
                Self::reduce_Directive_4(reduce_args, shift, lookahead, user_data, location0)
            }
            41usize => {
                Self::reduce_Directive_5(reduce_args, shift, lookahead, user_data, location0)
            }
            42usize => {
                Self::reduce_Directive_6(reduce_args, shift, lookahead, user_data, location0)
            }
            43usize => {
                Self::reduce_Directive_7(reduce_args, shift, lookahead, user_data, location0)
            }
            44usize => {
                Self::reduce_Directive_8(reduce_args, shift, lookahead, user_data, location0)
            }
            45usize => {
                Self::reduce_Directive_9(reduce_args, shift, lookahead, user_data, location0)
            }
            46usize => {
                Self::reduce_Directive_10(reduce_args, shift, lookahead, user_data, location0)
            }
            47usize => {
                Self::reduce_Directive_11(reduce_args, shift, lookahead, user_data, location0)
            }
            48usize => {
                Self::reduce_Directive_12(reduce_args, shift, lookahead, user_data, location0)
            }
            49usize => {
                Self::reduce_Directive_13(reduce_args, shift, lookahead, user_data, location0)
            }
            50usize => {
                Self::reduce_Directive_14(reduce_args, shift, lookahead, user_data, location0)
            }
            51usize => {
                Self::reduce_Directive_15(reduce_args, shift, lookahead, user_data, location0)
            }
            52usize => {
                Self::reduce_Directive_16(reduce_args, shift, lookahead, user_data, location0)
            }
            53usize => {
                Self::reduce_Directive_17(reduce_args, shift, lookahead, user_data, location0)
            }
            54usize => {
                Self::reduce_Directive_18(reduce_args, shift, lookahead, user_data, location0)
            }
            55usize => {
                Self::reduce_Directive_19(reduce_args, shift, lookahead, user_data, location0)
            }
            56usize => {
                Self::reduce_Directive_20(reduce_args, shift, lookahead, user_data, location0)
            }
            57usize => {
                Self::reduce_Directive_21(reduce_args, shift, lookahead, user_data, location0)
            }
            58usize => {
                Self::reduce_Directive_22(reduce_args, shift, lookahead, user_data, location0)
            }
            59usize => {
                Self::reduce_Directive_23(reduce_args, shift, lookahead, user_data, location0)
            }
            60usize => {
                Self::reduce_Directive_24(reduce_args, shift, lookahead, user_data, location0)
            }
            61usize => {
                Self::reduce_Directive_25(reduce_args, shift, lookahead, user_data, location0)
            }
            62usize => {
                Self::reduce_Directive_26(reduce_args, shift, lookahead, user_data, location0)
            }
            63usize => {
                Self::reduce_Directive_27(reduce_args, shift, lookahead, user_data, location0)
            }
            64usize => {
                Self::reduce_Directive_28(reduce_args, shift, lookahead, user_data, location0)
            }
            65usize => {
                Self::reduce_Directive_29(reduce_args, shift, lookahead, user_data, location0)
            }
            66usize => {
                Self::reduce_Directive_30(reduce_args, shift, lookahead, user_data, location0)
            }
            67usize => {
                Self::reduce_Directive_31(reduce_args, shift, lookahead, user_data, location0)
            }
            68usize => {
                Self::reduce_Directive_32(reduce_args, shift, lookahead, user_data, location0)
            }
            69usize => {
                Self::reduce_Directive_33(reduce_args, shift, lookahead, user_data, location0)
            }
            70usize => {
                Self::reduce_Directive_34(reduce_args, shift, lookahead, user_data, location0)
            }
            71usize => {
                Self::reduce_Directive_35(reduce_args, shift, lookahead, user_data, location0)
            }
            72usize => {
                Self::reduce_Directive_36(reduce_args, shift, lookahead, user_data, location0)
            }
            73usize => {
                Self::reduce_Directive_37(reduce_args, shift, lookahead, user_data, location0)
            }
            74usize => {
                Self::reduce_GrammarLine_0(reduce_args, shift, lookahead, user_data, location0)
            }
            75usize => Self::reduce__TokenMappedPlus16_0(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            76usize => Self::reduce__TokenMappedPlus16_1(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            77usize => Self::reduce__TokenMappedStar17_1(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            78usize => {
                Self::reduce__PrecDefPlus18_0(reduce_args, shift, lookahead, user_data, location0)
            }
            79usize => {
                Self::reduce__PrecDefPlus18_1(reduce_args, shift, lookahead, user_data, location0)
            }
            80usize => {
                Self::reduce__PrecDefStar19_1(reduce_args, shift, lookahead, user_data, location0)
            }
            81usize => {
                Self::reduce__caretQuestion20_0(reduce_args, shift, lookahead, user_data, location0)
            }
            82usize => {
                Self::reduce__caretQuestion20_1(reduce_args, shift, lookahead, user_data, location0)
            }
            83usize => Self::reduce__TerminalSetItemPlus21_0(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            84usize => Self::reduce__TerminalSetItemPlus21_1(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            85usize => Self::reduce__TerminalSetItemStar22_1(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            86usize => {
                Self::reduce__PatternPlus23_0(reduce_args, shift, lookahead, user_data, location0)
            }
            87usize => {
                Self::reduce__PatternPlus23_1(reduce_args, shift, lookahead, user_data, location0)
            }
            88usize => Self::reduce___TermSet24Plus25_0(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            89usize => Self::reduce___TermSet24Plus25_1(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            90usize => Self::reduce__IdentOrLiteralPlus26_0(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            91usize => Self::reduce__IdentOrLiteralPlus26_1(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            92usize => {
                Self::reduce__identPlus27_0(reduce_args, shift, lookahead, user_data, location0)
            }
            93usize => {
                Self::reduce__identPlus27_1(reduce_args, shift, lookahead, user_data, location0)
            }
            94usize => {
                Self::reduce__identStar28_1(reduce_args, shift, lookahead, user_data, location0)
            }
            95usize..=139usize => Ok(Self::reduce_identity(reduce_args, 0usize)),
            140usize..=144usize => Ok(Self::reduce_clear(reduce_args)),
            _ => {
                unreachable!("Invalid Rule: {}", rule_index);
            }
        }
    }
    fn new_error_nonterm() -> Self {
        GrammarTokenData::Empty
    }
    fn new_terminal(term: Lexed) -> Self {
        GrammarTokenData::Terminals(term)
    }
}
#[allow(
    unused_braces,
    unused_parens,
    non_snake_case,
    non_camel_case_types,
    unused_variables
)]
impl TryFrom<GrammarTokenData> for () {
    type Error = ();
    fn try_from(token: GrammarTokenData) -> Result<Self, Self::Error> {
        match token {
            GrammarTokenData::Empty => Ok(()),
            _ => Err(()),
        }
    }
}
#[doc = r" A struct that holds the entire parser table and production rules."]
#[allow(
    unused_braces,
    unused_parens,
    unused_variables,
    non_snake_case,
    unused_mut
)]
pub struct GrammarParser {
    #[doc = r" production rules"]
    pub rules: Vec<GrammarRule>,
    #[doc = r" states"]
    pub states: Vec<GrammarState>,
    #[doc = r" terminal classes"]
    pub classes: Vec<Vec<&'static str>>,
}
impl ::rusty_lr_core::parser::Parser for GrammarParser {
    type Term = Lexed;
    type NonTerm = GrammarNonTerminals;
    type State = GrammarState;
    type TerminalClassElement = &'static str;
    fn get_rules(&self) -> &[GrammarRule] {
        &self.rules
    }
    fn get_states(&self) -> &[GrammarState] {
        &self.states
    }
    fn get_terminals(
        &self,
        i: usize,
    ) -> Option<impl IntoIterator<Item = Self::TerminalClassElement> + '_> {
        self.classes.get(i).map(|class| class.iter().copied())
    }
    fn to_terminal_class(&self, terminal: &Self::Term) -> usize {
        #[allow(unreachable_patterns)]
        match terminal {
            Lexed::Ident(_) => 0usize,
            Lexed::Colon(_) => 1usize,
            Lexed::Semicolon(_) => 2usize,
            Lexed::Pipe(_) => 3usize,
            Lexed::Percent(_) => 4usize,
            Lexed::Equal(_) => 5usize,
            Lexed::Plus(_) => 6usize,
            Lexed::Star(_) => 7usize,
            Lexed::Question(_) => 8usize,
            Lexed::Caret(_) => 9usize,
            Lexed::Minus(_) => 10usize,
            Lexed::Exclamation(_) => 11usize,
            Lexed::Slash(_) => 12usize,
            Lexed::Dot(_) => 13usize,
            Lexed::Literal(_) => 14usize,
            Lexed::ParenGroup(_) => 15usize,
            Lexed::BraceGroup(_) => 16usize,
            Lexed::LParen => 17usize,
            Lexed::RParen => 18usize,
            Lexed::LBracket => 19usize,
            Lexed::RBracket => 20usize,
            Lexed::Left(_) => 21usize,
            Lexed::Right(_) => 22usize,
            Lexed::Token(_) => 23usize,
            Lexed::Start(_) => 24usize,
            Lexed::EofDef(_) => 25usize,
            Lexed::TokenType(_) => 26usize,
            Lexed::UserData(_) => 27usize,
            Lexed::ErrorType(_) => 28usize,
            Lexed::ModulePrefix(_) => 29usize,
            Lexed::Lalr(_) => 30usize,
            Lexed::Glr(_) => 31usize,
            Lexed::Prec(_) => 32usize,
            Lexed::Precedence(_) => 33usize,
            Lexed::NoOptim(_) => 34usize,
            Lexed::Dense(_) => 35usize,
            Lexed::Trace(_) => 36usize,
            Lexed::DPrec(_) => 37usize,
            Lexed::Filter(_) => 38usize,
            Lexed::Runtime(_) => 39usize,
            Lexed::Location(_) => 40usize,
            Lexed::Eof => 41usize,
            _ => 42usize,
        }
    }
    fn get_error_nonterm(&self) -> Option<Self::NonTerm> {
        Some(GrammarNonTerminals::error)
    }
    fn precedence_types(&self) -> &[Option<rusty_lr_core::builder::ReduceType>] {
        &[]
    }
    fn class_precedence(&self, class: usize) -> Option<usize> {
        Some(0)
    }
}
#[doc = r" A struct that holds the whole parser table."]
#[allow(
    unused_braces,
    unused_parens,
    unused_variables,
    non_snake_case,
    unused_mut
)]
impl GrammarParser {
    #[doc = r" Calculates the states and parser tables from the grammar."]
    #[allow(clippy::clone_on_copy)]
    pub fn new() -> Self {
        let rules = vec![
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Rule,
                rule: vec![
                    ::rusty_lr_core::Token::Term(0usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::RuleType),
                    ::rusty_lr_core::Token::Term(1usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::RuleLines),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::RuleType,
                rule: vec![::rusty_lr_core::Token::Term(15usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::RuleType,
                rule: vec![],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::RuleLines,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::RuleLines),
                    ::rusty_lr_core::Token::Term(3usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::RuleLine),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::RuleLines,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::RuleLine,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::RuleLine,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_TokenMappedStar17),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_PrecDefStar19),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::Action),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::PrecDef,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(32usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::IdentOrLiteral),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::PrecDef,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(32usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::PrecDef,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(37usize),
                    ::rusty_lr_core::Token::Term(14usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::PrecDef,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(37usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::PrecDef,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::TokenMapped,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::Pattern,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::TokenMapped,
                rule: vec![
                    ::rusty_lr_core::Token::Term(0usize),
                    ::rusty_lr_core::Token::Term(5usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::Pattern),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::TerminalSetItem,
                rule: vec![::rusty_lr_core::Token::Term(0usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::TerminalSetItem,
                rule: vec![
                    ::rusty_lr_core::Token::Term(0usize),
                    ::rusty_lr_core::Token::Term(10usize),
                    ::rusty_lr_core::Token::Term(0usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::TerminalSetItem,
                rule: vec![
                    ::rusty_lr_core::Token::Term(0usize),
                    ::rusty_lr_core::Token::Term(10usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::TerminalSetItem,
                rule: vec![::rusty_lr_core::Token::Term(14usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::TerminalSetItem,
                rule: vec![
                    ::rusty_lr_core::Token::Term(14usize),
                    ::rusty_lr_core::Token::Term(10usize),
                    ::rusty_lr_core::Token::Term(14usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::TerminalSetItem,
                rule: vec![
                    ::rusty_lr_core::Token::Term(14usize),
                    ::rusty_lr_core::Token::Term(10usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::TerminalSet,
                rule: vec![
                    ::rusty_lr_core::Token::Term(19usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_caretQuestion20),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_TerminalSetItemStar22),
                    ::rusty_lr_core::Token::Term(20usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::TerminalSet,
                rule: vec![::rusty_lr_core::Token::Term(13usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Pattern,
                rule: vec![::rusty_lr_core::Token::Term(0usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Pattern,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::Pattern),
                    ::rusty_lr_core::Token::Term(6usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Pattern,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::Pattern),
                    ::rusty_lr_core::Token::Term(7usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Pattern,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::Pattern),
                    ::rusty_lr_core::Token::Term(8usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Pattern,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::Pattern),
                    ::rusty_lr_core::Token::Term(11usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Pattern,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::TerminalSet,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Pattern,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::Pattern),
                    ::rusty_lr_core::Token::Term(12usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::Pattern),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Pattern,
                rule: vec![
                    ::rusty_lr_core::Token::Term(17usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_PatternPlus23),
                    ::rusty_lr_core::Token::Term(18usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Pattern,
                rule: vec![::rusty_lr_core::Token::Term(14usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Pattern,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::Pattern),
                    ::rusty_lr_core::Token::Term(10usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::Pattern),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Action,
                rule: vec![::rusty_lr_core::Token::Term(16usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Action,
                rule: vec![],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::IdentOrLiteral,
                rule: vec![::rusty_lr_core::Token::Term(0usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::IdentOrLiteral,
                rule: vec![::rusty_lr_core::Token::Term(14usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::RustCode,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::__TermSet24Plus25,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(23usize),
                    ::rusty_lr_core::Token::Term(0usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::RustCode),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(23usize),
                    ::rusty_lr_core::Token::Term(0usize),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(23usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(24usize),
                    ::rusty_lr_core::Token::Term(0usize),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(24usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(25usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::RustCode),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(25usize),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(26usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::RustCode),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(26usize),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(27usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::RustCode),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(27usize),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(21usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_IdentOrLiteralPlus26),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(21usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(22usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_IdentOrLiteralPlus26),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(22usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(33usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_IdentOrLiteralPlus26),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(33usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(28usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::RustCode),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(28usize),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(29usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::RustCode),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(29usize),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(31usize),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(31usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(30usize),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(30usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(34usize),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(34usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(35usize),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(35usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(36usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_identStar28),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(36usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(38usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::RustCode),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(38usize),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(39usize),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(39usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(40usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::RustCode),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::Term(40usize),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Directive,
                rule: vec![
                    ::rusty_lr_core::Token::Term(4usize),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::error),
                    ::rusty_lr_core::Token::Term(2usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::GrammarLine,
                rule: vec![::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::Rule)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TokenMappedPlus16,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::TokenMapped,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TokenMappedPlus16,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_TokenMappedPlus16),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::TokenMapped),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TokenMappedStar17,
                rule: vec![],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_PrecDefPlus18,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::PrecDef,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_PrecDefPlus18,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_PrecDefPlus18),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::PrecDef),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_PrecDefStar19,
                rule: vec![],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_caretQuestion20,
                rule: vec![::rusty_lr_core::Token::Term(9usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_caretQuestion20,
                rule: vec![],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TerminalSetItemPlus21,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::TerminalSetItem,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TerminalSetItemPlus21,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_TerminalSetItemPlus21),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::TerminalSetItem),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TerminalSetItemStar22,
                rule: vec![],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_PatternPlus23,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::Pattern,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_PatternPlus23,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_PatternPlus23),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::Pattern),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::__TermSet24Plus25,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::_TermSet24,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::__TermSet24Plus25,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::__TermSet24Plus25),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_TermSet24),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_IdentOrLiteralPlus26,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::IdentOrLiteral,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_IdentOrLiteralPlus26,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_IdentOrLiteralPlus26),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::IdentOrLiteral),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_identPlus27,
                rule: vec![::rusty_lr_core::Token::Term(0usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_identPlus27,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_identPlus27),
                    ::rusty_lr_core::Token::Term(0usize),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_identStar28,
                rule: vec![],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TokenMappedStar17,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::_TokenMappedPlus16,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_PrecDefStar19,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::_PrecDefPlus18,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TerminalSetItemStar22,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::_TerminalSetItemPlus21,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(0usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(1usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(3usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(4usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(5usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(6usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(7usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(8usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(9usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(10usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(11usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(12usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(13usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(14usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(15usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(16usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(17usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(18usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(19usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(20usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(21usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(22usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(23usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(24usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(25usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(26usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(27usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(28usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(29usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(30usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(31usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(32usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(33usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(34usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(35usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(36usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(37usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(38usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(39usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(40usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_TermSet24,
                rule: vec![::rusty_lr_core::Token::Term(42usize)],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_identStar28,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::_identPlus27,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::GrammarLine,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::Directive,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Grammar,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::_GrammarLinePlus29,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_GrammarLinePlus29,
                rule: vec![::rusty_lr_core::Token::NonTerm(
                    GrammarNonTerminals::GrammarLine,
                )],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::_GrammarLinePlus29,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::GrammarLine),
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::_GrammarLinePlus29),
                ],
            },
            ::rusty_lr_core::rule::ProductionRule {
                name: GrammarNonTerminals::Augmented,
                rule: vec![
                    ::rusty_lr_core::Token::NonTerm(GrammarNonTerminals::Grammar),
                    ::rusty_lr_core::Token::Term(41usize),
                ],
            },
        ];
        let terminal_class_names = vec![
            "ident",
            "colon",
            "semicolon",
            "pipe",
            "percent",
            "equal",
            "plus",
            "star",
            "question",
            "caret",
            "minus",
            "exclamation",
            "slash",
            "dot",
            "literal",
            "parengroup",
            "bracegroup",
            "lparen",
            "rparen",
            "lbracket",
            "rbracket",
            "left",
            "right",
            "token",
            "start",
            "eofdef",
            "tokentype",
            "userdata",
            "errortype",
            "moduleprefix",
            "lalr",
            "glr",
            "prec",
            "precedence",
            "nooptim",
            "dense",
            "trace",
            "dprec",
            "filter",
            "runtime",
            "location",
            "eof",
            "<Others>",
        ];
        let rules = rules
            .into_iter()
            .map(move |rule| rule.map(|term| terminal_class_names[term], |nonterm| nonterm))
            .collect();
        let states = vec![
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (4usize, 67usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::Rule, 199usize),
                    (GrammarNonTerminals::Directive, 200usize),
                    (GrammarNonTerminals::GrammarLine, 201usize),
                    (GrammarNonTerminals::Grammar, 203usize),
                    (GrammarNonTerminals::_GrammarLinePlus29, 205usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 0usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 36usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 37usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 38usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 39usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 40usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 41usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 140usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 141usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 142usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 143usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 144usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(15usize, 2usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::RuleType,
                    3usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([(
                    1usize,
                    std::collections::BTreeSet::from([2usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 0usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 1usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 2usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    1usize,
                    std::collections::BTreeSet::from([1usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 1usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(1usize, 4usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 0usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 5usize),
                    (13usize, 8usize),
                    (14usize, 9usize),
                    (17usize, 10usize),
                    (19usize, 11usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::RuleLines, 41usize),
                    (GrammarNonTerminals::RuleLine, 66usize),
                    (GrammarNonTerminals::TokenMapped, 45usize),
                    (GrammarNonTerminals::TerminalSet, 27usize),
                    (GrammarNonTerminals::Pattern, 46usize),
                    (GrammarNonTerminals::_TokenMappedPlus16, 47usize),
                    (GrammarNonTerminals::_TokenMappedStar17, 49usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([77usize])),
                    (3usize, std::collections::BTreeSet::from([77usize])),
                    (4usize, std::collections::BTreeSet::from([77usize])),
                    (16usize, std::collections::BTreeSet::from([77usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 0usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 3usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 4usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 19usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 26usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 28usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 76usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 77usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 95usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(5usize, 6usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([21usize])),
                    (2usize, std::collections::BTreeSet::from([21usize])),
                    (3usize, std::collections::BTreeSet::from([21usize])),
                    (4usize, std::collections::BTreeSet::from([21usize])),
                    (6usize, std::collections::BTreeSet::from([21usize])),
                    (7usize, std::collections::BTreeSet::from([21usize])),
                    (8usize, std::collections::BTreeSet::from([21usize])),
                    (10usize, std::collections::BTreeSet::from([21usize])),
                    (11usize, std::collections::BTreeSet::from([21usize])),
                    (12usize, std::collections::BTreeSet::from([21usize])),
                    (13usize, std::collections::BTreeSet::from([21usize])),
                    (14usize, std::collections::BTreeSet::from([21usize])),
                    (16usize, std::collections::BTreeSet::from([21usize])),
                    (17usize, std::collections::BTreeSet::from([21usize])),
                    (19usize, std::collections::BTreeSet::from([21usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 7usize),
                    (13usize, 8usize),
                    (14usize, 9usize),
                    (17usize, 10usize),
                    (19usize, 11usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::TerminalSet, 27usize),
                    (GrammarNonTerminals::Pattern, 40usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 19usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 26usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 28usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([21usize])),
                    (2usize, std::collections::BTreeSet::from([21usize])),
                    (3usize, std::collections::BTreeSet::from([21usize])),
                    (4usize, std::collections::BTreeSet::from([21usize])),
                    (6usize, std::collections::BTreeSet::from([21usize])),
                    (7usize, std::collections::BTreeSet::from([21usize])),
                    (8usize, std::collections::BTreeSet::from([21usize])),
                    (10usize, std::collections::BTreeSet::from([21usize])),
                    (11usize, std::collections::BTreeSet::from([21usize])),
                    (12usize, std::collections::BTreeSet::from([21usize])),
                    (13usize, std::collections::BTreeSet::from([21usize])),
                    (14usize, std::collections::BTreeSet::from([21usize])),
                    (16usize, std::collections::BTreeSet::from([21usize])),
                    (17usize, std::collections::BTreeSet::from([21usize])),
                    (18usize, std::collections::BTreeSet::from([21usize])),
                    (19usize, std::collections::BTreeSet::from([21usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([20usize])),
                    (2usize, std::collections::BTreeSet::from([20usize])),
                    (3usize, std::collections::BTreeSet::from([20usize])),
                    (4usize, std::collections::BTreeSet::from([20usize])),
                    (6usize, std::collections::BTreeSet::from([20usize])),
                    (7usize, std::collections::BTreeSet::from([20usize])),
                    (8usize, std::collections::BTreeSet::from([20usize])),
                    (10usize, std::collections::BTreeSet::from([20usize])),
                    (11usize, std::collections::BTreeSet::from([20usize])),
                    (12usize, std::collections::BTreeSet::from([20usize])),
                    (13usize, std::collections::BTreeSet::from([20usize])),
                    (14usize, std::collections::BTreeSet::from([20usize])),
                    (16usize, std::collections::BTreeSet::from([20usize])),
                    (17usize, std::collections::BTreeSet::from([20usize])),
                    (18usize, std::collections::BTreeSet::from([20usize])),
                    (19usize, std::collections::BTreeSet::from([20usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([29usize])),
                    (2usize, std::collections::BTreeSet::from([29usize])),
                    (3usize, std::collections::BTreeSet::from([29usize])),
                    (4usize, std::collections::BTreeSet::from([29usize])),
                    (6usize, std::collections::BTreeSet::from([29usize])),
                    (7usize, std::collections::BTreeSet::from([29usize])),
                    (8usize, std::collections::BTreeSet::from([29usize])),
                    (10usize, std::collections::BTreeSet::from([29usize])),
                    (11usize, std::collections::BTreeSet::from([29usize])),
                    (12usize, std::collections::BTreeSet::from([29usize])),
                    (13usize, std::collections::BTreeSet::from([29usize])),
                    (14usize, std::collections::BTreeSet::from([29usize])),
                    (16usize, std::collections::BTreeSet::from([29usize])),
                    (17usize, std::collections::BTreeSet::from([29usize])),
                    (18usize, std::collections::BTreeSet::from([29usize])),
                    (19usize, std::collections::BTreeSet::from([29usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 7usize),
                    (13usize, 8usize),
                    (14usize, 9usize),
                    (17usize, 10usize),
                    (19usize, 11usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::TerminalSet, 27usize),
                    (GrammarNonTerminals::Pattern, 28usize),
                    (GrammarNonTerminals::_PatternPlus23, 37usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 19usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 26usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 28usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 28usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 86usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 87usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(9usize, 12usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::_caretQuestion20,
                    13usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([82usize])),
                    (14usize, std::collections::BTreeSet::from([82usize])),
                    (20usize, std::collections::BTreeSet::from([82usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 19usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 81usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 82usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([81usize])),
                    (14usize, std::collections::BTreeSet::from([81usize])),
                    (20usize, std::collections::BTreeSet::from([81usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 81usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 14usize),
                    (14usize, 18usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::TerminalSetItem, 22usize),
                    (GrammarNonTerminals::_TerminalSetItemPlus21, 23usize),
                    (GrammarNonTerminals::_TerminalSetItemStar22, 25usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([(
                    20usize,
                    std::collections::BTreeSet::from([85usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 16usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 18usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 19usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 84usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 85usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 97usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(10usize, 15usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([13usize])),
                    (14usize, std::collections::BTreeSet::from([13usize])),
                    (20usize, std::collections::BTreeSet::from([13usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 16usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::error,
                    17usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([14usize])),
                    (14usize, std::collections::BTreeSet::from([14usize])),
                    (20usize, std::collections::BTreeSet::from([14usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([15usize])),
                    (14usize, std::collections::BTreeSet::from([15usize])),
                    (20usize, std::collections::BTreeSet::from([15usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(10usize, 19usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([16usize])),
                    (14usize, std::collections::BTreeSet::from([16usize])),
                    (20usize, std::collections::BTreeSet::from([16usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 16usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 18usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(14usize, 20usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::error,
                    21usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 18usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([17usize])),
                    (14usize, std::collections::BTreeSet::from([17usize])),
                    (20usize, std::collections::BTreeSet::from([17usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([18usize])),
                    (14usize, std::collections::BTreeSet::from([18usize])),
                    (20usize, std::collections::BTreeSet::from([18usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 18usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([83usize])),
                    (14usize, std::collections::BTreeSet::from([83usize])),
                    (20usize, std::collections::BTreeSet::from([83usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 14usize),
                    (14usize, 18usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::TerminalSetItem,
                    24usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([(
                    20usize,
                    std::collections::BTreeSet::from([97usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 16usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 18usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 84usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 97usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([84usize])),
                    (14usize, std::collections::BTreeSet::from([84usize])),
                    (20usize, std::collections::BTreeSet::from([84usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 84usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(20usize, 26usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 19usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([19usize])),
                    (2usize, std::collections::BTreeSet::from([19usize])),
                    (3usize, std::collections::BTreeSet::from([19usize])),
                    (4usize, std::collections::BTreeSet::from([19usize])),
                    (6usize, std::collections::BTreeSet::from([19usize])),
                    (7usize, std::collections::BTreeSet::from([19usize])),
                    (8usize, std::collections::BTreeSet::from([19usize])),
                    (10usize, std::collections::BTreeSet::from([19usize])),
                    (11usize, std::collections::BTreeSet::from([19usize])),
                    (12usize, std::collections::BTreeSet::from([19usize])),
                    (13usize, std::collections::BTreeSet::from([19usize])),
                    (14usize, std::collections::BTreeSet::from([19usize])),
                    (16usize, std::collections::BTreeSet::from([19usize])),
                    (17usize, std::collections::BTreeSet::from([19usize])),
                    (18usize, std::collections::BTreeSet::from([19usize])),
                    (19usize, std::collections::BTreeSet::from([19usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 19usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([26usize])),
                    (2usize, std::collections::BTreeSet::from([26usize])),
                    (3usize, std::collections::BTreeSet::from([26usize])),
                    (4usize, std::collections::BTreeSet::from([26usize])),
                    (6usize, std::collections::BTreeSet::from([26usize])),
                    (7usize, std::collections::BTreeSet::from([26usize])),
                    (8usize, std::collections::BTreeSet::from([26usize])),
                    (10usize, std::collections::BTreeSet::from([26usize])),
                    (11usize, std::collections::BTreeSet::from([26usize])),
                    (12usize, std::collections::BTreeSet::from([26usize])),
                    (13usize, std::collections::BTreeSet::from([26usize])),
                    (14usize, std::collections::BTreeSet::from([26usize])),
                    (16usize, std::collections::BTreeSet::from([26usize])),
                    (17usize, std::collections::BTreeSet::from([26usize])),
                    (18usize, std::collections::BTreeSet::from([26usize])),
                    (19usize, std::collections::BTreeSet::from([26usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 26usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (6usize, 29usize),
                    (7usize, 30usize),
                    (8usize, 31usize),
                    (10usize, 32usize),
                    (11usize, 34usize),
                    (12usize, 35usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([86usize])),
                    (13usize, std::collections::BTreeSet::from([86usize])),
                    (14usize, std::collections::BTreeSet::from([86usize])),
                    (17usize, std::collections::BTreeSet::from([86usize])),
                    (18usize, std::collections::BTreeSet::from([86usize])),
                    (19usize, std::collections::BTreeSet::from([86usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 86usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([22usize])),
                    (2usize, std::collections::BTreeSet::from([22usize])),
                    (3usize, std::collections::BTreeSet::from([22usize])),
                    (4usize, std::collections::BTreeSet::from([22usize])),
                    (6usize, std::collections::BTreeSet::from([22usize])),
                    (7usize, std::collections::BTreeSet::from([22usize])),
                    (8usize, std::collections::BTreeSet::from([22usize])),
                    (10usize, std::collections::BTreeSet::from([22usize])),
                    (11usize, std::collections::BTreeSet::from([22usize])),
                    (12usize, std::collections::BTreeSet::from([22usize])),
                    (13usize, std::collections::BTreeSet::from([22usize])),
                    (14usize, std::collections::BTreeSet::from([22usize])),
                    (16usize, std::collections::BTreeSet::from([22usize])),
                    (17usize, std::collections::BTreeSet::from([22usize])),
                    (18usize, std::collections::BTreeSet::from([22usize])),
                    (19usize, std::collections::BTreeSet::from([22usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([23usize])),
                    (2usize, std::collections::BTreeSet::from([23usize])),
                    (3usize, std::collections::BTreeSet::from([23usize])),
                    (4usize, std::collections::BTreeSet::from([23usize])),
                    (6usize, std::collections::BTreeSet::from([23usize])),
                    (7usize, std::collections::BTreeSet::from([23usize])),
                    (8usize, std::collections::BTreeSet::from([23usize])),
                    (10usize, std::collections::BTreeSet::from([23usize])),
                    (11usize, std::collections::BTreeSet::from([23usize])),
                    (12usize, std::collections::BTreeSet::from([23usize])),
                    (13usize, std::collections::BTreeSet::from([23usize])),
                    (14usize, std::collections::BTreeSet::from([23usize])),
                    (16usize, std::collections::BTreeSet::from([23usize])),
                    (17usize, std::collections::BTreeSet::from([23usize])),
                    (18usize, std::collections::BTreeSet::from([23usize])),
                    (19usize, std::collections::BTreeSet::from([23usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([24usize])),
                    (2usize, std::collections::BTreeSet::from([24usize])),
                    (3usize, std::collections::BTreeSet::from([24usize])),
                    (4usize, std::collections::BTreeSet::from([24usize])),
                    (6usize, std::collections::BTreeSet::from([24usize])),
                    (7usize, std::collections::BTreeSet::from([24usize])),
                    (8usize, std::collections::BTreeSet::from([24usize])),
                    (10usize, std::collections::BTreeSet::from([24usize])),
                    (11usize, std::collections::BTreeSet::from([24usize])),
                    (12usize, std::collections::BTreeSet::from([24usize])),
                    (13usize, std::collections::BTreeSet::from([24usize])),
                    (14usize, std::collections::BTreeSet::from([24usize])),
                    (16usize, std::collections::BTreeSet::from([24usize])),
                    (17usize, std::collections::BTreeSet::from([24usize])),
                    (18usize, std::collections::BTreeSet::from([24usize])),
                    (19usize, std::collections::BTreeSet::from([24usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 7usize),
                    (13usize, 8usize),
                    (14usize, 9usize),
                    (17usize, 10usize),
                    (19usize, 11usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::TerminalSet, 27usize),
                    (GrammarNonTerminals::Pattern, 33usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 19usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 26usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 28usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (6usize, 29usize),
                    (7usize, 30usize),
                    (8usize, 31usize),
                    (11usize, 34usize),
                    (12usize, 35usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([30usize])),
                    (2usize, std::collections::BTreeSet::from([30usize])),
                    (3usize, std::collections::BTreeSet::from([30usize])),
                    (4usize, std::collections::BTreeSet::from([30usize])),
                    (10usize, std::collections::BTreeSet::from([30usize])),
                    (13usize, std::collections::BTreeSet::from([30usize])),
                    (14usize, std::collections::BTreeSet::from([30usize])),
                    (16usize, std::collections::BTreeSet::from([30usize])),
                    (17usize, std::collections::BTreeSet::from([30usize])),
                    (18usize, std::collections::BTreeSet::from([30usize])),
                    (19usize, std::collections::BTreeSet::from([30usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([25usize])),
                    (2usize, std::collections::BTreeSet::from([25usize])),
                    (3usize, std::collections::BTreeSet::from([25usize])),
                    (4usize, std::collections::BTreeSet::from([25usize])),
                    (6usize, std::collections::BTreeSet::from([25usize])),
                    (7usize, std::collections::BTreeSet::from([25usize])),
                    (8usize, std::collections::BTreeSet::from([25usize])),
                    (10usize, std::collections::BTreeSet::from([25usize])),
                    (11usize, std::collections::BTreeSet::from([25usize])),
                    (12usize, std::collections::BTreeSet::from([25usize])),
                    (13usize, std::collections::BTreeSet::from([25usize])),
                    (14usize, std::collections::BTreeSet::from([25usize])),
                    (16usize, std::collections::BTreeSet::from([25usize])),
                    (17usize, std::collections::BTreeSet::from([25usize])),
                    (18usize, std::collections::BTreeSet::from([25usize])),
                    (19usize, std::collections::BTreeSet::from([25usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 7usize),
                    (13usize, 8usize),
                    (14usize, 9usize),
                    (17usize, 10usize),
                    (19usize, 11usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::TerminalSet, 27usize),
                    (GrammarNonTerminals::Pattern, 36usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 19usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 26usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 28usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (6usize, 29usize),
                    (7usize, 30usize),
                    (8usize, 31usize),
                    (11usize, 34usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([27usize])),
                    (2usize, std::collections::BTreeSet::from([27usize])),
                    (3usize, std::collections::BTreeSet::from([27usize])),
                    (4usize, std::collections::BTreeSet::from([27usize])),
                    (10usize, std::collections::BTreeSet::from([27usize])),
                    (12usize, std::collections::BTreeSet::from([27usize])),
                    (13usize, std::collections::BTreeSet::from([27usize])),
                    (14usize, std::collections::BTreeSet::from([27usize])),
                    (16usize, std::collections::BTreeSet::from([27usize])),
                    (17usize, std::collections::BTreeSet::from([27usize])),
                    (18usize, std::collections::BTreeSet::from([27usize])),
                    (19usize, std::collections::BTreeSet::from([27usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 7usize),
                    (13usize, 8usize),
                    (14usize, 9usize),
                    (17usize, 10usize),
                    (18usize, 38usize),
                    (19usize, 11usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::TerminalSet, 27usize),
                    (GrammarNonTerminals::Pattern, 39usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 19usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 26usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 28usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 28usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 87usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([28usize])),
                    (2usize, std::collections::BTreeSet::from([28usize])),
                    (3usize, std::collections::BTreeSet::from([28usize])),
                    (4usize, std::collections::BTreeSet::from([28usize])),
                    (6usize, std::collections::BTreeSet::from([28usize])),
                    (7usize, std::collections::BTreeSet::from([28usize])),
                    (8usize, std::collections::BTreeSet::from([28usize])),
                    (10usize, std::collections::BTreeSet::from([28usize])),
                    (11usize, std::collections::BTreeSet::from([28usize])),
                    (12usize, std::collections::BTreeSet::from([28usize])),
                    (13usize, std::collections::BTreeSet::from([28usize])),
                    (14usize, std::collections::BTreeSet::from([28usize])),
                    (16usize, std::collections::BTreeSet::from([28usize])),
                    (17usize, std::collections::BTreeSet::from([28usize])),
                    (18usize, std::collections::BTreeSet::from([28usize])),
                    (19usize, std::collections::BTreeSet::from([28usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 28usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (6usize, 29usize),
                    (7usize, 30usize),
                    (8usize, 31usize),
                    (10usize, 32usize),
                    (11usize, 34usize),
                    (12usize, 35usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([87usize])),
                    (13usize, std::collections::BTreeSet::from([87usize])),
                    (14usize, std::collections::BTreeSet::from([87usize])),
                    (17usize, std::collections::BTreeSet::from([87usize])),
                    (18usize, std::collections::BTreeSet::from([87usize])),
                    (19usize, std::collections::BTreeSet::from([87usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 87usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (6usize, 29usize),
                    (7usize, 30usize),
                    (8usize, 31usize),
                    (10usize, 32usize),
                    (11usize, 34usize),
                    (12usize, 35usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([12usize])),
                    (2usize, std::collections::BTreeSet::from([12usize])),
                    (3usize, std::collections::BTreeSet::from([12usize])),
                    (4usize, std::collections::BTreeSet::from([12usize])),
                    (13usize, std::collections::BTreeSet::from([12usize])),
                    (14usize, std::collections::BTreeSet::from([12usize])),
                    (16usize, std::collections::BTreeSet::from([12usize])),
                    (17usize, std::collections::BTreeSet::from([12usize])),
                    (19usize, std::collections::BTreeSet::from([12usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (2usize, 42usize),
                    (3usize, 43usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 0usize,
                        shifted: 4usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 3usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([0usize])),
                    (4usize, std::collections::BTreeSet::from([0usize])),
                    (41usize, std::collections::BTreeSet::from([0usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 0usize,
                        shifted: 5usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 5usize),
                    (13usize, 8usize),
                    (14usize, 9usize),
                    (17usize, 10usize),
                    (19usize, 11usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::RuleLine, 44usize),
                    (GrammarNonTerminals::TokenMapped, 45usize),
                    (GrammarNonTerminals::TerminalSet, 27usize),
                    (GrammarNonTerminals::Pattern, 46usize),
                    (GrammarNonTerminals::_TokenMappedPlus16, 47usize),
                    (GrammarNonTerminals::_TokenMappedStar17, 49usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([77usize])),
                    (3usize, std::collections::BTreeSet::from([77usize])),
                    (4usize, std::collections::BTreeSet::from([77usize])),
                    (16usize, std::collections::BTreeSet::from([77usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 3usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 19usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 26usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 28usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 76usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 77usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 95usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([3usize])),
                    (3usize, std::collections::BTreeSet::from([3usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 3usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([75usize])),
                    (2usize, std::collections::BTreeSet::from([75usize])),
                    (3usize, std::collections::BTreeSet::from([75usize])),
                    (4usize, std::collections::BTreeSet::from([75usize])),
                    (13usize, std::collections::BTreeSet::from([75usize])),
                    (14usize, std::collections::BTreeSet::from([75usize])),
                    (16usize, std::collections::BTreeSet::from([75usize])),
                    (17usize, std::collections::BTreeSet::from([75usize])),
                    (19usize, std::collections::BTreeSet::from([75usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (6usize, 29usize),
                    (7usize, 30usize),
                    (8usize, 31usize),
                    (10usize, 32usize),
                    (11usize, 34usize),
                    (12usize, 35usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([11usize])),
                    (2usize, std::collections::BTreeSet::from([11usize])),
                    (3usize, std::collections::BTreeSet::from([11usize])),
                    (4usize, std::collections::BTreeSet::from([11usize])),
                    (13usize, std::collections::BTreeSet::from([11usize])),
                    (14usize, std::collections::BTreeSet::from([11usize])),
                    (16usize, std::collections::BTreeSet::from([11usize])),
                    (17usize, std::collections::BTreeSet::from([11usize])),
                    (19usize, std::collections::BTreeSet::from([11usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 5usize),
                    (13usize, 8usize),
                    (14usize, 9usize),
                    (17usize, 10usize),
                    (19usize, 11usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::TokenMapped, 48usize),
                    (GrammarNonTerminals::TerminalSet, 27usize),
                    (GrammarNonTerminals::Pattern, 46usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([95usize])),
                    (3usize, std::collections::BTreeSet::from([95usize])),
                    (4usize, std::collections::BTreeSet::from([95usize])),
                    (16usize, std::collections::BTreeSet::from([95usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 19usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 26usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 28usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 76usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 95usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([76usize])),
                    (2usize, std::collections::BTreeSet::from([76usize])),
                    (3usize, std::collections::BTreeSet::from([76usize])),
                    (4usize, std::collections::BTreeSet::from([76usize])),
                    (13usize, std::collections::BTreeSet::from([76usize])),
                    (14usize, std::collections::BTreeSet::from([76usize])),
                    (16usize, std::collections::BTreeSet::from([76usize])),
                    (17usize, std::collections::BTreeSet::from([76usize])),
                    (19usize, std::collections::BTreeSet::from([76usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 76usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(4usize, 50usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::PrecDef, 60usize),
                    (GrammarNonTerminals::_PrecDefPlus18, 61usize),
                    (GrammarNonTerminals::_PrecDefStar19, 63usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([80usize])),
                    (3usize, std::collections::BTreeSet::from([80usize])),
                    (16usize, std::collections::BTreeSet::from([80usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 6usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 7usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 8usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 78usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 79usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 80usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 96usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (32usize, 51usize),
                    (37usize, 56usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::error,
                    59usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 6usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 7usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 8usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 52usize),
                    (14usize, 53usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::IdentOrLiteral, 54usize),
                    (GrammarNonTerminals::error, 55usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 6usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 7usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 33usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 34usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([33usize])),
                    (2usize, std::collections::BTreeSet::from([33usize])),
                    (3usize, std::collections::BTreeSet::from([33usize])),
                    (4usize, std::collections::BTreeSet::from([33usize])),
                    (14usize, std::collections::BTreeSet::from([33usize])),
                    (16usize, std::collections::BTreeSet::from([33usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 33usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([34usize])),
                    (2usize, std::collections::BTreeSet::from([34usize])),
                    (3usize, std::collections::BTreeSet::from([34usize])),
                    (4usize, std::collections::BTreeSet::from([34usize])),
                    (14usize, std::collections::BTreeSet::from([34usize])),
                    (16usize, std::collections::BTreeSet::from([34usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 34usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([6usize])),
                    (3usize, std::collections::BTreeSet::from([6usize])),
                    (4usize, std::collections::BTreeSet::from([6usize])),
                    (16usize, std::collections::BTreeSet::from([6usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 6usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([7usize])),
                    (3usize, std::collections::BTreeSet::from([7usize])),
                    (4usize, std::collections::BTreeSet::from([7usize])),
                    (16usize, std::collections::BTreeSet::from([7usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 7usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(14usize, 57usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::error,
                    58usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 8usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([8usize])),
                    (3usize, std::collections::BTreeSet::from([8usize])),
                    (4usize, std::collections::BTreeSet::from([8usize])),
                    (16usize, std::collections::BTreeSet::from([8usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 8usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([9usize])),
                    (3usize, std::collections::BTreeSet::from([9usize])),
                    (4usize, std::collections::BTreeSet::from([9usize])),
                    (16usize, std::collections::BTreeSet::from([9usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([10usize])),
                    (3usize, std::collections::BTreeSet::from([10usize])),
                    (4usize, std::collections::BTreeSet::from([10usize])),
                    (16usize, std::collections::BTreeSet::from([10usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([78usize])),
                    (3usize, std::collections::BTreeSet::from([78usize])),
                    (4usize, std::collections::BTreeSet::from([78usize])),
                    (16usize, std::collections::BTreeSet::from([78usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 78usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(4usize, 50usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::PrecDef,
                    62usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([96usize])),
                    (3usize, std::collections::BTreeSet::from([96usize])),
                    (16usize, std::collections::BTreeSet::from([96usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 6usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 7usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 8usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 79usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 96usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([79usize])),
                    (3usize, std::collections::BTreeSet::from([79usize])),
                    (4usize, std::collections::BTreeSet::from([79usize])),
                    (16usize, std::collections::BTreeSet::from([79usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 79usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(16usize, 64usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::Action,
                    65usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([32usize])),
                    (3usize, std::collections::BTreeSet::from([32usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 31usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 32usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([31usize])),
                    (3usize, std::collections::BTreeSet::from([31usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 31usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([5usize])),
                    (3usize, std::collections::BTreeSet::from([5usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (2usize, std::collections::BTreeSet::from([4usize])),
                    (3usize, std::collections::BTreeSet::from([4usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 4usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (21usize, 68usize),
                    (22usize, 75usize),
                    (23usize, 80usize),
                    (24usize, 131usize),
                    (25usize, 136usize),
                    (26usize, 140usize),
                    (27usize, 144usize),
                    (28usize, 148usize),
                    (29usize, 152usize),
                    (30usize, 156usize),
                    (31usize, 160usize),
                    (33usize, 164usize),
                    (34usize, 169usize),
                    (35usize, 173usize),
                    (36usize, 177usize),
                    (38usize, 185usize),
                    (39usize, 189usize),
                    (40usize, 193usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::error,
                    197usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 36usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 37usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 38usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 39usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 40usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 41usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 52usize),
                    (14usize, 53usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::IdentOrLiteral, 69usize),
                    (GrammarNonTerminals::error, 70usize),
                    (GrammarNonTerminals::_IdentOrLiteralPlus26, 72usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 33usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 34usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 90usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([90usize])),
                    (2usize, std::collections::BTreeSet::from([90usize])),
                    (14usize, std::collections::BTreeSet::from([90usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 90usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 71usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([48usize])),
                    (4usize, std::collections::BTreeSet::from([48usize])),
                    (41usize, std::collections::BTreeSet::from([48usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 52usize),
                    (2usize, 73usize),
                    (14usize, 53usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::IdentOrLiteral,
                    74usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 33usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 34usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([47usize])),
                    (4usize, std::collections::BTreeSet::from([47usize])),
                    (41usize, std::collections::BTreeSet::from([47usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([91usize])),
                    (2usize, std::collections::BTreeSet::from([91usize])),
                    (14usize, std::collections::BTreeSet::from([91usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 52usize),
                    (14usize, 53usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::IdentOrLiteral, 69usize),
                    (GrammarNonTerminals::error, 76usize),
                    (GrammarNonTerminals::_IdentOrLiteralPlus26, 78usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 33usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 34usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 90usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 77usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([50usize])),
                    (4usize, std::collections::BTreeSet::from([50usize])),
                    (41usize, std::collections::BTreeSet::from([50usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 52usize),
                    (2usize, 79usize),
                    (14usize, 53usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::IdentOrLiteral,
                    74usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 33usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 34usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([49usize])),
                    (4usize, std::collections::BTreeSet::from([49usize])),
                    (41usize, std::collections::BTreeSet::from([49usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 81usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::error,
                    129usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 36usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 37usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 38usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 82usize),
                    (1usize, 83usize),
                    (2usize, 84usize),
                    (3usize, 85usize),
                    (4usize, 86usize),
                    (5usize, 87usize),
                    (6usize, 88usize),
                    (7usize, 89usize),
                    (8usize, 90usize),
                    (9usize, 91usize),
                    (10usize, 92usize),
                    (11usize, 93usize),
                    (12usize, 94usize),
                    (13usize, 95usize),
                    (14usize, 96usize),
                    (15usize, 97usize),
                    (16usize, 98usize),
                    (17usize, 99usize),
                    (18usize, 100usize),
                    (19usize, 101usize),
                    (20usize, 102usize),
                    (21usize, 103usize),
                    (22usize, 104usize),
                    (23usize, 105usize),
                    (24usize, 106usize),
                    (25usize, 107usize),
                    (26usize, 108usize),
                    (27usize, 109usize),
                    (28usize, 110usize),
                    (29usize, 111usize),
                    (30usize, 112usize),
                    (31usize, 113usize),
                    (32usize, 114usize),
                    (33usize, 115usize),
                    (34usize, 116usize),
                    (35usize, 117usize),
                    (36usize, 118usize),
                    (37usize, 119usize),
                    (38usize, 120usize),
                    (39usize, 121usize),
                    (40usize, 122usize),
                    (42usize, 123usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::RustCode, 124usize),
                    (GrammarNonTerminals::_TermSet24, 126usize),
                    (GrammarNonTerminals::__TermSet24Plus25, 127usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 35usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 36usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 37usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 88usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 89usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 98usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 99usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 100usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 101usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 102usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 103usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 104usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 105usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 106usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 107usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 108usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 109usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 110usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 111usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 115usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 116usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 117usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 118usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 119usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 121usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 122usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 123usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 124usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 125usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 126usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 127usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 128usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 129usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 130usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 131usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 132usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 133usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 134usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 135usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 136usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 137usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 138usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([98usize])),
                    (1usize, std::collections::BTreeSet::from([98usize])),
                    (2usize, std::collections::BTreeSet::from([98usize])),
                    (3usize, std::collections::BTreeSet::from([98usize])),
                    (4usize, std::collections::BTreeSet::from([98usize])),
                    (5usize, std::collections::BTreeSet::from([98usize])),
                    (6usize, std::collections::BTreeSet::from([98usize])),
                    (7usize, std::collections::BTreeSet::from([98usize])),
                    (8usize, std::collections::BTreeSet::from([98usize])),
                    (9usize, std::collections::BTreeSet::from([98usize])),
                    (10usize, std::collections::BTreeSet::from([98usize])),
                    (11usize, std::collections::BTreeSet::from([98usize])),
                    (12usize, std::collections::BTreeSet::from([98usize])),
                    (13usize, std::collections::BTreeSet::from([98usize])),
                    (14usize, std::collections::BTreeSet::from([98usize])),
                    (15usize, std::collections::BTreeSet::from([98usize])),
                    (16usize, std::collections::BTreeSet::from([98usize])),
                    (17usize, std::collections::BTreeSet::from([98usize])),
                    (18usize, std::collections::BTreeSet::from([98usize])),
                    (19usize, std::collections::BTreeSet::from([98usize])),
                    (20usize, std::collections::BTreeSet::from([98usize])),
                    (21usize, std::collections::BTreeSet::from([98usize])),
                    (22usize, std::collections::BTreeSet::from([98usize])),
                    (23usize, std::collections::BTreeSet::from([98usize])),
                    (24usize, std::collections::BTreeSet::from([98usize])),
                    (25usize, std::collections::BTreeSet::from([98usize])),
                    (26usize, std::collections::BTreeSet::from([98usize])),
                    (27usize, std::collections::BTreeSet::from([98usize])),
                    (28usize, std::collections::BTreeSet::from([98usize])),
                    (29usize, std::collections::BTreeSet::from([98usize])),
                    (30usize, std::collections::BTreeSet::from([98usize])),
                    (31usize, std::collections::BTreeSet::from([98usize])),
                    (32usize, std::collections::BTreeSet::from([98usize])),
                    (33usize, std::collections::BTreeSet::from([98usize])),
                    (34usize, std::collections::BTreeSet::from([98usize])),
                    (35usize, std::collections::BTreeSet::from([98usize])),
                    (36usize, std::collections::BTreeSet::from([98usize])),
                    (37usize, std::collections::BTreeSet::from([98usize])),
                    (38usize, std::collections::BTreeSet::from([98usize])),
                    (39usize, std::collections::BTreeSet::from([98usize])),
                    (40usize, std::collections::BTreeSet::from([98usize])),
                    (42usize, std::collections::BTreeSet::from([98usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 98usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([99usize])),
                    (1usize, std::collections::BTreeSet::from([99usize])),
                    (2usize, std::collections::BTreeSet::from([99usize])),
                    (3usize, std::collections::BTreeSet::from([99usize])),
                    (4usize, std::collections::BTreeSet::from([99usize])),
                    (5usize, std::collections::BTreeSet::from([99usize])),
                    (6usize, std::collections::BTreeSet::from([99usize])),
                    (7usize, std::collections::BTreeSet::from([99usize])),
                    (8usize, std::collections::BTreeSet::from([99usize])),
                    (9usize, std::collections::BTreeSet::from([99usize])),
                    (10usize, std::collections::BTreeSet::from([99usize])),
                    (11usize, std::collections::BTreeSet::from([99usize])),
                    (12usize, std::collections::BTreeSet::from([99usize])),
                    (13usize, std::collections::BTreeSet::from([99usize])),
                    (14usize, std::collections::BTreeSet::from([99usize])),
                    (15usize, std::collections::BTreeSet::from([99usize])),
                    (16usize, std::collections::BTreeSet::from([99usize])),
                    (17usize, std::collections::BTreeSet::from([99usize])),
                    (18usize, std::collections::BTreeSet::from([99usize])),
                    (19usize, std::collections::BTreeSet::from([99usize])),
                    (20usize, std::collections::BTreeSet::from([99usize])),
                    (21usize, std::collections::BTreeSet::from([99usize])),
                    (22usize, std::collections::BTreeSet::from([99usize])),
                    (23usize, std::collections::BTreeSet::from([99usize])),
                    (24usize, std::collections::BTreeSet::from([99usize])),
                    (25usize, std::collections::BTreeSet::from([99usize])),
                    (26usize, std::collections::BTreeSet::from([99usize])),
                    (27usize, std::collections::BTreeSet::from([99usize])),
                    (28usize, std::collections::BTreeSet::from([99usize])),
                    (29usize, std::collections::BTreeSet::from([99usize])),
                    (30usize, std::collections::BTreeSet::from([99usize])),
                    (31usize, std::collections::BTreeSet::from([99usize])),
                    (32usize, std::collections::BTreeSet::from([99usize])),
                    (33usize, std::collections::BTreeSet::from([99usize])),
                    (34usize, std::collections::BTreeSet::from([99usize])),
                    (35usize, std::collections::BTreeSet::from([99usize])),
                    (36usize, std::collections::BTreeSet::from([99usize])),
                    (37usize, std::collections::BTreeSet::from([99usize])),
                    (38usize, std::collections::BTreeSet::from([99usize])),
                    (39usize, std::collections::BTreeSet::from([99usize])),
                    (40usize, std::collections::BTreeSet::from([99usize])),
                    (42usize, std::collections::BTreeSet::from([99usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 99usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([37usize])),
                    (4usize, std::collections::BTreeSet::from([37usize])),
                    (41usize, std::collections::BTreeSet::from([37usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 37usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([100usize])),
                    (1usize, std::collections::BTreeSet::from([100usize])),
                    (2usize, std::collections::BTreeSet::from([100usize])),
                    (3usize, std::collections::BTreeSet::from([100usize])),
                    (4usize, std::collections::BTreeSet::from([100usize])),
                    (5usize, std::collections::BTreeSet::from([100usize])),
                    (6usize, std::collections::BTreeSet::from([100usize])),
                    (7usize, std::collections::BTreeSet::from([100usize])),
                    (8usize, std::collections::BTreeSet::from([100usize])),
                    (9usize, std::collections::BTreeSet::from([100usize])),
                    (10usize, std::collections::BTreeSet::from([100usize])),
                    (11usize, std::collections::BTreeSet::from([100usize])),
                    (12usize, std::collections::BTreeSet::from([100usize])),
                    (13usize, std::collections::BTreeSet::from([100usize])),
                    (14usize, std::collections::BTreeSet::from([100usize])),
                    (15usize, std::collections::BTreeSet::from([100usize])),
                    (16usize, std::collections::BTreeSet::from([100usize])),
                    (17usize, std::collections::BTreeSet::from([100usize])),
                    (18usize, std::collections::BTreeSet::from([100usize])),
                    (19usize, std::collections::BTreeSet::from([100usize])),
                    (20usize, std::collections::BTreeSet::from([100usize])),
                    (21usize, std::collections::BTreeSet::from([100usize])),
                    (22usize, std::collections::BTreeSet::from([100usize])),
                    (23usize, std::collections::BTreeSet::from([100usize])),
                    (24usize, std::collections::BTreeSet::from([100usize])),
                    (25usize, std::collections::BTreeSet::from([100usize])),
                    (26usize, std::collections::BTreeSet::from([100usize])),
                    (27usize, std::collections::BTreeSet::from([100usize])),
                    (28usize, std::collections::BTreeSet::from([100usize])),
                    (29usize, std::collections::BTreeSet::from([100usize])),
                    (30usize, std::collections::BTreeSet::from([100usize])),
                    (31usize, std::collections::BTreeSet::from([100usize])),
                    (32usize, std::collections::BTreeSet::from([100usize])),
                    (33usize, std::collections::BTreeSet::from([100usize])),
                    (34usize, std::collections::BTreeSet::from([100usize])),
                    (35usize, std::collections::BTreeSet::from([100usize])),
                    (36usize, std::collections::BTreeSet::from([100usize])),
                    (37usize, std::collections::BTreeSet::from([100usize])),
                    (38usize, std::collections::BTreeSet::from([100usize])),
                    (39usize, std::collections::BTreeSet::from([100usize])),
                    (40usize, std::collections::BTreeSet::from([100usize])),
                    (42usize, std::collections::BTreeSet::from([100usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 100usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([101usize])),
                    (1usize, std::collections::BTreeSet::from([101usize])),
                    (2usize, std::collections::BTreeSet::from([101usize])),
                    (3usize, std::collections::BTreeSet::from([101usize])),
                    (4usize, std::collections::BTreeSet::from([101usize])),
                    (5usize, std::collections::BTreeSet::from([101usize])),
                    (6usize, std::collections::BTreeSet::from([101usize])),
                    (7usize, std::collections::BTreeSet::from([101usize])),
                    (8usize, std::collections::BTreeSet::from([101usize])),
                    (9usize, std::collections::BTreeSet::from([101usize])),
                    (10usize, std::collections::BTreeSet::from([101usize])),
                    (11usize, std::collections::BTreeSet::from([101usize])),
                    (12usize, std::collections::BTreeSet::from([101usize])),
                    (13usize, std::collections::BTreeSet::from([101usize])),
                    (14usize, std::collections::BTreeSet::from([101usize])),
                    (15usize, std::collections::BTreeSet::from([101usize])),
                    (16usize, std::collections::BTreeSet::from([101usize])),
                    (17usize, std::collections::BTreeSet::from([101usize])),
                    (18usize, std::collections::BTreeSet::from([101usize])),
                    (19usize, std::collections::BTreeSet::from([101usize])),
                    (20usize, std::collections::BTreeSet::from([101usize])),
                    (21usize, std::collections::BTreeSet::from([101usize])),
                    (22usize, std::collections::BTreeSet::from([101usize])),
                    (23usize, std::collections::BTreeSet::from([101usize])),
                    (24usize, std::collections::BTreeSet::from([101usize])),
                    (25usize, std::collections::BTreeSet::from([101usize])),
                    (26usize, std::collections::BTreeSet::from([101usize])),
                    (27usize, std::collections::BTreeSet::from([101usize])),
                    (28usize, std::collections::BTreeSet::from([101usize])),
                    (29usize, std::collections::BTreeSet::from([101usize])),
                    (30usize, std::collections::BTreeSet::from([101usize])),
                    (31usize, std::collections::BTreeSet::from([101usize])),
                    (32usize, std::collections::BTreeSet::from([101usize])),
                    (33usize, std::collections::BTreeSet::from([101usize])),
                    (34usize, std::collections::BTreeSet::from([101usize])),
                    (35usize, std::collections::BTreeSet::from([101usize])),
                    (36usize, std::collections::BTreeSet::from([101usize])),
                    (37usize, std::collections::BTreeSet::from([101usize])),
                    (38usize, std::collections::BTreeSet::from([101usize])),
                    (39usize, std::collections::BTreeSet::from([101usize])),
                    (40usize, std::collections::BTreeSet::from([101usize])),
                    (42usize, std::collections::BTreeSet::from([101usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 101usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([102usize])),
                    (1usize, std::collections::BTreeSet::from([102usize])),
                    (2usize, std::collections::BTreeSet::from([102usize])),
                    (3usize, std::collections::BTreeSet::from([102usize])),
                    (4usize, std::collections::BTreeSet::from([102usize])),
                    (5usize, std::collections::BTreeSet::from([102usize])),
                    (6usize, std::collections::BTreeSet::from([102usize])),
                    (7usize, std::collections::BTreeSet::from([102usize])),
                    (8usize, std::collections::BTreeSet::from([102usize])),
                    (9usize, std::collections::BTreeSet::from([102usize])),
                    (10usize, std::collections::BTreeSet::from([102usize])),
                    (11usize, std::collections::BTreeSet::from([102usize])),
                    (12usize, std::collections::BTreeSet::from([102usize])),
                    (13usize, std::collections::BTreeSet::from([102usize])),
                    (14usize, std::collections::BTreeSet::from([102usize])),
                    (15usize, std::collections::BTreeSet::from([102usize])),
                    (16usize, std::collections::BTreeSet::from([102usize])),
                    (17usize, std::collections::BTreeSet::from([102usize])),
                    (18usize, std::collections::BTreeSet::from([102usize])),
                    (19usize, std::collections::BTreeSet::from([102usize])),
                    (20usize, std::collections::BTreeSet::from([102usize])),
                    (21usize, std::collections::BTreeSet::from([102usize])),
                    (22usize, std::collections::BTreeSet::from([102usize])),
                    (23usize, std::collections::BTreeSet::from([102usize])),
                    (24usize, std::collections::BTreeSet::from([102usize])),
                    (25usize, std::collections::BTreeSet::from([102usize])),
                    (26usize, std::collections::BTreeSet::from([102usize])),
                    (27usize, std::collections::BTreeSet::from([102usize])),
                    (28usize, std::collections::BTreeSet::from([102usize])),
                    (29usize, std::collections::BTreeSet::from([102usize])),
                    (30usize, std::collections::BTreeSet::from([102usize])),
                    (31usize, std::collections::BTreeSet::from([102usize])),
                    (32usize, std::collections::BTreeSet::from([102usize])),
                    (33usize, std::collections::BTreeSet::from([102usize])),
                    (34usize, std::collections::BTreeSet::from([102usize])),
                    (35usize, std::collections::BTreeSet::from([102usize])),
                    (36usize, std::collections::BTreeSet::from([102usize])),
                    (37usize, std::collections::BTreeSet::from([102usize])),
                    (38usize, std::collections::BTreeSet::from([102usize])),
                    (39usize, std::collections::BTreeSet::from([102usize])),
                    (40usize, std::collections::BTreeSet::from([102usize])),
                    (42usize, std::collections::BTreeSet::from([102usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 102usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([103usize])),
                    (1usize, std::collections::BTreeSet::from([103usize])),
                    (2usize, std::collections::BTreeSet::from([103usize])),
                    (3usize, std::collections::BTreeSet::from([103usize])),
                    (4usize, std::collections::BTreeSet::from([103usize])),
                    (5usize, std::collections::BTreeSet::from([103usize])),
                    (6usize, std::collections::BTreeSet::from([103usize])),
                    (7usize, std::collections::BTreeSet::from([103usize])),
                    (8usize, std::collections::BTreeSet::from([103usize])),
                    (9usize, std::collections::BTreeSet::from([103usize])),
                    (10usize, std::collections::BTreeSet::from([103usize])),
                    (11usize, std::collections::BTreeSet::from([103usize])),
                    (12usize, std::collections::BTreeSet::from([103usize])),
                    (13usize, std::collections::BTreeSet::from([103usize])),
                    (14usize, std::collections::BTreeSet::from([103usize])),
                    (15usize, std::collections::BTreeSet::from([103usize])),
                    (16usize, std::collections::BTreeSet::from([103usize])),
                    (17usize, std::collections::BTreeSet::from([103usize])),
                    (18usize, std::collections::BTreeSet::from([103usize])),
                    (19usize, std::collections::BTreeSet::from([103usize])),
                    (20usize, std::collections::BTreeSet::from([103usize])),
                    (21usize, std::collections::BTreeSet::from([103usize])),
                    (22usize, std::collections::BTreeSet::from([103usize])),
                    (23usize, std::collections::BTreeSet::from([103usize])),
                    (24usize, std::collections::BTreeSet::from([103usize])),
                    (25usize, std::collections::BTreeSet::from([103usize])),
                    (26usize, std::collections::BTreeSet::from([103usize])),
                    (27usize, std::collections::BTreeSet::from([103usize])),
                    (28usize, std::collections::BTreeSet::from([103usize])),
                    (29usize, std::collections::BTreeSet::from([103usize])),
                    (30usize, std::collections::BTreeSet::from([103usize])),
                    (31usize, std::collections::BTreeSet::from([103usize])),
                    (32usize, std::collections::BTreeSet::from([103usize])),
                    (33usize, std::collections::BTreeSet::from([103usize])),
                    (34usize, std::collections::BTreeSet::from([103usize])),
                    (35usize, std::collections::BTreeSet::from([103usize])),
                    (36usize, std::collections::BTreeSet::from([103usize])),
                    (37usize, std::collections::BTreeSet::from([103usize])),
                    (38usize, std::collections::BTreeSet::from([103usize])),
                    (39usize, std::collections::BTreeSet::from([103usize])),
                    (40usize, std::collections::BTreeSet::from([103usize])),
                    (42usize, std::collections::BTreeSet::from([103usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 103usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([104usize])),
                    (1usize, std::collections::BTreeSet::from([104usize])),
                    (2usize, std::collections::BTreeSet::from([104usize])),
                    (3usize, std::collections::BTreeSet::from([104usize])),
                    (4usize, std::collections::BTreeSet::from([104usize])),
                    (5usize, std::collections::BTreeSet::from([104usize])),
                    (6usize, std::collections::BTreeSet::from([104usize])),
                    (7usize, std::collections::BTreeSet::from([104usize])),
                    (8usize, std::collections::BTreeSet::from([104usize])),
                    (9usize, std::collections::BTreeSet::from([104usize])),
                    (10usize, std::collections::BTreeSet::from([104usize])),
                    (11usize, std::collections::BTreeSet::from([104usize])),
                    (12usize, std::collections::BTreeSet::from([104usize])),
                    (13usize, std::collections::BTreeSet::from([104usize])),
                    (14usize, std::collections::BTreeSet::from([104usize])),
                    (15usize, std::collections::BTreeSet::from([104usize])),
                    (16usize, std::collections::BTreeSet::from([104usize])),
                    (17usize, std::collections::BTreeSet::from([104usize])),
                    (18usize, std::collections::BTreeSet::from([104usize])),
                    (19usize, std::collections::BTreeSet::from([104usize])),
                    (20usize, std::collections::BTreeSet::from([104usize])),
                    (21usize, std::collections::BTreeSet::from([104usize])),
                    (22usize, std::collections::BTreeSet::from([104usize])),
                    (23usize, std::collections::BTreeSet::from([104usize])),
                    (24usize, std::collections::BTreeSet::from([104usize])),
                    (25usize, std::collections::BTreeSet::from([104usize])),
                    (26usize, std::collections::BTreeSet::from([104usize])),
                    (27usize, std::collections::BTreeSet::from([104usize])),
                    (28usize, std::collections::BTreeSet::from([104usize])),
                    (29usize, std::collections::BTreeSet::from([104usize])),
                    (30usize, std::collections::BTreeSet::from([104usize])),
                    (31usize, std::collections::BTreeSet::from([104usize])),
                    (32usize, std::collections::BTreeSet::from([104usize])),
                    (33usize, std::collections::BTreeSet::from([104usize])),
                    (34usize, std::collections::BTreeSet::from([104usize])),
                    (35usize, std::collections::BTreeSet::from([104usize])),
                    (36usize, std::collections::BTreeSet::from([104usize])),
                    (37usize, std::collections::BTreeSet::from([104usize])),
                    (38usize, std::collections::BTreeSet::from([104usize])),
                    (39usize, std::collections::BTreeSet::from([104usize])),
                    (40usize, std::collections::BTreeSet::from([104usize])),
                    (42usize, std::collections::BTreeSet::from([104usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 104usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([105usize])),
                    (1usize, std::collections::BTreeSet::from([105usize])),
                    (2usize, std::collections::BTreeSet::from([105usize])),
                    (3usize, std::collections::BTreeSet::from([105usize])),
                    (4usize, std::collections::BTreeSet::from([105usize])),
                    (5usize, std::collections::BTreeSet::from([105usize])),
                    (6usize, std::collections::BTreeSet::from([105usize])),
                    (7usize, std::collections::BTreeSet::from([105usize])),
                    (8usize, std::collections::BTreeSet::from([105usize])),
                    (9usize, std::collections::BTreeSet::from([105usize])),
                    (10usize, std::collections::BTreeSet::from([105usize])),
                    (11usize, std::collections::BTreeSet::from([105usize])),
                    (12usize, std::collections::BTreeSet::from([105usize])),
                    (13usize, std::collections::BTreeSet::from([105usize])),
                    (14usize, std::collections::BTreeSet::from([105usize])),
                    (15usize, std::collections::BTreeSet::from([105usize])),
                    (16usize, std::collections::BTreeSet::from([105usize])),
                    (17usize, std::collections::BTreeSet::from([105usize])),
                    (18usize, std::collections::BTreeSet::from([105usize])),
                    (19usize, std::collections::BTreeSet::from([105usize])),
                    (20usize, std::collections::BTreeSet::from([105usize])),
                    (21usize, std::collections::BTreeSet::from([105usize])),
                    (22usize, std::collections::BTreeSet::from([105usize])),
                    (23usize, std::collections::BTreeSet::from([105usize])),
                    (24usize, std::collections::BTreeSet::from([105usize])),
                    (25usize, std::collections::BTreeSet::from([105usize])),
                    (26usize, std::collections::BTreeSet::from([105usize])),
                    (27usize, std::collections::BTreeSet::from([105usize])),
                    (28usize, std::collections::BTreeSet::from([105usize])),
                    (29usize, std::collections::BTreeSet::from([105usize])),
                    (30usize, std::collections::BTreeSet::from([105usize])),
                    (31usize, std::collections::BTreeSet::from([105usize])),
                    (32usize, std::collections::BTreeSet::from([105usize])),
                    (33usize, std::collections::BTreeSet::from([105usize])),
                    (34usize, std::collections::BTreeSet::from([105usize])),
                    (35usize, std::collections::BTreeSet::from([105usize])),
                    (36usize, std::collections::BTreeSet::from([105usize])),
                    (37usize, std::collections::BTreeSet::from([105usize])),
                    (38usize, std::collections::BTreeSet::from([105usize])),
                    (39usize, std::collections::BTreeSet::from([105usize])),
                    (40usize, std::collections::BTreeSet::from([105usize])),
                    (42usize, std::collections::BTreeSet::from([105usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 105usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([106usize])),
                    (1usize, std::collections::BTreeSet::from([106usize])),
                    (2usize, std::collections::BTreeSet::from([106usize])),
                    (3usize, std::collections::BTreeSet::from([106usize])),
                    (4usize, std::collections::BTreeSet::from([106usize])),
                    (5usize, std::collections::BTreeSet::from([106usize])),
                    (6usize, std::collections::BTreeSet::from([106usize])),
                    (7usize, std::collections::BTreeSet::from([106usize])),
                    (8usize, std::collections::BTreeSet::from([106usize])),
                    (9usize, std::collections::BTreeSet::from([106usize])),
                    (10usize, std::collections::BTreeSet::from([106usize])),
                    (11usize, std::collections::BTreeSet::from([106usize])),
                    (12usize, std::collections::BTreeSet::from([106usize])),
                    (13usize, std::collections::BTreeSet::from([106usize])),
                    (14usize, std::collections::BTreeSet::from([106usize])),
                    (15usize, std::collections::BTreeSet::from([106usize])),
                    (16usize, std::collections::BTreeSet::from([106usize])),
                    (17usize, std::collections::BTreeSet::from([106usize])),
                    (18usize, std::collections::BTreeSet::from([106usize])),
                    (19usize, std::collections::BTreeSet::from([106usize])),
                    (20usize, std::collections::BTreeSet::from([106usize])),
                    (21usize, std::collections::BTreeSet::from([106usize])),
                    (22usize, std::collections::BTreeSet::from([106usize])),
                    (23usize, std::collections::BTreeSet::from([106usize])),
                    (24usize, std::collections::BTreeSet::from([106usize])),
                    (25usize, std::collections::BTreeSet::from([106usize])),
                    (26usize, std::collections::BTreeSet::from([106usize])),
                    (27usize, std::collections::BTreeSet::from([106usize])),
                    (28usize, std::collections::BTreeSet::from([106usize])),
                    (29usize, std::collections::BTreeSet::from([106usize])),
                    (30usize, std::collections::BTreeSet::from([106usize])),
                    (31usize, std::collections::BTreeSet::from([106usize])),
                    (32usize, std::collections::BTreeSet::from([106usize])),
                    (33usize, std::collections::BTreeSet::from([106usize])),
                    (34usize, std::collections::BTreeSet::from([106usize])),
                    (35usize, std::collections::BTreeSet::from([106usize])),
                    (36usize, std::collections::BTreeSet::from([106usize])),
                    (37usize, std::collections::BTreeSet::from([106usize])),
                    (38usize, std::collections::BTreeSet::from([106usize])),
                    (39usize, std::collections::BTreeSet::from([106usize])),
                    (40usize, std::collections::BTreeSet::from([106usize])),
                    (42usize, std::collections::BTreeSet::from([106usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 106usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([107usize])),
                    (1usize, std::collections::BTreeSet::from([107usize])),
                    (2usize, std::collections::BTreeSet::from([107usize])),
                    (3usize, std::collections::BTreeSet::from([107usize])),
                    (4usize, std::collections::BTreeSet::from([107usize])),
                    (5usize, std::collections::BTreeSet::from([107usize])),
                    (6usize, std::collections::BTreeSet::from([107usize])),
                    (7usize, std::collections::BTreeSet::from([107usize])),
                    (8usize, std::collections::BTreeSet::from([107usize])),
                    (9usize, std::collections::BTreeSet::from([107usize])),
                    (10usize, std::collections::BTreeSet::from([107usize])),
                    (11usize, std::collections::BTreeSet::from([107usize])),
                    (12usize, std::collections::BTreeSet::from([107usize])),
                    (13usize, std::collections::BTreeSet::from([107usize])),
                    (14usize, std::collections::BTreeSet::from([107usize])),
                    (15usize, std::collections::BTreeSet::from([107usize])),
                    (16usize, std::collections::BTreeSet::from([107usize])),
                    (17usize, std::collections::BTreeSet::from([107usize])),
                    (18usize, std::collections::BTreeSet::from([107usize])),
                    (19usize, std::collections::BTreeSet::from([107usize])),
                    (20usize, std::collections::BTreeSet::from([107usize])),
                    (21usize, std::collections::BTreeSet::from([107usize])),
                    (22usize, std::collections::BTreeSet::from([107usize])),
                    (23usize, std::collections::BTreeSet::from([107usize])),
                    (24usize, std::collections::BTreeSet::from([107usize])),
                    (25usize, std::collections::BTreeSet::from([107usize])),
                    (26usize, std::collections::BTreeSet::from([107usize])),
                    (27usize, std::collections::BTreeSet::from([107usize])),
                    (28usize, std::collections::BTreeSet::from([107usize])),
                    (29usize, std::collections::BTreeSet::from([107usize])),
                    (30usize, std::collections::BTreeSet::from([107usize])),
                    (31usize, std::collections::BTreeSet::from([107usize])),
                    (32usize, std::collections::BTreeSet::from([107usize])),
                    (33usize, std::collections::BTreeSet::from([107usize])),
                    (34usize, std::collections::BTreeSet::from([107usize])),
                    (35usize, std::collections::BTreeSet::from([107usize])),
                    (36usize, std::collections::BTreeSet::from([107usize])),
                    (37usize, std::collections::BTreeSet::from([107usize])),
                    (38usize, std::collections::BTreeSet::from([107usize])),
                    (39usize, std::collections::BTreeSet::from([107usize])),
                    (40usize, std::collections::BTreeSet::from([107usize])),
                    (42usize, std::collections::BTreeSet::from([107usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 107usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([108usize])),
                    (1usize, std::collections::BTreeSet::from([108usize])),
                    (2usize, std::collections::BTreeSet::from([108usize])),
                    (3usize, std::collections::BTreeSet::from([108usize])),
                    (4usize, std::collections::BTreeSet::from([108usize])),
                    (5usize, std::collections::BTreeSet::from([108usize])),
                    (6usize, std::collections::BTreeSet::from([108usize])),
                    (7usize, std::collections::BTreeSet::from([108usize])),
                    (8usize, std::collections::BTreeSet::from([108usize])),
                    (9usize, std::collections::BTreeSet::from([108usize])),
                    (10usize, std::collections::BTreeSet::from([108usize])),
                    (11usize, std::collections::BTreeSet::from([108usize])),
                    (12usize, std::collections::BTreeSet::from([108usize])),
                    (13usize, std::collections::BTreeSet::from([108usize])),
                    (14usize, std::collections::BTreeSet::from([108usize])),
                    (15usize, std::collections::BTreeSet::from([108usize])),
                    (16usize, std::collections::BTreeSet::from([108usize])),
                    (17usize, std::collections::BTreeSet::from([108usize])),
                    (18usize, std::collections::BTreeSet::from([108usize])),
                    (19usize, std::collections::BTreeSet::from([108usize])),
                    (20usize, std::collections::BTreeSet::from([108usize])),
                    (21usize, std::collections::BTreeSet::from([108usize])),
                    (22usize, std::collections::BTreeSet::from([108usize])),
                    (23usize, std::collections::BTreeSet::from([108usize])),
                    (24usize, std::collections::BTreeSet::from([108usize])),
                    (25usize, std::collections::BTreeSet::from([108usize])),
                    (26usize, std::collections::BTreeSet::from([108usize])),
                    (27usize, std::collections::BTreeSet::from([108usize])),
                    (28usize, std::collections::BTreeSet::from([108usize])),
                    (29usize, std::collections::BTreeSet::from([108usize])),
                    (30usize, std::collections::BTreeSet::from([108usize])),
                    (31usize, std::collections::BTreeSet::from([108usize])),
                    (32usize, std::collections::BTreeSet::from([108usize])),
                    (33usize, std::collections::BTreeSet::from([108usize])),
                    (34usize, std::collections::BTreeSet::from([108usize])),
                    (35usize, std::collections::BTreeSet::from([108usize])),
                    (36usize, std::collections::BTreeSet::from([108usize])),
                    (37usize, std::collections::BTreeSet::from([108usize])),
                    (38usize, std::collections::BTreeSet::from([108usize])),
                    (39usize, std::collections::BTreeSet::from([108usize])),
                    (40usize, std::collections::BTreeSet::from([108usize])),
                    (42usize, std::collections::BTreeSet::from([108usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 108usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([109usize])),
                    (1usize, std::collections::BTreeSet::from([109usize])),
                    (2usize, std::collections::BTreeSet::from([109usize])),
                    (3usize, std::collections::BTreeSet::from([109usize])),
                    (4usize, std::collections::BTreeSet::from([109usize])),
                    (5usize, std::collections::BTreeSet::from([109usize])),
                    (6usize, std::collections::BTreeSet::from([109usize])),
                    (7usize, std::collections::BTreeSet::from([109usize])),
                    (8usize, std::collections::BTreeSet::from([109usize])),
                    (9usize, std::collections::BTreeSet::from([109usize])),
                    (10usize, std::collections::BTreeSet::from([109usize])),
                    (11usize, std::collections::BTreeSet::from([109usize])),
                    (12usize, std::collections::BTreeSet::from([109usize])),
                    (13usize, std::collections::BTreeSet::from([109usize])),
                    (14usize, std::collections::BTreeSet::from([109usize])),
                    (15usize, std::collections::BTreeSet::from([109usize])),
                    (16usize, std::collections::BTreeSet::from([109usize])),
                    (17usize, std::collections::BTreeSet::from([109usize])),
                    (18usize, std::collections::BTreeSet::from([109usize])),
                    (19usize, std::collections::BTreeSet::from([109usize])),
                    (20usize, std::collections::BTreeSet::from([109usize])),
                    (21usize, std::collections::BTreeSet::from([109usize])),
                    (22usize, std::collections::BTreeSet::from([109usize])),
                    (23usize, std::collections::BTreeSet::from([109usize])),
                    (24usize, std::collections::BTreeSet::from([109usize])),
                    (25usize, std::collections::BTreeSet::from([109usize])),
                    (26usize, std::collections::BTreeSet::from([109usize])),
                    (27usize, std::collections::BTreeSet::from([109usize])),
                    (28usize, std::collections::BTreeSet::from([109usize])),
                    (29usize, std::collections::BTreeSet::from([109usize])),
                    (30usize, std::collections::BTreeSet::from([109usize])),
                    (31usize, std::collections::BTreeSet::from([109usize])),
                    (32usize, std::collections::BTreeSet::from([109usize])),
                    (33usize, std::collections::BTreeSet::from([109usize])),
                    (34usize, std::collections::BTreeSet::from([109usize])),
                    (35usize, std::collections::BTreeSet::from([109usize])),
                    (36usize, std::collections::BTreeSet::from([109usize])),
                    (37usize, std::collections::BTreeSet::from([109usize])),
                    (38usize, std::collections::BTreeSet::from([109usize])),
                    (39usize, std::collections::BTreeSet::from([109usize])),
                    (40usize, std::collections::BTreeSet::from([109usize])),
                    (42usize, std::collections::BTreeSet::from([109usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 109usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([110usize])),
                    (1usize, std::collections::BTreeSet::from([110usize])),
                    (2usize, std::collections::BTreeSet::from([110usize])),
                    (3usize, std::collections::BTreeSet::from([110usize])),
                    (4usize, std::collections::BTreeSet::from([110usize])),
                    (5usize, std::collections::BTreeSet::from([110usize])),
                    (6usize, std::collections::BTreeSet::from([110usize])),
                    (7usize, std::collections::BTreeSet::from([110usize])),
                    (8usize, std::collections::BTreeSet::from([110usize])),
                    (9usize, std::collections::BTreeSet::from([110usize])),
                    (10usize, std::collections::BTreeSet::from([110usize])),
                    (11usize, std::collections::BTreeSet::from([110usize])),
                    (12usize, std::collections::BTreeSet::from([110usize])),
                    (13usize, std::collections::BTreeSet::from([110usize])),
                    (14usize, std::collections::BTreeSet::from([110usize])),
                    (15usize, std::collections::BTreeSet::from([110usize])),
                    (16usize, std::collections::BTreeSet::from([110usize])),
                    (17usize, std::collections::BTreeSet::from([110usize])),
                    (18usize, std::collections::BTreeSet::from([110usize])),
                    (19usize, std::collections::BTreeSet::from([110usize])),
                    (20usize, std::collections::BTreeSet::from([110usize])),
                    (21usize, std::collections::BTreeSet::from([110usize])),
                    (22usize, std::collections::BTreeSet::from([110usize])),
                    (23usize, std::collections::BTreeSet::from([110usize])),
                    (24usize, std::collections::BTreeSet::from([110usize])),
                    (25usize, std::collections::BTreeSet::from([110usize])),
                    (26usize, std::collections::BTreeSet::from([110usize])),
                    (27usize, std::collections::BTreeSet::from([110usize])),
                    (28usize, std::collections::BTreeSet::from([110usize])),
                    (29usize, std::collections::BTreeSet::from([110usize])),
                    (30usize, std::collections::BTreeSet::from([110usize])),
                    (31usize, std::collections::BTreeSet::from([110usize])),
                    (32usize, std::collections::BTreeSet::from([110usize])),
                    (33usize, std::collections::BTreeSet::from([110usize])),
                    (34usize, std::collections::BTreeSet::from([110usize])),
                    (35usize, std::collections::BTreeSet::from([110usize])),
                    (36usize, std::collections::BTreeSet::from([110usize])),
                    (37usize, std::collections::BTreeSet::from([110usize])),
                    (38usize, std::collections::BTreeSet::from([110usize])),
                    (39usize, std::collections::BTreeSet::from([110usize])),
                    (40usize, std::collections::BTreeSet::from([110usize])),
                    (42usize, std::collections::BTreeSet::from([110usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 110usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([111usize])),
                    (1usize, std::collections::BTreeSet::from([111usize])),
                    (2usize, std::collections::BTreeSet::from([111usize])),
                    (3usize, std::collections::BTreeSet::from([111usize])),
                    (4usize, std::collections::BTreeSet::from([111usize])),
                    (5usize, std::collections::BTreeSet::from([111usize])),
                    (6usize, std::collections::BTreeSet::from([111usize])),
                    (7usize, std::collections::BTreeSet::from([111usize])),
                    (8usize, std::collections::BTreeSet::from([111usize])),
                    (9usize, std::collections::BTreeSet::from([111usize])),
                    (10usize, std::collections::BTreeSet::from([111usize])),
                    (11usize, std::collections::BTreeSet::from([111usize])),
                    (12usize, std::collections::BTreeSet::from([111usize])),
                    (13usize, std::collections::BTreeSet::from([111usize])),
                    (14usize, std::collections::BTreeSet::from([111usize])),
                    (15usize, std::collections::BTreeSet::from([111usize])),
                    (16usize, std::collections::BTreeSet::from([111usize])),
                    (17usize, std::collections::BTreeSet::from([111usize])),
                    (18usize, std::collections::BTreeSet::from([111usize])),
                    (19usize, std::collections::BTreeSet::from([111usize])),
                    (20usize, std::collections::BTreeSet::from([111usize])),
                    (21usize, std::collections::BTreeSet::from([111usize])),
                    (22usize, std::collections::BTreeSet::from([111usize])),
                    (23usize, std::collections::BTreeSet::from([111usize])),
                    (24usize, std::collections::BTreeSet::from([111usize])),
                    (25usize, std::collections::BTreeSet::from([111usize])),
                    (26usize, std::collections::BTreeSet::from([111usize])),
                    (27usize, std::collections::BTreeSet::from([111usize])),
                    (28usize, std::collections::BTreeSet::from([111usize])),
                    (29usize, std::collections::BTreeSet::from([111usize])),
                    (30usize, std::collections::BTreeSet::from([111usize])),
                    (31usize, std::collections::BTreeSet::from([111usize])),
                    (32usize, std::collections::BTreeSet::from([111usize])),
                    (33usize, std::collections::BTreeSet::from([111usize])),
                    (34usize, std::collections::BTreeSet::from([111usize])),
                    (35usize, std::collections::BTreeSet::from([111usize])),
                    (36usize, std::collections::BTreeSet::from([111usize])),
                    (37usize, std::collections::BTreeSet::from([111usize])),
                    (38usize, std::collections::BTreeSet::from([111usize])),
                    (39usize, std::collections::BTreeSet::from([111usize])),
                    (40usize, std::collections::BTreeSet::from([111usize])),
                    (42usize, std::collections::BTreeSet::from([111usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 111usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([112usize])),
                    (1usize, std::collections::BTreeSet::from([112usize])),
                    (2usize, std::collections::BTreeSet::from([112usize])),
                    (3usize, std::collections::BTreeSet::from([112usize])),
                    (4usize, std::collections::BTreeSet::from([112usize])),
                    (5usize, std::collections::BTreeSet::from([112usize])),
                    (6usize, std::collections::BTreeSet::from([112usize])),
                    (7usize, std::collections::BTreeSet::from([112usize])),
                    (8usize, std::collections::BTreeSet::from([112usize])),
                    (9usize, std::collections::BTreeSet::from([112usize])),
                    (10usize, std::collections::BTreeSet::from([112usize])),
                    (11usize, std::collections::BTreeSet::from([112usize])),
                    (12usize, std::collections::BTreeSet::from([112usize])),
                    (13usize, std::collections::BTreeSet::from([112usize])),
                    (14usize, std::collections::BTreeSet::from([112usize])),
                    (15usize, std::collections::BTreeSet::from([112usize])),
                    (16usize, std::collections::BTreeSet::from([112usize])),
                    (17usize, std::collections::BTreeSet::from([112usize])),
                    (18usize, std::collections::BTreeSet::from([112usize])),
                    (19usize, std::collections::BTreeSet::from([112usize])),
                    (20usize, std::collections::BTreeSet::from([112usize])),
                    (21usize, std::collections::BTreeSet::from([112usize])),
                    (22usize, std::collections::BTreeSet::from([112usize])),
                    (23usize, std::collections::BTreeSet::from([112usize])),
                    (24usize, std::collections::BTreeSet::from([112usize])),
                    (25usize, std::collections::BTreeSet::from([112usize])),
                    (26usize, std::collections::BTreeSet::from([112usize])),
                    (27usize, std::collections::BTreeSet::from([112usize])),
                    (28usize, std::collections::BTreeSet::from([112usize])),
                    (29usize, std::collections::BTreeSet::from([112usize])),
                    (30usize, std::collections::BTreeSet::from([112usize])),
                    (31usize, std::collections::BTreeSet::from([112usize])),
                    (32usize, std::collections::BTreeSet::from([112usize])),
                    (33usize, std::collections::BTreeSet::from([112usize])),
                    (34usize, std::collections::BTreeSet::from([112usize])),
                    (35usize, std::collections::BTreeSet::from([112usize])),
                    (36usize, std::collections::BTreeSet::from([112usize])),
                    (37usize, std::collections::BTreeSet::from([112usize])),
                    (38usize, std::collections::BTreeSet::from([112usize])),
                    (39usize, std::collections::BTreeSet::from([112usize])),
                    (40usize, std::collections::BTreeSet::from([112usize])),
                    (42usize, std::collections::BTreeSet::from([112usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([113usize])),
                    (1usize, std::collections::BTreeSet::from([113usize])),
                    (2usize, std::collections::BTreeSet::from([113usize])),
                    (3usize, std::collections::BTreeSet::from([113usize])),
                    (4usize, std::collections::BTreeSet::from([113usize])),
                    (5usize, std::collections::BTreeSet::from([113usize])),
                    (6usize, std::collections::BTreeSet::from([113usize])),
                    (7usize, std::collections::BTreeSet::from([113usize])),
                    (8usize, std::collections::BTreeSet::from([113usize])),
                    (9usize, std::collections::BTreeSet::from([113usize])),
                    (10usize, std::collections::BTreeSet::from([113usize])),
                    (11usize, std::collections::BTreeSet::from([113usize])),
                    (12usize, std::collections::BTreeSet::from([113usize])),
                    (13usize, std::collections::BTreeSet::from([113usize])),
                    (14usize, std::collections::BTreeSet::from([113usize])),
                    (15usize, std::collections::BTreeSet::from([113usize])),
                    (16usize, std::collections::BTreeSet::from([113usize])),
                    (17usize, std::collections::BTreeSet::from([113usize])),
                    (18usize, std::collections::BTreeSet::from([113usize])),
                    (19usize, std::collections::BTreeSet::from([113usize])),
                    (20usize, std::collections::BTreeSet::from([113usize])),
                    (21usize, std::collections::BTreeSet::from([113usize])),
                    (22usize, std::collections::BTreeSet::from([113usize])),
                    (23usize, std::collections::BTreeSet::from([113usize])),
                    (24usize, std::collections::BTreeSet::from([113usize])),
                    (25usize, std::collections::BTreeSet::from([113usize])),
                    (26usize, std::collections::BTreeSet::from([113usize])),
                    (27usize, std::collections::BTreeSet::from([113usize])),
                    (28usize, std::collections::BTreeSet::from([113usize])),
                    (29usize, std::collections::BTreeSet::from([113usize])),
                    (30usize, std::collections::BTreeSet::from([113usize])),
                    (31usize, std::collections::BTreeSet::from([113usize])),
                    (32usize, std::collections::BTreeSet::from([113usize])),
                    (33usize, std::collections::BTreeSet::from([113usize])),
                    (34usize, std::collections::BTreeSet::from([113usize])),
                    (35usize, std::collections::BTreeSet::from([113usize])),
                    (36usize, std::collections::BTreeSet::from([113usize])),
                    (37usize, std::collections::BTreeSet::from([113usize])),
                    (38usize, std::collections::BTreeSet::from([113usize])),
                    (39usize, std::collections::BTreeSet::from([113usize])),
                    (40usize, std::collections::BTreeSet::from([113usize])),
                    (42usize, std::collections::BTreeSet::from([113usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([114usize])),
                    (1usize, std::collections::BTreeSet::from([114usize])),
                    (2usize, std::collections::BTreeSet::from([114usize])),
                    (3usize, std::collections::BTreeSet::from([114usize])),
                    (4usize, std::collections::BTreeSet::from([114usize])),
                    (5usize, std::collections::BTreeSet::from([114usize])),
                    (6usize, std::collections::BTreeSet::from([114usize])),
                    (7usize, std::collections::BTreeSet::from([114usize])),
                    (8usize, std::collections::BTreeSet::from([114usize])),
                    (9usize, std::collections::BTreeSet::from([114usize])),
                    (10usize, std::collections::BTreeSet::from([114usize])),
                    (11usize, std::collections::BTreeSet::from([114usize])),
                    (12usize, std::collections::BTreeSet::from([114usize])),
                    (13usize, std::collections::BTreeSet::from([114usize])),
                    (14usize, std::collections::BTreeSet::from([114usize])),
                    (15usize, std::collections::BTreeSet::from([114usize])),
                    (16usize, std::collections::BTreeSet::from([114usize])),
                    (17usize, std::collections::BTreeSet::from([114usize])),
                    (18usize, std::collections::BTreeSet::from([114usize])),
                    (19usize, std::collections::BTreeSet::from([114usize])),
                    (20usize, std::collections::BTreeSet::from([114usize])),
                    (21usize, std::collections::BTreeSet::from([114usize])),
                    (22usize, std::collections::BTreeSet::from([114usize])),
                    (23usize, std::collections::BTreeSet::from([114usize])),
                    (24usize, std::collections::BTreeSet::from([114usize])),
                    (25usize, std::collections::BTreeSet::from([114usize])),
                    (26usize, std::collections::BTreeSet::from([114usize])),
                    (27usize, std::collections::BTreeSet::from([114usize])),
                    (28usize, std::collections::BTreeSet::from([114usize])),
                    (29usize, std::collections::BTreeSet::from([114usize])),
                    (30usize, std::collections::BTreeSet::from([114usize])),
                    (31usize, std::collections::BTreeSet::from([114usize])),
                    (32usize, std::collections::BTreeSet::from([114usize])),
                    (33usize, std::collections::BTreeSet::from([114usize])),
                    (34usize, std::collections::BTreeSet::from([114usize])),
                    (35usize, std::collections::BTreeSet::from([114usize])),
                    (36usize, std::collections::BTreeSet::from([114usize])),
                    (37usize, std::collections::BTreeSet::from([114usize])),
                    (38usize, std::collections::BTreeSet::from([114usize])),
                    (39usize, std::collections::BTreeSet::from([114usize])),
                    (40usize, std::collections::BTreeSet::from([114usize])),
                    (42usize, std::collections::BTreeSet::from([114usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([115usize])),
                    (1usize, std::collections::BTreeSet::from([115usize])),
                    (2usize, std::collections::BTreeSet::from([115usize])),
                    (3usize, std::collections::BTreeSet::from([115usize])),
                    (4usize, std::collections::BTreeSet::from([115usize])),
                    (5usize, std::collections::BTreeSet::from([115usize])),
                    (6usize, std::collections::BTreeSet::from([115usize])),
                    (7usize, std::collections::BTreeSet::from([115usize])),
                    (8usize, std::collections::BTreeSet::from([115usize])),
                    (9usize, std::collections::BTreeSet::from([115usize])),
                    (10usize, std::collections::BTreeSet::from([115usize])),
                    (11usize, std::collections::BTreeSet::from([115usize])),
                    (12usize, std::collections::BTreeSet::from([115usize])),
                    (13usize, std::collections::BTreeSet::from([115usize])),
                    (14usize, std::collections::BTreeSet::from([115usize])),
                    (15usize, std::collections::BTreeSet::from([115usize])),
                    (16usize, std::collections::BTreeSet::from([115usize])),
                    (17usize, std::collections::BTreeSet::from([115usize])),
                    (18usize, std::collections::BTreeSet::from([115usize])),
                    (19usize, std::collections::BTreeSet::from([115usize])),
                    (20usize, std::collections::BTreeSet::from([115usize])),
                    (21usize, std::collections::BTreeSet::from([115usize])),
                    (22usize, std::collections::BTreeSet::from([115usize])),
                    (23usize, std::collections::BTreeSet::from([115usize])),
                    (24usize, std::collections::BTreeSet::from([115usize])),
                    (25usize, std::collections::BTreeSet::from([115usize])),
                    (26usize, std::collections::BTreeSet::from([115usize])),
                    (27usize, std::collections::BTreeSet::from([115usize])),
                    (28usize, std::collections::BTreeSet::from([115usize])),
                    (29usize, std::collections::BTreeSet::from([115usize])),
                    (30usize, std::collections::BTreeSet::from([115usize])),
                    (31usize, std::collections::BTreeSet::from([115usize])),
                    (32usize, std::collections::BTreeSet::from([115usize])),
                    (33usize, std::collections::BTreeSet::from([115usize])),
                    (34usize, std::collections::BTreeSet::from([115usize])),
                    (35usize, std::collections::BTreeSet::from([115usize])),
                    (36usize, std::collections::BTreeSet::from([115usize])),
                    (37usize, std::collections::BTreeSet::from([115usize])),
                    (38usize, std::collections::BTreeSet::from([115usize])),
                    (39usize, std::collections::BTreeSet::from([115usize])),
                    (40usize, std::collections::BTreeSet::from([115usize])),
                    (42usize, std::collections::BTreeSet::from([115usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 115usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([116usize])),
                    (1usize, std::collections::BTreeSet::from([116usize])),
                    (2usize, std::collections::BTreeSet::from([116usize])),
                    (3usize, std::collections::BTreeSet::from([116usize])),
                    (4usize, std::collections::BTreeSet::from([116usize])),
                    (5usize, std::collections::BTreeSet::from([116usize])),
                    (6usize, std::collections::BTreeSet::from([116usize])),
                    (7usize, std::collections::BTreeSet::from([116usize])),
                    (8usize, std::collections::BTreeSet::from([116usize])),
                    (9usize, std::collections::BTreeSet::from([116usize])),
                    (10usize, std::collections::BTreeSet::from([116usize])),
                    (11usize, std::collections::BTreeSet::from([116usize])),
                    (12usize, std::collections::BTreeSet::from([116usize])),
                    (13usize, std::collections::BTreeSet::from([116usize])),
                    (14usize, std::collections::BTreeSet::from([116usize])),
                    (15usize, std::collections::BTreeSet::from([116usize])),
                    (16usize, std::collections::BTreeSet::from([116usize])),
                    (17usize, std::collections::BTreeSet::from([116usize])),
                    (18usize, std::collections::BTreeSet::from([116usize])),
                    (19usize, std::collections::BTreeSet::from([116usize])),
                    (20usize, std::collections::BTreeSet::from([116usize])),
                    (21usize, std::collections::BTreeSet::from([116usize])),
                    (22usize, std::collections::BTreeSet::from([116usize])),
                    (23usize, std::collections::BTreeSet::from([116usize])),
                    (24usize, std::collections::BTreeSet::from([116usize])),
                    (25usize, std::collections::BTreeSet::from([116usize])),
                    (26usize, std::collections::BTreeSet::from([116usize])),
                    (27usize, std::collections::BTreeSet::from([116usize])),
                    (28usize, std::collections::BTreeSet::from([116usize])),
                    (29usize, std::collections::BTreeSet::from([116usize])),
                    (30usize, std::collections::BTreeSet::from([116usize])),
                    (31usize, std::collections::BTreeSet::from([116usize])),
                    (32usize, std::collections::BTreeSet::from([116usize])),
                    (33usize, std::collections::BTreeSet::from([116usize])),
                    (34usize, std::collections::BTreeSet::from([116usize])),
                    (35usize, std::collections::BTreeSet::from([116usize])),
                    (36usize, std::collections::BTreeSet::from([116usize])),
                    (37usize, std::collections::BTreeSet::from([116usize])),
                    (38usize, std::collections::BTreeSet::from([116usize])),
                    (39usize, std::collections::BTreeSet::from([116usize])),
                    (40usize, std::collections::BTreeSet::from([116usize])),
                    (42usize, std::collections::BTreeSet::from([116usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 116usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([117usize])),
                    (1usize, std::collections::BTreeSet::from([117usize])),
                    (2usize, std::collections::BTreeSet::from([117usize])),
                    (3usize, std::collections::BTreeSet::from([117usize])),
                    (4usize, std::collections::BTreeSet::from([117usize])),
                    (5usize, std::collections::BTreeSet::from([117usize])),
                    (6usize, std::collections::BTreeSet::from([117usize])),
                    (7usize, std::collections::BTreeSet::from([117usize])),
                    (8usize, std::collections::BTreeSet::from([117usize])),
                    (9usize, std::collections::BTreeSet::from([117usize])),
                    (10usize, std::collections::BTreeSet::from([117usize])),
                    (11usize, std::collections::BTreeSet::from([117usize])),
                    (12usize, std::collections::BTreeSet::from([117usize])),
                    (13usize, std::collections::BTreeSet::from([117usize])),
                    (14usize, std::collections::BTreeSet::from([117usize])),
                    (15usize, std::collections::BTreeSet::from([117usize])),
                    (16usize, std::collections::BTreeSet::from([117usize])),
                    (17usize, std::collections::BTreeSet::from([117usize])),
                    (18usize, std::collections::BTreeSet::from([117usize])),
                    (19usize, std::collections::BTreeSet::from([117usize])),
                    (20usize, std::collections::BTreeSet::from([117usize])),
                    (21usize, std::collections::BTreeSet::from([117usize])),
                    (22usize, std::collections::BTreeSet::from([117usize])),
                    (23usize, std::collections::BTreeSet::from([117usize])),
                    (24usize, std::collections::BTreeSet::from([117usize])),
                    (25usize, std::collections::BTreeSet::from([117usize])),
                    (26usize, std::collections::BTreeSet::from([117usize])),
                    (27usize, std::collections::BTreeSet::from([117usize])),
                    (28usize, std::collections::BTreeSet::from([117usize])),
                    (29usize, std::collections::BTreeSet::from([117usize])),
                    (30usize, std::collections::BTreeSet::from([117usize])),
                    (31usize, std::collections::BTreeSet::from([117usize])),
                    (32usize, std::collections::BTreeSet::from([117usize])),
                    (33usize, std::collections::BTreeSet::from([117usize])),
                    (34usize, std::collections::BTreeSet::from([117usize])),
                    (35usize, std::collections::BTreeSet::from([117usize])),
                    (36usize, std::collections::BTreeSet::from([117usize])),
                    (37usize, std::collections::BTreeSet::from([117usize])),
                    (38usize, std::collections::BTreeSet::from([117usize])),
                    (39usize, std::collections::BTreeSet::from([117usize])),
                    (40usize, std::collections::BTreeSet::from([117usize])),
                    (42usize, std::collections::BTreeSet::from([117usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 117usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([118usize])),
                    (1usize, std::collections::BTreeSet::from([118usize])),
                    (2usize, std::collections::BTreeSet::from([118usize])),
                    (3usize, std::collections::BTreeSet::from([118usize])),
                    (4usize, std::collections::BTreeSet::from([118usize])),
                    (5usize, std::collections::BTreeSet::from([118usize])),
                    (6usize, std::collections::BTreeSet::from([118usize])),
                    (7usize, std::collections::BTreeSet::from([118usize])),
                    (8usize, std::collections::BTreeSet::from([118usize])),
                    (9usize, std::collections::BTreeSet::from([118usize])),
                    (10usize, std::collections::BTreeSet::from([118usize])),
                    (11usize, std::collections::BTreeSet::from([118usize])),
                    (12usize, std::collections::BTreeSet::from([118usize])),
                    (13usize, std::collections::BTreeSet::from([118usize])),
                    (14usize, std::collections::BTreeSet::from([118usize])),
                    (15usize, std::collections::BTreeSet::from([118usize])),
                    (16usize, std::collections::BTreeSet::from([118usize])),
                    (17usize, std::collections::BTreeSet::from([118usize])),
                    (18usize, std::collections::BTreeSet::from([118usize])),
                    (19usize, std::collections::BTreeSet::from([118usize])),
                    (20usize, std::collections::BTreeSet::from([118usize])),
                    (21usize, std::collections::BTreeSet::from([118usize])),
                    (22usize, std::collections::BTreeSet::from([118usize])),
                    (23usize, std::collections::BTreeSet::from([118usize])),
                    (24usize, std::collections::BTreeSet::from([118usize])),
                    (25usize, std::collections::BTreeSet::from([118usize])),
                    (26usize, std::collections::BTreeSet::from([118usize])),
                    (27usize, std::collections::BTreeSet::from([118usize])),
                    (28usize, std::collections::BTreeSet::from([118usize])),
                    (29usize, std::collections::BTreeSet::from([118usize])),
                    (30usize, std::collections::BTreeSet::from([118usize])),
                    (31usize, std::collections::BTreeSet::from([118usize])),
                    (32usize, std::collections::BTreeSet::from([118usize])),
                    (33usize, std::collections::BTreeSet::from([118usize])),
                    (34usize, std::collections::BTreeSet::from([118usize])),
                    (35usize, std::collections::BTreeSet::from([118usize])),
                    (36usize, std::collections::BTreeSet::from([118usize])),
                    (37usize, std::collections::BTreeSet::from([118usize])),
                    (38usize, std::collections::BTreeSet::from([118usize])),
                    (39usize, std::collections::BTreeSet::from([118usize])),
                    (40usize, std::collections::BTreeSet::from([118usize])),
                    (42usize, std::collections::BTreeSet::from([118usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 118usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([119usize])),
                    (1usize, std::collections::BTreeSet::from([119usize])),
                    (2usize, std::collections::BTreeSet::from([119usize])),
                    (3usize, std::collections::BTreeSet::from([119usize])),
                    (4usize, std::collections::BTreeSet::from([119usize])),
                    (5usize, std::collections::BTreeSet::from([119usize])),
                    (6usize, std::collections::BTreeSet::from([119usize])),
                    (7usize, std::collections::BTreeSet::from([119usize])),
                    (8usize, std::collections::BTreeSet::from([119usize])),
                    (9usize, std::collections::BTreeSet::from([119usize])),
                    (10usize, std::collections::BTreeSet::from([119usize])),
                    (11usize, std::collections::BTreeSet::from([119usize])),
                    (12usize, std::collections::BTreeSet::from([119usize])),
                    (13usize, std::collections::BTreeSet::from([119usize])),
                    (14usize, std::collections::BTreeSet::from([119usize])),
                    (15usize, std::collections::BTreeSet::from([119usize])),
                    (16usize, std::collections::BTreeSet::from([119usize])),
                    (17usize, std::collections::BTreeSet::from([119usize])),
                    (18usize, std::collections::BTreeSet::from([119usize])),
                    (19usize, std::collections::BTreeSet::from([119usize])),
                    (20usize, std::collections::BTreeSet::from([119usize])),
                    (21usize, std::collections::BTreeSet::from([119usize])),
                    (22usize, std::collections::BTreeSet::from([119usize])),
                    (23usize, std::collections::BTreeSet::from([119usize])),
                    (24usize, std::collections::BTreeSet::from([119usize])),
                    (25usize, std::collections::BTreeSet::from([119usize])),
                    (26usize, std::collections::BTreeSet::from([119usize])),
                    (27usize, std::collections::BTreeSet::from([119usize])),
                    (28usize, std::collections::BTreeSet::from([119usize])),
                    (29usize, std::collections::BTreeSet::from([119usize])),
                    (30usize, std::collections::BTreeSet::from([119usize])),
                    (31usize, std::collections::BTreeSet::from([119usize])),
                    (32usize, std::collections::BTreeSet::from([119usize])),
                    (33usize, std::collections::BTreeSet::from([119usize])),
                    (34usize, std::collections::BTreeSet::from([119usize])),
                    (35usize, std::collections::BTreeSet::from([119usize])),
                    (36usize, std::collections::BTreeSet::from([119usize])),
                    (37usize, std::collections::BTreeSet::from([119usize])),
                    (38usize, std::collections::BTreeSet::from([119usize])),
                    (39usize, std::collections::BTreeSet::from([119usize])),
                    (40usize, std::collections::BTreeSet::from([119usize])),
                    (42usize, std::collections::BTreeSet::from([119usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 119usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([120usize])),
                    (1usize, std::collections::BTreeSet::from([120usize])),
                    (2usize, std::collections::BTreeSet::from([120usize])),
                    (3usize, std::collections::BTreeSet::from([120usize])),
                    (4usize, std::collections::BTreeSet::from([120usize])),
                    (5usize, std::collections::BTreeSet::from([120usize])),
                    (6usize, std::collections::BTreeSet::from([120usize])),
                    (7usize, std::collections::BTreeSet::from([120usize])),
                    (8usize, std::collections::BTreeSet::from([120usize])),
                    (9usize, std::collections::BTreeSet::from([120usize])),
                    (10usize, std::collections::BTreeSet::from([120usize])),
                    (11usize, std::collections::BTreeSet::from([120usize])),
                    (12usize, std::collections::BTreeSet::from([120usize])),
                    (13usize, std::collections::BTreeSet::from([120usize])),
                    (14usize, std::collections::BTreeSet::from([120usize])),
                    (15usize, std::collections::BTreeSet::from([120usize])),
                    (16usize, std::collections::BTreeSet::from([120usize])),
                    (17usize, std::collections::BTreeSet::from([120usize])),
                    (18usize, std::collections::BTreeSet::from([120usize])),
                    (19usize, std::collections::BTreeSet::from([120usize])),
                    (20usize, std::collections::BTreeSet::from([120usize])),
                    (21usize, std::collections::BTreeSet::from([120usize])),
                    (22usize, std::collections::BTreeSet::from([120usize])),
                    (23usize, std::collections::BTreeSet::from([120usize])),
                    (24usize, std::collections::BTreeSet::from([120usize])),
                    (25usize, std::collections::BTreeSet::from([120usize])),
                    (26usize, std::collections::BTreeSet::from([120usize])),
                    (27usize, std::collections::BTreeSet::from([120usize])),
                    (28usize, std::collections::BTreeSet::from([120usize])),
                    (29usize, std::collections::BTreeSet::from([120usize])),
                    (30usize, std::collections::BTreeSet::from([120usize])),
                    (31usize, std::collections::BTreeSet::from([120usize])),
                    (32usize, std::collections::BTreeSet::from([120usize])),
                    (33usize, std::collections::BTreeSet::from([120usize])),
                    (34usize, std::collections::BTreeSet::from([120usize])),
                    (35usize, std::collections::BTreeSet::from([120usize])),
                    (36usize, std::collections::BTreeSet::from([120usize])),
                    (37usize, std::collections::BTreeSet::from([120usize])),
                    (38usize, std::collections::BTreeSet::from([120usize])),
                    (39usize, std::collections::BTreeSet::from([120usize])),
                    (40usize, std::collections::BTreeSet::from([120usize])),
                    (42usize, std::collections::BTreeSet::from([120usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([121usize])),
                    (1usize, std::collections::BTreeSet::from([121usize])),
                    (2usize, std::collections::BTreeSet::from([121usize])),
                    (3usize, std::collections::BTreeSet::from([121usize])),
                    (4usize, std::collections::BTreeSet::from([121usize])),
                    (5usize, std::collections::BTreeSet::from([121usize])),
                    (6usize, std::collections::BTreeSet::from([121usize])),
                    (7usize, std::collections::BTreeSet::from([121usize])),
                    (8usize, std::collections::BTreeSet::from([121usize])),
                    (9usize, std::collections::BTreeSet::from([121usize])),
                    (10usize, std::collections::BTreeSet::from([121usize])),
                    (11usize, std::collections::BTreeSet::from([121usize])),
                    (12usize, std::collections::BTreeSet::from([121usize])),
                    (13usize, std::collections::BTreeSet::from([121usize])),
                    (14usize, std::collections::BTreeSet::from([121usize])),
                    (15usize, std::collections::BTreeSet::from([121usize])),
                    (16usize, std::collections::BTreeSet::from([121usize])),
                    (17usize, std::collections::BTreeSet::from([121usize])),
                    (18usize, std::collections::BTreeSet::from([121usize])),
                    (19usize, std::collections::BTreeSet::from([121usize])),
                    (20usize, std::collections::BTreeSet::from([121usize])),
                    (21usize, std::collections::BTreeSet::from([121usize])),
                    (22usize, std::collections::BTreeSet::from([121usize])),
                    (23usize, std::collections::BTreeSet::from([121usize])),
                    (24usize, std::collections::BTreeSet::from([121usize])),
                    (25usize, std::collections::BTreeSet::from([121usize])),
                    (26usize, std::collections::BTreeSet::from([121usize])),
                    (27usize, std::collections::BTreeSet::from([121usize])),
                    (28usize, std::collections::BTreeSet::from([121usize])),
                    (29usize, std::collections::BTreeSet::from([121usize])),
                    (30usize, std::collections::BTreeSet::from([121usize])),
                    (31usize, std::collections::BTreeSet::from([121usize])),
                    (32usize, std::collections::BTreeSet::from([121usize])),
                    (33usize, std::collections::BTreeSet::from([121usize])),
                    (34usize, std::collections::BTreeSet::from([121usize])),
                    (35usize, std::collections::BTreeSet::from([121usize])),
                    (36usize, std::collections::BTreeSet::from([121usize])),
                    (37usize, std::collections::BTreeSet::from([121usize])),
                    (38usize, std::collections::BTreeSet::from([121usize])),
                    (39usize, std::collections::BTreeSet::from([121usize])),
                    (40usize, std::collections::BTreeSet::from([121usize])),
                    (42usize, std::collections::BTreeSet::from([121usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 121usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([122usize])),
                    (1usize, std::collections::BTreeSet::from([122usize])),
                    (2usize, std::collections::BTreeSet::from([122usize])),
                    (3usize, std::collections::BTreeSet::from([122usize])),
                    (4usize, std::collections::BTreeSet::from([122usize])),
                    (5usize, std::collections::BTreeSet::from([122usize])),
                    (6usize, std::collections::BTreeSet::from([122usize])),
                    (7usize, std::collections::BTreeSet::from([122usize])),
                    (8usize, std::collections::BTreeSet::from([122usize])),
                    (9usize, std::collections::BTreeSet::from([122usize])),
                    (10usize, std::collections::BTreeSet::from([122usize])),
                    (11usize, std::collections::BTreeSet::from([122usize])),
                    (12usize, std::collections::BTreeSet::from([122usize])),
                    (13usize, std::collections::BTreeSet::from([122usize])),
                    (14usize, std::collections::BTreeSet::from([122usize])),
                    (15usize, std::collections::BTreeSet::from([122usize])),
                    (16usize, std::collections::BTreeSet::from([122usize])),
                    (17usize, std::collections::BTreeSet::from([122usize])),
                    (18usize, std::collections::BTreeSet::from([122usize])),
                    (19usize, std::collections::BTreeSet::from([122usize])),
                    (20usize, std::collections::BTreeSet::from([122usize])),
                    (21usize, std::collections::BTreeSet::from([122usize])),
                    (22usize, std::collections::BTreeSet::from([122usize])),
                    (23usize, std::collections::BTreeSet::from([122usize])),
                    (24usize, std::collections::BTreeSet::from([122usize])),
                    (25usize, std::collections::BTreeSet::from([122usize])),
                    (26usize, std::collections::BTreeSet::from([122usize])),
                    (27usize, std::collections::BTreeSet::from([122usize])),
                    (28usize, std::collections::BTreeSet::from([122usize])),
                    (29usize, std::collections::BTreeSet::from([122usize])),
                    (30usize, std::collections::BTreeSet::from([122usize])),
                    (31usize, std::collections::BTreeSet::from([122usize])),
                    (32usize, std::collections::BTreeSet::from([122usize])),
                    (33usize, std::collections::BTreeSet::from([122usize])),
                    (34usize, std::collections::BTreeSet::from([122usize])),
                    (35usize, std::collections::BTreeSet::from([122usize])),
                    (36usize, std::collections::BTreeSet::from([122usize])),
                    (37usize, std::collections::BTreeSet::from([122usize])),
                    (38usize, std::collections::BTreeSet::from([122usize])),
                    (39usize, std::collections::BTreeSet::from([122usize])),
                    (40usize, std::collections::BTreeSet::from([122usize])),
                    (42usize, std::collections::BTreeSet::from([122usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 122usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([123usize])),
                    (1usize, std::collections::BTreeSet::from([123usize])),
                    (2usize, std::collections::BTreeSet::from([123usize])),
                    (3usize, std::collections::BTreeSet::from([123usize])),
                    (4usize, std::collections::BTreeSet::from([123usize])),
                    (5usize, std::collections::BTreeSet::from([123usize])),
                    (6usize, std::collections::BTreeSet::from([123usize])),
                    (7usize, std::collections::BTreeSet::from([123usize])),
                    (8usize, std::collections::BTreeSet::from([123usize])),
                    (9usize, std::collections::BTreeSet::from([123usize])),
                    (10usize, std::collections::BTreeSet::from([123usize])),
                    (11usize, std::collections::BTreeSet::from([123usize])),
                    (12usize, std::collections::BTreeSet::from([123usize])),
                    (13usize, std::collections::BTreeSet::from([123usize])),
                    (14usize, std::collections::BTreeSet::from([123usize])),
                    (15usize, std::collections::BTreeSet::from([123usize])),
                    (16usize, std::collections::BTreeSet::from([123usize])),
                    (17usize, std::collections::BTreeSet::from([123usize])),
                    (18usize, std::collections::BTreeSet::from([123usize])),
                    (19usize, std::collections::BTreeSet::from([123usize])),
                    (20usize, std::collections::BTreeSet::from([123usize])),
                    (21usize, std::collections::BTreeSet::from([123usize])),
                    (22usize, std::collections::BTreeSet::from([123usize])),
                    (23usize, std::collections::BTreeSet::from([123usize])),
                    (24usize, std::collections::BTreeSet::from([123usize])),
                    (25usize, std::collections::BTreeSet::from([123usize])),
                    (26usize, std::collections::BTreeSet::from([123usize])),
                    (27usize, std::collections::BTreeSet::from([123usize])),
                    (28usize, std::collections::BTreeSet::from([123usize])),
                    (29usize, std::collections::BTreeSet::from([123usize])),
                    (30usize, std::collections::BTreeSet::from([123usize])),
                    (31usize, std::collections::BTreeSet::from([123usize])),
                    (32usize, std::collections::BTreeSet::from([123usize])),
                    (33usize, std::collections::BTreeSet::from([123usize])),
                    (34usize, std::collections::BTreeSet::from([123usize])),
                    (35usize, std::collections::BTreeSet::from([123usize])),
                    (36usize, std::collections::BTreeSet::from([123usize])),
                    (37usize, std::collections::BTreeSet::from([123usize])),
                    (38usize, std::collections::BTreeSet::from([123usize])),
                    (39usize, std::collections::BTreeSet::from([123usize])),
                    (40usize, std::collections::BTreeSet::from([123usize])),
                    (42usize, std::collections::BTreeSet::from([123usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 123usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([124usize])),
                    (1usize, std::collections::BTreeSet::from([124usize])),
                    (2usize, std::collections::BTreeSet::from([124usize])),
                    (3usize, std::collections::BTreeSet::from([124usize])),
                    (4usize, std::collections::BTreeSet::from([124usize])),
                    (5usize, std::collections::BTreeSet::from([124usize])),
                    (6usize, std::collections::BTreeSet::from([124usize])),
                    (7usize, std::collections::BTreeSet::from([124usize])),
                    (8usize, std::collections::BTreeSet::from([124usize])),
                    (9usize, std::collections::BTreeSet::from([124usize])),
                    (10usize, std::collections::BTreeSet::from([124usize])),
                    (11usize, std::collections::BTreeSet::from([124usize])),
                    (12usize, std::collections::BTreeSet::from([124usize])),
                    (13usize, std::collections::BTreeSet::from([124usize])),
                    (14usize, std::collections::BTreeSet::from([124usize])),
                    (15usize, std::collections::BTreeSet::from([124usize])),
                    (16usize, std::collections::BTreeSet::from([124usize])),
                    (17usize, std::collections::BTreeSet::from([124usize])),
                    (18usize, std::collections::BTreeSet::from([124usize])),
                    (19usize, std::collections::BTreeSet::from([124usize])),
                    (20usize, std::collections::BTreeSet::from([124usize])),
                    (21usize, std::collections::BTreeSet::from([124usize])),
                    (22usize, std::collections::BTreeSet::from([124usize])),
                    (23usize, std::collections::BTreeSet::from([124usize])),
                    (24usize, std::collections::BTreeSet::from([124usize])),
                    (25usize, std::collections::BTreeSet::from([124usize])),
                    (26usize, std::collections::BTreeSet::from([124usize])),
                    (27usize, std::collections::BTreeSet::from([124usize])),
                    (28usize, std::collections::BTreeSet::from([124usize])),
                    (29usize, std::collections::BTreeSet::from([124usize])),
                    (30usize, std::collections::BTreeSet::from([124usize])),
                    (31usize, std::collections::BTreeSet::from([124usize])),
                    (32usize, std::collections::BTreeSet::from([124usize])),
                    (33usize, std::collections::BTreeSet::from([124usize])),
                    (34usize, std::collections::BTreeSet::from([124usize])),
                    (35usize, std::collections::BTreeSet::from([124usize])),
                    (36usize, std::collections::BTreeSet::from([124usize])),
                    (37usize, std::collections::BTreeSet::from([124usize])),
                    (38usize, std::collections::BTreeSet::from([124usize])),
                    (39usize, std::collections::BTreeSet::from([124usize])),
                    (40usize, std::collections::BTreeSet::from([124usize])),
                    (42usize, std::collections::BTreeSet::from([124usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 124usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([125usize])),
                    (1usize, std::collections::BTreeSet::from([125usize])),
                    (2usize, std::collections::BTreeSet::from([125usize])),
                    (3usize, std::collections::BTreeSet::from([125usize])),
                    (4usize, std::collections::BTreeSet::from([125usize])),
                    (5usize, std::collections::BTreeSet::from([125usize])),
                    (6usize, std::collections::BTreeSet::from([125usize])),
                    (7usize, std::collections::BTreeSet::from([125usize])),
                    (8usize, std::collections::BTreeSet::from([125usize])),
                    (9usize, std::collections::BTreeSet::from([125usize])),
                    (10usize, std::collections::BTreeSet::from([125usize])),
                    (11usize, std::collections::BTreeSet::from([125usize])),
                    (12usize, std::collections::BTreeSet::from([125usize])),
                    (13usize, std::collections::BTreeSet::from([125usize])),
                    (14usize, std::collections::BTreeSet::from([125usize])),
                    (15usize, std::collections::BTreeSet::from([125usize])),
                    (16usize, std::collections::BTreeSet::from([125usize])),
                    (17usize, std::collections::BTreeSet::from([125usize])),
                    (18usize, std::collections::BTreeSet::from([125usize])),
                    (19usize, std::collections::BTreeSet::from([125usize])),
                    (20usize, std::collections::BTreeSet::from([125usize])),
                    (21usize, std::collections::BTreeSet::from([125usize])),
                    (22usize, std::collections::BTreeSet::from([125usize])),
                    (23usize, std::collections::BTreeSet::from([125usize])),
                    (24usize, std::collections::BTreeSet::from([125usize])),
                    (25usize, std::collections::BTreeSet::from([125usize])),
                    (26usize, std::collections::BTreeSet::from([125usize])),
                    (27usize, std::collections::BTreeSet::from([125usize])),
                    (28usize, std::collections::BTreeSet::from([125usize])),
                    (29usize, std::collections::BTreeSet::from([125usize])),
                    (30usize, std::collections::BTreeSet::from([125usize])),
                    (31usize, std::collections::BTreeSet::from([125usize])),
                    (32usize, std::collections::BTreeSet::from([125usize])),
                    (33usize, std::collections::BTreeSet::from([125usize])),
                    (34usize, std::collections::BTreeSet::from([125usize])),
                    (35usize, std::collections::BTreeSet::from([125usize])),
                    (36usize, std::collections::BTreeSet::from([125usize])),
                    (37usize, std::collections::BTreeSet::from([125usize])),
                    (38usize, std::collections::BTreeSet::from([125usize])),
                    (39usize, std::collections::BTreeSet::from([125usize])),
                    (40usize, std::collections::BTreeSet::from([125usize])),
                    (42usize, std::collections::BTreeSet::from([125usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 125usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([126usize])),
                    (1usize, std::collections::BTreeSet::from([126usize])),
                    (2usize, std::collections::BTreeSet::from([126usize])),
                    (3usize, std::collections::BTreeSet::from([126usize])),
                    (4usize, std::collections::BTreeSet::from([126usize])),
                    (5usize, std::collections::BTreeSet::from([126usize])),
                    (6usize, std::collections::BTreeSet::from([126usize])),
                    (7usize, std::collections::BTreeSet::from([126usize])),
                    (8usize, std::collections::BTreeSet::from([126usize])),
                    (9usize, std::collections::BTreeSet::from([126usize])),
                    (10usize, std::collections::BTreeSet::from([126usize])),
                    (11usize, std::collections::BTreeSet::from([126usize])),
                    (12usize, std::collections::BTreeSet::from([126usize])),
                    (13usize, std::collections::BTreeSet::from([126usize])),
                    (14usize, std::collections::BTreeSet::from([126usize])),
                    (15usize, std::collections::BTreeSet::from([126usize])),
                    (16usize, std::collections::BTreeSet::from([126usize])),
                    (17usize, std::collections::BTreeSet::from([126usize])),
                    (18usize, std::collections::BTreeSet::from([126usize])),
                    (19usize, std::collections::BTreeSet::from([126usize])),
                    (20usize, std::collections::BTreeSet::from([126usize])),
                    (21usize, std::collections::BTreeSet::from([126usize])),
                    (22usize, std::collections::BTreeSet::from([126usize])),
                    (23usize, std::collections::BTreeSet::from([126usize])),
                    (24usize, std::collections::BTreeSet::from([126usize])),
                    (25usize, std::collections::BTreeSet::from([126usize])),
                    (26usize, std::collections::BTreeSet::from([126usize])),
                    (27usize, std::collections::BTreeSet::from([126usize])),
                    (28usize, std::collections::BTreeSet::from([126usize])),
                    (29usize, std::collections::BTreeSet::from([126usize])),
                    (30usize, std::collections::BTreeSet::from([126usize])),
                    (31usize, std::collections::BTreeSet::from([126usize])),
                    (32usize, std::collections::BTreeSet::from([126usize])),
                    (33usize, std::collections::BTreeSet::from([126usize])),
                    (34usize, std::collections::BTreeSet::from([126usize])),
                    (35usize, std::collections::BTreeSet::from([126usize])),
                    (36usize, std::collections::BTreeSet::from([126usize])),
                    (37usize, std::collections::BTreeSet::from([126usize])),
                    (38usize, std::collections::BTreeSet::from([126usize])),
                    (39usize, std::collections::BTreeSet::from([126usize])),
                    (40usize, std::collections::BTreeSet::from([126usize])),
                    (42usize, std::collections::BTreeSet::from([126usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 126usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([127usize])),
                    (1usize, std::collections::BTreeSet::from([127usize])),
                    (2usize, std::collections::BTreeSet::from([127usize])),
                    (3usize, std::collections::BTreeSet::from([127usize])),
                    (4usize, std::collections::BTreeSet::from([127usize])),
                    (5usize, std::collections::BTreeSet::from([127usize])),
                    (6usize, std::collections::BTreeSet::from([127usize])),
                    (7usize, std::collections::BTreeSet::from([127usize])),
                    (8usize, std::collections::BTreeSet::from([127usize])),
                    (9usize, std::collections::BTreeSet::from([127usize])),
                    (10usize, std::collections::BTreeSet::from([127usize])),
                    (11usize, std::collections::BTreeSet::from([127usize])),
                    (12usize, std::collections::BTreeSet::from([127usize])),
                    (13usize, std::collections::BTreeSet::from([127usize])),
                    (14usize, std::collections::BTreeSet::from([127usize])),
                    (15usize, std::collections::BTreeSet::from([127usize])),
                    (16usize, std::collections::BTreeSet::from([127usize])),
                    (17usize, std::collections::BTreeSet::from([127usize])),
                    (18usize, std::collections::BTreeSet::from([127usize])),
                    (19usize, std::collections::BTreeSet::from([127usize])),
                    (20usize, std::collections::BTreeSet::from([127usize])),
                    (21usize, std::collections::BTreeSet::from([127usize])),
                    (22usize, std::collections::BTreeSet::from([127usize])),
                    (23usize, std::collections::BTreeSet::from([127usize])),
                    (24usize, std::collections::BTreeSet::from([127usize])),
                    (25usize, std::collections::BTreeSet::from([127usize])),
                    (26usize, std::collections::BTreeSet::from([127usize])),
                    (27usize, std::collections::BTreeSet::from([127usize])),
                    (28usize, std::collections::BTreeSet::from([127usize])),
                    (29usize, std::collections::BTreeSet::from([127usize])),
                    (30usize, std::collections::BTreeSet::from([127usize])),
                    (31usize, std::collections::BTreeSet::from([127usize])),
                    (32usize, std::collections::BTreeSet::from([127usize])),
                    (33usize, std::collections::BTreeSet::from([127usize])),
                    (34usize, std::collections::BTreeSet::from([127usize])),
                    (35usize, std::collections::BTreeSet::from([127usize])),
                    (36usize, std::collections::BTreeSet::from([127usize])),
                    (37usize, std::collections::BTreeSet::from([127usize])),
                    (38usize, std::collections::BTreeSet::from([127usize])),
                    (39usize, std::collections::BTreeSet::from([127usize])),
                    (40usize, std::collections::BTreeSet::from([127usize])),
                    (42usize, std::collections::BTreeSet::from([127usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 127usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([128usize])),
                    (1usize, std::collections::BTreeSet::from([128usize])),
                    (2usize, std::collections::BTreeSet::from([128usize])),
                    (3usize, std::collections::BTreeSet::from([128usize])),
                    (4usize, std::collections::BTreeSet::from([128usize])),
                    (5usize, std::collections::BTreeSet::from([128usize])),
                    (6usize, std::collections::BTreeSet::from([128usize])),
                    (7usize, std::collections::BTreeSet::from([128usize])),
                    (8usize, std::collections::BTreeSet::from([128usize])),
                    (9usize, std::collections::BTreeSet::from([128usize])),
                    (10usize, std::collections::BTreeSet::from([128usize])),
                    (11usize, std::collections::BTreeSet::from([128usize])),
                    (12usize, std::collections::BTreeSet::from([128usize])),
                    (13usize, std::collections::BTreeSet::from([128usize])),
                    (14usize, std::collections::BTreeSet::from([128usize])),
                    (15usize, std::collections::BTreeSet::from([128usize])),
                    (16usize, std::collections::BTreeSet::from([128usize])),
                    (17usize, std::collections::BTreeSet::from([128usize])),
                    (18usize, std::collections::BTreeSet::from([128usize])),
                    (19usize, std::collections::BTreeSet::from([128usize])),
                    (20usize, std::collections::BTreeSet::from([128usize])),
                    (21usize, std::collections::BTreeSet::from([128usize])),
                    (22usize, std::collections::BTreeSet::from([128usize])),
                    (23usize, std::collections::BTreeSet::from([128usize])),
                    (24usize, std::collections::BTreeSet::from([128usize])),
                    (25usize, std::collections::BTreeSet::from([128usize])),
                    (26usize, std::collections::BTreeSet::from([128usize])),
                    (27usize, std::collections::BTreeSet::from([128usize])),
                    (28usize, std::collections::BTreeSet::from([128usize])),
                    (29usize, std::collections::BTreeSet::from([128usize])),
                    (30usize, std::collections::BTreeSet::from([128usize])),
                    (31usize, std::collections::BTreeSet::from([128usize])),
                    (32usize, std::collections::BTreeSet::from([128usize])),
                    (33usize, std::collections::BTreeSet::from([128usize])),
                    (34usize, std::collections::BTreeSet::from([128usize])),
                    (35usize, std::collections::BTreeSet::from([128usize])),
                    (36usize, std::collections::BTreeSet::from([128usize])),
                    (37usize, std::collections::BTreeSet::from([128usize])),
                    (38usize, std::collections::BTreeSet::from([128usize])),
                    (39usize, std::collections::BTreeSet::from([128usize])),
                    (40usize, std::collections::BTreeSet::from([128usize])),
                    (42usize, std::collections::BTreeSet::from([128usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 128usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([129usize])),
                    (1usize, std::collections::BTreeSet::from([129usize])),
                    (2usize, std::collections::BTreeSet::from([129usize])),
                    (3usize, std::collections::BTreeSet::from([129usize])),
                    (4usize, std::collections::BTreeSet::from([129usize])),
                    (5usize, std::collections::BTreeSet::from([129usize])),
                    (6usize, std::collections::BTreeSet::from([129usize])),
                    (7usize, std::collections::BTreeSet::from([129usize])),
                    (8usize, std::collections::BTreeSet::from([129usize])),
                    (9usize, std::collections::BTreeSet::from([129usize])),
                    (10usize, std::collections::BTreeSet::from([129usize])),
                    (11usize, std::collections::BTreeSet::from([129usize])),
                    (12usize, std::collections::BTreeSet::from([129usize])),
                    (13usize, std::collections::BTreeSet::from([129usize])),
                    (14usize, std::collections::BTreeSet::from([129usize])),
                    (15usize, std::collections::BTreeSet::from([129usize])),
                    (16usize, std::collections::BTreeSet::from([129usize])),
                    (17usize, std::collections::BTreeSet::from([129usize])),
                    (18usize, std::collections::BTreeSet::from([129usize])),
                    (19usize, std::collections::BTreeSet::from([129usize])),
                    (20usize, std::collections::BTreeSet::from([129usize])),
                    (21usize, std::collections::BTreeSet::from([129usize])),
                    (22usize, std::collections::BTreeSet::from([129usize])),
                    (23usize, std::collections::BTreeSet::from([129usize])),
                    (24usize, std::collections::BTreeSet::from([129usize])),
                    (25usize, std::collections::BTreeSet::from([129usize])),
                    (26usize, std::collections::BTreeSet::from([129usize])),
                    (27usize, std::collections::BTreeSet::from([129usize])),
                    (28usize, std::collections::BTreeSet::from([129usize])),
                    (29usize, std::collections::BTreeSet::from([129usize])),
                    (30usize, std::collections::BTreeSet::from([129usize])),
                    (31usize, std::collections::BTreeSet::from([129usize])),
                    (32usize, std::collections::BTreeSet::from([129usize])),
                    (33usize, std::collections::BTreeSet::from([129usize])),
                    (34usize, std::collections::BTreeSet::from([129usize])),
                    (35usize, std::collections::BTreeSet::from([129usize])),
                    (36usize, std::collections::BTreeSet::from([129usize])),
                    (37usize, std::collections::BTreeSet::from([129usize])),
                    (38usize, std::collections::BTreeSet::from([129usize])),
                    (39usize, std::collections::BTreeSet::from([129usize])),
                    (40usize, std::collections::BTreeSet::from([129usize])),
                    (42usize, std::collections::BTreeSet::from([129usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 129usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([130usize])),
                    (1usize, std::collections::BTreeSet::from([130usize])),
                    (2usize, std::collections::BTreeSet::from([130usize])),
                    (3usize, std::collections::BTreeSet::from([130usize])),
                    (4usize, std::collections::BTreeSet::from([130usize])),
                    (5usize, std::collections::BTreeSet::from([130usize])),
                    (6usize, std::collections::BTreeSet::from([130usize])),
                    (7usize, std::collections::BTreeSet::from([130usize])),
                    (8usize, std::collections::BTreeSet::from([130usize])),
                    (9usize, std::collections::BTreeSet::from([130usize])),
                    (10usize, std::collections::BTreeSet::from([130usize])),
                    (11usize, std::collections::BTreeSet::from([130usize])),
                    (12usize, std::collections::BTreeSet::from([130usize])),
                    (13usize, std::collections::BTreeSet::from([130usize])),
                    (14usize, std::collections::BTreeSet::from([130usize])),
                    (15usize, std::collections::BTreeSet::from([130usize])),
                    (16usize, std::collections::BTreeSet::from([130usize])),
                    (17usize, std::collections::BTreeSet::from([130usize])),
                    (18usize, std::collections::BTreeSet::from([130usize])),
                    (19usize, std::collections::BTreeSet::from([130usize])),
                    (20usize, std::collections::BTreeSet::from([130usize])),
                    (21usize, std::collections::BTreeSet::from([130usize])),
                    (22usize, std::collections::BTreeSet::from([130usize])),
                    (23usize, std::collections::BTreeSet::from([130usize])),
                    (24usize, std::collections::BTreeSet::from([130usize])),
                    (25usize, std::collections::BTreeSet::from([130usize])),
                    (26usize, std::collections::BTreeSet::from([130usize])),
                    (27usize, std::collections::BTreeSet::from([130usize])),
                    (28usize, std::collections::BTreeSet::from([130usize])),
                    (29usize, std::collections::BTreeSet::from([130usize])),
                    (30usize, std::collections::BTreeSet::from([130usize])),
                    (31usize, std::collections::BTreeSet::from([130usize])),
                    (32usize, std::collections::BTreeSet::from([130usize])),
                    (33usize, std::collections::BTreeSet::from([130usize])),
                    (34usize, std::collections::BTreeSet::from([130usize])),
                    (35usize, std::collections::BTreeSet::from([130usize])),
                    (36usize, std::collections::BTreeSet::from([130usize])),
                    (37usize, std::collections::BTreeSet::from([130usize])),
                    (38usize, std::collections::BTreeSet::from([130usize])),
                    (39usize, std::collections::BTreeSet::from([130usize])),
                    (40usize, std::collections::BTreeSet::from([130usize])),
                    (42usize, std::collections::BTreeSet::from([130usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 130usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([131usize])),
                    (1usize, std::collections::BTreeSet::from([131usize])),
                    (2usize, std::collections::BTreeSet::from([131usize])),
                    (3usize, std::collections::BTreeSet::from([131usize])),
                    (4usize, std::collections::BTreeSet::from([131usize])),
                    (5usize, std::collections::BTreeSet::from([131usize])),
                    (6usize, std::collections::BTreeSet::from([131usize])),
                    (7usize, std::collections::BTreeSet::from([131usize])),
                    (8usize, std::collections::BTreeSet::from([131usize])),
                    (9usize, std::collections::BTreeSet::from([131usize])),
                    (10usize, std::collections::BTreeSet::from([131usize])),
                    (11usize, std::collections::BTreeSet::from([131usize])),
                    (12usize, std::collections::BTreeSet::from([131usize])),
                    (13usize, std::collections::BTreeSet::from([131usize])),
                    (14usize, std::collections::BTreeSet::from([131usize])),
                    (15usize, std::collections::BTreeSet::from([131usize])),
                    (16usize, std::collections::BTreeSet::from([131usize])),
                    (17usize, std::collections::BTreeSet::from([131usize])),
                    (18usize, std::collections::BTreeSet::from([131usize])),
                    (19usize, std::collections::BTreeSet::from([131usize])),
                    (20usize, std::collections::BTreeSet::from([131usize])),
                    (21usize, std::collections::BTreeSet::from([131usize])),
                    (22usize, std::collections::BTreeSet::from([131usize])),
                    (23usize, std::collections::BTreeSet::from([131usize])),
                    (24usize, std::collections::BTreeSet::from([131usize])),
                    (25usize, std::collections::BTreeSet::from([131usize])),
                    (26usize, std::collections::BTreeSet::from([131usize])),
                    (27usize, std::collections::BTreeSet::from([131usize])),
                    (28usize, std::collections::BTreeSet::from([131usize])),
                    (29usize, std::collections::BTreeSet::from([131usize])),
                    (30usize, std::collections::BTreeSet::from([131usize])),
                    (31usize, std::collections::BTreeSet::from([131usize])),
                    (32usize, std::collections::BTreeSet::from([131usize])),
                    (33usize, std::collections::BTreeSet::from([131usize])),
                    (34usize, std::collections::BTreeSet::from([131usize])),
                    (35usize, std::collections::BTreeSet::from([131usize])),
                    (36usize, std::collections::BTreeSet::from([131usize])),
                    (37usize, std::collections::BTreeSet::from([131usize])),
                    (38usize, std::collections::BTreeSet::from([131usize])),
                    (39usize, std::collections::BTreeSet::from([131usize])),
                    (40usize, std::collections::BTreeSet::from([131usize])),
                    (42usize, std::collections::BTreeSet::from([131usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 131usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([132usize])),
                    (1usize, std::collections::BTreeSet::from([132usize])),
                    (2usize, std::collections::BTreeSet::from([132usize])),
                    (3usize, std::collections::BTreeSet::from([132usize])),
                    (4usize, std::collections::BTreeSet::from([132usize])),
                    (5usize, std::collections::BTreeSet::from([132usize])),
                    (6usize, std::collections::BTreeSet::from([132usize])),
                    (7usize, std::collections::BTreeSet::from([132usize])),
                    (8usize, std::collections::BTreeSet::from([132usize])),
                    (9usize, std::collections::BTreeSet::from([132usize])),
                    (10usize, std::collections::BTreeSet::from([132usize])),
                    (11usize, std::collections::BTreeSet::from([132usize])),
                    (12usize, std::collections::BTreeSet::from([132usize])),
                    (13usize, std::collections::BTreeSet::from([132usize])),
                    (14usize, std::collections::BTreeSet::from([132usize])),
                    (15usize, std::collections::BTreeSet::from([132usize])),
                    (16usize, std::collections::BTreeSet::from([132usize])),
                    (17usize, std::collections::BTreeSet::from([132usize])),
                    (18usize, std::collections::BTreeSet::from([132usize])),
                    (19usize, std::collections::BTreeSet::from([132usize])),
                    (20usize, std::collections::BTreeSet::from([132usize])),
                    (21usize, std::collections::BTreeSet::from([132usize])),
                    (22usize, std::collections::BTreeSet::from([132usize])),
                    (23usize, std::collections::BTreeSet::from([132usize])),
                    (24usize, std::collections::BTreeSet::from([132usize])),
                    (25usize, std::collections::BTreeSet::from([132usize])),
                    (26usize, std::collections::BTreeSet::from([132usize])),
                    (27usize, std::collections::BTreeSet::from([132usize])),
                    (28usize, std::collections::BTreeSet::from([132usize])),
                    (29usize, std::collections::BTreeSet::from([132usize])),
                    (30usize, std::collections::BTreeSet::from([132usize])),
                    (31usize, std::collections::BTreeSet::from([132usize])),
                    (32usize, std::collections::BTreeSet::from([132usize])),
                    (33usize, std::collections::BTreeSet::from([132usize])),
                    (34usize, std::collections::BTreeSet::from([132usize])),
                    (35usize, std::collections::BTreeSet::from([132usize])),
                    (36usize, std::collections::BTreeSet::from([132usize])),
                    (37usize, std::collections::BTreeSet::from([132usize])),
                    (38usize, std::collections::BTreeSet::from([132usize])),
                    (39usize, std::collections::BTreeSet::from([132usize])),
                    (40usize, std::collections::BTreeSet::from([132usize])),
                    (42usize, std::collections::BTreeSet::from([132usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 132usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([133usize])),
                    (1usize, std::collections::BTreeSet::from([133usize])),
                    (2usize, std::collections::BTreeSet::from([133usize])),
                    (3usize, std::collections::BTreeSet::from([133usize])),
                    (4usize, std::collections::BTreeSet::from([133usize])),
                    (5usize, std::collections::BTreeSet::from([133usize])),
                    (6usize, std::collections::BTreeSet::from([133usize])),
                    (7usize, std::collections::BTreeSet::from([133usize])),
                    (8usize, std::collections::BTreeSet::from([133usize])),
                    (9usize, std::collections::BTreeSet::from([133usize])),
                    (10usize, std::collections::BTreeSet::from([133usize])),
                    (11usize, std::collections::BTreeSet::from([133usize])),
                    (12usize, std::collections::BTreeSet::from([133usize])),
                    (13usize, std::collections::BTreeSet::from([133usize])),
                    (14usize, std::collections::BTreeSet::from([133usize])),
                    (15usize, std::collections::BTreeSet::from([133usize])),
                    (16usize, std::collections::BTreeSet::from([133usize])),
                    (17usize, std::collections::BTreeSet::from([133usize])),
                    (18usize, std::collections::BTreeSet::from([133usize])),
                    (19usize, std::collections::BTreeSet::from([133usize])),
                    (20usize, std::collections::BTreeSet::from([133usize])),
                    (21usize, std::collections::BTreeSet::from([133usize])),
                    (22usize, std::collections::BTreeSet::from([133usize])),
                    (23usize, std::collections::BTreeSet::from([133usize])),
                    (24usize, std::collections::BTreeSet::from([133usize])),
                    (25usize, std::collections::BTreeSet::from([133usize])),
                    (26usize, std::collections::BTreeSet::from([133usize])),
                    (27usize, std::collections::BTreeSet::from([133usize])),
                    (28usize, std::collections::BTreeSet::from([133usize])),
                    (29usize, std::collections::BTreeSet::from([133usize])),
                    (30usize, std::collections::BTreeSet::from([133usize])),
                    (31usize, std::collections::BTreeSet::from([133usize])),
                    (32usize, std::collections::BTreeSet::from([133usize])),
                    (33usize, std::collections::BTreeSet::from([133usize])),
                    (34usize, std::collections::BTreeSet::from([133usize])),
                    (35usize, std::collections::BTreeSet::from([133usize])),
                    (36usize, std::collections::BTreeSet::from([133usize])),
                    (37usize, std::collections::BTreeSet::from([133usize])),
                    (38usize, std::collections::BTreeSet::from([133usize])),
                    (39usize, std::collections::BTreeSet::from([133usize])),
                    (40usize, std::collections::BTreeSet::from([133usize])),
                    (42usize, std::collections::BTreeSet::from([133usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 133usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([134usize])),
                    (1usize, std::collections::BTreeSet::from([134usize])),
                    (2usize, std::collections::BTreeSet::from([134usize])),
                    (3usize, std::collections::BTreeSet::from([134usize])),
                    (4usize, std::collections::BTreeSet::from([134usize])),
                    (5usize, std::collections::BTreeSet::from([134usize])),
                    (6usize, std::collections::BTreeSet::from([134usize])),
                    (7usize, std::collections::BTreeSet::from([134usize])),
                    (8usize, std::collections::BTreeSet::from([134usize])),
                    (9usize, std::collections::BTreeSet::from([134usize])),
                    (10usize, std::collections::BTreeSet::from([134usize])),
                    (11usize, std::collections::BTreeSet::from([134usize])),
                    (12usize, std::collections::BTreeSet::from([134usize])),
                    (13usize, std::collections::BTreeSet::from([134usize])),
                    (14usize, std::collections::BTreeSet::from([134usize])),
                    (15usize, std::collections::BTreeSet::from([134usize])),
                    (16usize, std::collections::BTreeSet::from([134usize])),
                    (17usize, std::collections::BTreeSet::from([134usize])),
                    (18usize, std::collections::BTreeSet::from([134usize])),
                    (19usize, std::collections::BTreeSet::from([134usize])),
                    (20usize, std::collections::BTreeSet::from([134usize])),
                    (21usize, std::collections::BTreeSet::from([134usize])),
                    (22usize, std::collections::BTreeSet::from([134usize])),
                    (23usize, std::collections::BTreeSet::from([134usize])),
                    (24usize, std::collections::BTreeSet::from([134usize])),
                    (25usize, std::collections::BTreeSet::from([134usize])),
                    (26usize, std::collections::BTreeSet::from([134usize])),
                    (27usize, std::collections::BTreeSet::from([134usize])),
                    (28usize, std::collections::BTreeSet::from([134usize])),
                    (29usize, std::collections::BTreeSet::from([134usize])),
                    (30usize, std::collections::BTreeSet::from([134usize])),
                    (31usize, std::collections::BTreeSet::from([134usize])),
                    (32usize, std::collections::BTreeSet::from([134usize])),
                    (33usize, std::collections::BTreeSet::from([134usize])),
                    (34usize, std::collections::BTreeSet::from([134usize])),
                    (35usize, std::collections::BTreeSet::from([134usize])),
                    (36usize, std::collections::BTreeSet::from([134usize])),
                    (37usize, std::collections::BTreeSet::from([134usize])),
                    (38usize, std::collections::BTreeSet::from([134usize])),
                    (39usize, std::collections::BTreeSet::from([134usize])),
                    (40usize, std::collections::BTreeSet::from([134usize])),
                    (42usize, std::collections::BTreeSet::from([134usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 134usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([135usize])),
                    (1usize, std::collections::BTreeSet::from([135usize])),
                    (2usize, std::collections::BTreeSet::from([135usize])),
                    (3usize, std::collections::BTreeSet::from([135usize])),
                    (4usize, std::collections::BTreeSet::from([135usize])),
                    (5usize, std::collections::BTreeSet::from([135usize])),
                    (6usize, std::collections::BTreeSet::from([135usize])),
                    (7usize, std::collections::BTreeSet::from([135usize])),
                    (8usize, std::collections::BTreeSet::from([135usize])),
                    (9usize, std::collections::BTreeSet::from([135usize])),
                    (10usize, std::collections::BTreeSet::from([135usize])),
                    (11usize, std::collections::BTreeSet::from([135usize])),
                    (12usize, std::collections::BTreeSet::from([135usize])),
                    (13usize, std::collections::BTreeSet::from([135usize])),
                    (14usize, std::collections::BTreeSet::from([135usize])),
                    (15usize, std::collections::BTreeSet::from([135usize])),
                    (16usize, std::collections::BTreeSet::from([135usize])),
                    (17usize, std::collections::BTreeSet::from([135usize])),
                    (18usize, std::collections::BTreeSet::from([135usize])),
                    (19usize, std::collections::BTreeSet::from([135usize])),
                    (20usize, std::collections::BTreeSet::from([135usize])),
                    (21usize, std::collections::BTreeSet::from([135usize])),
                    (22usize, std::collections::BTreeSet::from([135usize])),
                    (23usize, std::collections::BTreeSet::from([135usize])),
                    (24usize, std::collections::BTreeSet::from([135usize])),
                    (25usize, std::collections::BTreeSet::from([135usize])),
                    (26usize, std::collections::BTreeSet::from([135usize])),
                    (27usize, std::collections::BTreeSet::from([135usize])),
                    (28usize, std::collections::BTreeSet::from([135usize])),
                    (29usize, std::collections::BTreeSet::from([135usize])),
                    (30usize, std::collections::BTreeSet::from([135usize])),
                    (31usize, std::collections::BTreeSet::from([135usize])),
                    (32usize, std::collections::BTreeSet::from([135usize])),
                    (33usize, std::collections::BTreeSet::from([135usize])),
                    (34usize, std::collections::BTreeSet::from([135usize])),
                    (35usize, std::collections::BTreeSet::from([135usize])),
                    (36usize, std::collections::BTreeSet::from([135usize])),
                    (37usize, std::collections::BTreeSet::from([135usize])),
                    (38usize, std::collections::BTreeSet::from([135usize])),
                    (39usize, std::collections::BTreeSet::from([135usize])),
                    (40usize, std::collections::BTreeSet::from([135usize])),
                    (42usize, std::collections::BTreeSet::from([135usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 135usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([136usize])),
                    (1usize, std::collections::BTreeSet::from([136usize])),
                    (2usize, std::collections::BTreeSet::from([136usize])),
                    (3usize, std::collections::BTreeSet::from([136usize])),
                    (4usize, std::collections::BTreeSet::from([136usize])),
                    (5usize, std::collections::BTreeSet::from([136usize])),
                    (6usize, std::collections::BTreeSet::from([136usize])),
                    (7usize, std::collections::BTreeSet::from([136usize])),
                    (8usize, std::collections::BTreeSet::from([136usize])),
                    (9usize, std::collections::BTreeSet::from([136usize])),
                    (10usize, std::collections::BTreeSet::from([136usize])),
                    (11usize, std::collections::BTreeSet::from([136usize])),
                    (12usize, std::collections::BTreeSet::from([136usize])),
                    (13usize, std::collections::BTreeSet::from([136usize])),
                    (14usize, std::collections::BTreeSet::from([136usize])),
                    (15usize, std::collections::BTreeSet::from([136usize])),
                    (16usize, std::collections::BTreeSet::from([136usize])),
                    (17usize, std::collections::BTreeSet::from([136usize])),
                    (18usize, std::collections::BTreeSet::from([136usize])),
                    (19usize, std::collections::BTreeSet::from([136usize])),
                    (20usize, std::collections::BTreeSet::from([136usize])),
                    (21usize, std::collections::BTreeSet::from([136usize])),
                    (22usize, std::collections::BTreeSet::from([136usize])),
                    (23usize, std::collections::BTreeSet::from([136usize])),
                    (24usize, std::collections::BTreeSet::from([136usize])),
                    (25usize, std::collections::BTreeSet::from([136usize])),
                    (26usize, std::collections::BTreeSet::from([136usize])),
                    (27usize, std::collections::BTreeSet::from([136usize])),
                    (28usize, std::collections::BTreeSet::from([136usize])),
                    (29usize, std::collections::BTreeSet::from([136usize])),
                    (30usize, std::collections::BTreeSet::from([136usize])),
                    (31usize, std::collections::BTreeSet::from([136usize])),
                    (32usize, std::collections::BTreeSet::from([136usize])),
                    (33usize, std::collections::BTreeSet::from([136usize])),
                    (34usize, std::collections::BTreeSet::from([136usize])),
                    (35usize, std::collections::BTreeSet::from([136usize])),
                    (36usize, std::collections::BTreeSet::from([136usize])),
                    (37usize, std::collections::BTreeSet::from([136usize])),
                    (38usize, std::collections::BTreeSet::from([136usize])),
                    (39usize, std::collections::BTreeSet::from([136usize])),
                    (40usize, std::collections::BTreeSet::from([136usize])),
                    (42usize, std::collections::BTreeSet::from([136usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 136usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([137usize])),
                    (1usize, std::collections::BTreeSet::from([137usize])),
                    (2usize, std::collections::BTreeSet::from([137usize])),
                    (3usize, std::collections::BTreeSet::from([137usize])),
                    (4usize, std::collections::BTreeSet::from([137usize])),
                    (5usize, std::collections::BTreeSet::from([137usize])),
                    (6usize, std::collections::BTreeSet::from([137usize])),
                    (7usize, std::collections::BTreeSet::from([137usize])),
                    (8usize, std::collections::BTreeSet::from([137usize])),
                    (9usize, std::collections::BTreeSet::from([137usize])),
                    (10usize, std::collections::BTreeSet::from([137usize])),
                    (11usize, std::collections::BTreeSet::from([137usize])),
                    (12usize, std::collections::BTreeSet::from([137usize])),
                    (13usize, std::collections::BTreeSet::from([137usize])),
                    (14usize, std::collections::BTreeSet::from([137usize])),
                    (15usize, std::collections::BTreeSet::from([137usize])),
                    (16usize, std::collections::BTreeSet::from([137usize])),
                    (17usize, std::collections::BTreeSet::from([137usize])),
                    (18usize, std::collections::BTreeSet::from([137usize])),
                    (19usize, std::collections::BTreeSet::from([137usize])),
                    (20usize, std::collections::BTreeSet::from([137usize])),
                    (21usize, std::collections::BTreeSet::from([137usize])),
                    (22usize, std::collections::BTreeSet::from([137usize])),
                    (23usize, std::collections::BTreeSet::from([137usize])),
                    (24usize, std::collections::BTreeSet::from([137usize])),
                    (25usize, std::collections::BTreeSet::from([137usize])),
                    (26usize, std::collections::BTreeSet::from([137usize])),
                    (27usize, std::collections::BTreeSet::from([137usize])),
                    (28usize, std::collections::BTreeSet::from([137usize])),
                    (29usize, std::collections::BTreeSet::from([137usize])),
                    (30usize, std::collections::BTreeSet::from([137usize])),
                    (31usize, std::collections::BTreeSet::from([137usize])),
                    (32usize, std::collections::BTreeSet::from([137usize])),
                    (33usize, std::collections::BTreeSet::from([137usize])),
                    (34usize, std::collections::BTreeSet::from([137usize])),
                    (35usize, std::collections::BTreeSet::from([137usize])),
                    (36usize, std::collections::BTreeSet::from([137usize])),
                    (37usize, std::collections::BTreeSet::from([137usize])),
                    (38usize, std::collections::BTreeSet::from([137usize])),
                    (39usize, std::collections::BTreeSet::from([137usize])),
                    (40usize, std::collections::BTreeSet::from([137usize])),
                    (42usize, std::collections::BTreeSet::from([137usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 137usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([138usize])),
                    (1usize, std::collections::BTreeSet::from([138usize])),
                    (2usize, std::collections::BTreeSet::from([138usize])),
                    (3usize, std::collections::BTreeSet::from([138usize])),
                    (4usize, std::collections::BTreeSet::from([138usize])),
                    (5usize, std::collections::BTreeSet::from([138usize])),
                    (6usize, std::collections::BTreeSet::from([138usize])),
                    (7usize, std::collections::BTreeSet::from([138usize])),
                    (8usize, std::collections::BTreeSet::from([138usize])),
                    (9usize, std::collections::BTreeSet::from([138usize])),
                    (10usize, std::collections::BTreeSet::from([138usize])),
                    (11usize, std::collections::BTreeSet::from([138usize])),
                    (12usize, std::collections::BTreeSet::from([138usize])),
                    (13usize, std::collections::BTreeSet::from([138usize])),
                    (14usize, std::collections::BTreeSet::from([138usize])),
                    (15usize, std::collections::BTreeSet::from([138usize])),
                    (16usize, std::collections::BTreeSet::from([138usize])),
                    (17usize, std::collections::BTreeSet::from([138usize])),
                    (18usize, std::collections::BTreeSet::from([138usize])),
                    (19usize, std::collections::BTreeSet::from([138usize])),
                    (20usize, std::collections::BTreeSet::from([138usize])),
                    (21usize, std::collections::BTreeSet::from([138usize])),
                    (22usize, std::collections::BTreeSet::from([138usize])),
                    (23usize, std::collections::BTreeSet::from([138usize])),
                    (24usize, std::collections::BTreeSet::from([138usize])),
                    (25usize, std::collections::BTreeSet::from([138usize])),
                    (26usize, std::collections::BTreeSet::from([138usize])),
                    (27usize, std::collections::BTreeSet::from([138usize])),
                    (28usize, std::collections::BTreeSet::from([138usize])),
                    (29usize, std::collections::BTreeSet::from([138usize])),
                    (30usize, std::collections::BTreeSet::from([138usize])),
                    (31usize, std::collections::BTreeSet::from([138usize])),
                    (32usize, std::collections::BTreeSet::from([138usize])),
                    (33usize, std::collections::BTreeSet::from([138usize])),
                    (34usize, std::collections::BTreeSet::from([138usize])),
                    (35usize, std::collections::BTreeSet::from([138usize])),
                    (36usize, std::collections::BTreeSet::from([138usize])),
                    (37usize, std::collections::BTreeSet::from([138usize])),
                    (38usize, std::collections::BTreeSet::from([138usize])),
                    (39usize, std::collections::BTreeSet::from([138usize])),
                    (40usize, std::collections::BTreeSet::from([138usize])),
                    (42usize, std::collections::BTreeSet::from([138usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 138usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 125usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 36usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([36usize])),
                    (4usize, std::collections::BTreeSet::from([36usize])),
                    (41usize, std::collections::BTreeSet::from([36usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 36usize,
                        shifted: 5usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([88usize])),
                    (1usize, std::collections::BTreeSet::from([88usize])),
                    (2usize, std::collections::BTreeSet::from([88usize])),
                    (3usize, std::collections::BTreeSet::from([88usize])),
                    (4usize, std::collections::BTreeSet::from([88usize])),
                    (5usize, std::collections::BTreeSet::from([88usize])),
                    (6usize, std::collections::BTreeSet::from([88usize])),
                    (7usize, std::collections::BTreeSet::from([88usize])),
                    (8usize, std::collections::BTreeSet::from([88usize])),
                    (9usize, std::collections::BTreeSet::from([88usize])),
                    (10usize, std::collections::BTreeSet::from([88usize])),
                    (11usize, std::collections::BTreeSet::from([88usize])),
                    (12usize, std::collections::BTreeSet::from([88usize])),
                    (13usize, std::collections::BTreeSet::from([88usize])),
                    (14usize, std::collections::BTreeSet::from([88usize])),
                    (15usize, std::collections::BTreeSet::from([88usize])),
                    (16usize, std::collections::BTreeSet::from([88usize])),
                    (17usize, std::collections::BTreeSet::from([88usize])),
                    (18usize, std::collections::BTreeSet::from([88usize])),
                    (19usize, std::collections::BTreeSet::from([88usize])),
                    (20usize, std::collections::BTreeSet::from([88usize])),
                    (21usize, std::collections::BTreeSet::from([88usize])),
                    (22usize, std::collections::BTreeSet::from([88usize])),
                    (23usize, std::collections::BTreeSet::from([88usize])),
                    (24usize, std::collections::BTreeSet::from([88usize])),
                    (25usize, std::collections::BTreeSet::from([88usize])),
                    (26usize, std::collections::BTreeSet::from([88usize])),
                    (27usize, std::collections::BTreeSet::from([88usize])),
                    (28usize, std::collections::BTreeSet::from([88usize])),
                    (29usize, std::collections::BTreeSet::from([88usize])),
                    (30usize, std::collections::BTreeSet::from([88usize])),
                    (31usize, std::collections::BTreeSet::from([88usize])),
                    (32usize, std::collections::BTreeSet::from([88usize])),
                    (33usize, std::collections::BTreeSet::from([88usize])),
                    (34usize, std::collections::BTreeSet::from([88usize])),
                    (35usize, std::collections::BTreeSet::from([88usize])),
                    (36usize, std::collections::BTreeSet::from([88usize])),
                    (37usize, std::collections::BTreeSet::from([88usize])),
                    (38usize, std::collections::BTreeSet::from([88usize])),
                    (39usize, std::collections::BTreeSet::from([88usize])),
                    (40usize, std::collections::BTreeSet::from([88usize])),
                    (42usize, std::collections::BTreeSet::from([88usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 88usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 82usize),
                    (1usize, 83usize),
                    (3usize, 85usize),
                    (4usize, 86usize),
                    (5usize, 87usize),
                    (6usize, 88usize),
                    (7usize, 89usize),
                    (8usize, 90usize),
                    (9usize, 91usize),
                    (10usize, 92usize),
                    (11usize, 93usize),
                    (12usize, 94usize),
                    (13usize, 95usize),
                    (14usize, 96usize),
                    (15usize, 97usize),
                    (16usize, 98usize),
                    (17usize, 99usize),
                    (18usize, 100usize),
                    (19usize, 101usize),
                    (20usize, 102usize),
                    (21usize, 103usize),
                    (22usize, 104usize),
                    (23usize, 105usize),
                    (24usize, 106usize),
                    (25usize, 107usize),
                    (26usize, 108usize),
                    (27usize, 109usize),
                    (28usize, 110usize),
                    (29usize, 111usize),
                    (30usize, 112usize),
                    (31usize, 113usize),
                    (32usize, 114usize),
                    (33usize, 115usize),
                    (34usize, 116usize),
                    (35usize, 117usize),
                    (36usize, 118usize),
                    (37usize, 119usize),
                    (38usize, 120usize),
                    (39usize, 121usize),
                    (40usize, 122usize),
                    (42usize, 123usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::_TermSet24,
                    128usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([(
                    2usize,
                    std::collections::BTreeSet::from([35usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 35usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 89usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 98usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 99usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 100usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 101usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 102usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 103usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 104usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 105usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 106usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 107usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 108usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 109usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 110usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 111usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 115usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 116usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 117usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 118usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 119usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 121usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 122usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 123usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 124usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 125usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 126usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 127usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 128usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 129usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 130usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 131usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 132usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 133usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 134usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 135usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 136usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 137usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 138usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([89usize])),
                    (1usize, std::collections::BTreeSet::from([89usize])),
                    (2usize, std::collections::BTreeSet::from([89usize])),
                    (3usize, std::collections::BTreeSet::from([89usize])),
                    (4usize, std::collections::BTreeSet::from([89usize])),
                    (5usize, std::collections::BTreeSet::from([89usize])),
                    (6usize, std::collections::BTreeSet::from([89usize])),
                    (7usize, std::collections::BTreeSet::from([89usize])),
                    (8usize, std::collections::BTreeSet::from([89usize])),
                    (9usize, std::collections::BTreeSet::from([89usize])),
                    (10usize, std::collections::BTreeSet::from([89usize])),
                    (11usize, std::collections::BTreeSet::from([89usize])),
                    (12usize, std::collections::BTreeSet::from([89usize])),
                    (13usize, std::collections::BTreeSet::from([89usize])),
                    (14usize, std::collections::BTreeSet::from([89usize])),
                    (15usize, std::collections::BTreeSet::from([89usize])),
                    (16usize, std::collections::BTreeSet::from([89usize])),
                    (17usize, std::collections::BTreeSet::from([89usize])),
                    (18usize, std::collections::BTreeSet::from([89usize])),
                    (19usize, std::collections::BTreeSet::from([89usize])),
                    (20usize, std::collections::BTreeSet::from([89usize])),
                    (21usize, std::collections::BTreeSet::from([89usize])),
                    (22usize, std::collections::BTreeSet::from([89usize])),
                    (23usize, std::collections::BTreeSet::from([89usize])),
                    (24usize, std::collections::BTreeSet::from([89usize])),
                    (25usize, std::collections::BTreeSet::from([89usize])),
                    (26usize, std::collections::BTreeSet::from([89usize])),
                    (27usize, std::collections::BTreeSet::from([89usize])),
                    (28usize, std::collections::BTreeSet::from([89usize])),
                    (29usize, std::collections::BTreeSet::from([89usize])),
                    (30usize, std::collections::BTreeSet::from([89usize])),
                    (31usize, std::collections::BTreeSet::from([89usize])),
                    (32usize, std::collections::BTreeSet::from([89usize])),
                    (33usize, std::collections::BTreeSet::from([89usize])),
                    (34usize, std::collections::BTreeSet::from([89usize])),
                    (35usize, std::collections::BTreeSet::from([89usize])),
                    (36usize, std::collections::BTreeSet::from([89usize])),
                    (37usize, std::collections::BTreeSet::from([89usize])),
                    (38usize, std::collections::BTreeSet::from([89usize])),
                    (39usize, std::collections::BTreeSet::from([89usize])),
                    (40usize, std::collections::BTreeSet::from([89usize])),
                    (42usize, std::collections::BTreeSet::from([89usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 89usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 130usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 38usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([38usize])),
                    (4usize, std::collections::BTreeSet::from([38usize])),
                    (41usize, std::collections::BTreeSet::from([38usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 38usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 132usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::error,
                    134usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 39usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 40usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 133usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 39usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([39usize])),
                    (4usize, std::collections::BTreeSet::from([39usize])),
                    (41usize, std::collections::BTreeSet::from([39usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 39usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 135usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 40usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([40usize])),
                    (4usize, std::collections::BTreeSet::from([40usize])),
                    (41usize, std::collections::BTreeSet::from([40usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 40usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 82usize),
                    (1usize, 83usize),
                    (2usize, 137usize),
                    (3usize, 85usize),
                    (4usize, 86usize),
                    (5usize, 87usize),
                    (6usize, 88usize),
                    (7usize, 89usize),
                    (8usize, 90usize),
                    (9usize, 91usize),
                    (10usize, 92usize),
                    (11usize, 93usize),
                    (12usize, 94usize),
                    (13usize, 95usize),
                    (14usize, 96usize),
                    (15usize, 97usize),
                    (16usize, 98usize),
                    (17usize, 99usize),
                    (18usize, 100usize),
                    (19usize, 101usize),
                    (20usize, 102usize),
                    (21usize, 103usize),
                    (22usize, 104usize),
                    (23usize, 105usize),
                    (24usize, 106usize),
                    (25usize, 107usize),
                    (26usize, 108usize),
                    (27usize, 109usize),
                    (28usize, 110usize),
                    (29usize, 111usize),
                    (30usize, 112usize),
                    (31usize, 113usize),
                    (32usize, 114usize),
                    (33usize, 115usize),
                    (34usize, 116usize),
                    (35usize, 117usize),
                    (36usize, 118usize),
                    (37usize, 119usize),
                    (38usize, 120usize),
                    (39usize, 121usize),
                    (40usize, 122usize),
                    (42usize, 123usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::RustCode, 138usize),
                    (GrammarNonTerminals::_TermSet24, 126usize),
                    (GrammarNonTerminals::__TermSet24Plus25, 127usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 35usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 41usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 88usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 89usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 98usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 99usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 100usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 101usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 102usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 103usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 104usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 105usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 106usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 107usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 108usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 109usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 110usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 111usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 115usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 116usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 117usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 118usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 119usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 121usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 122usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 123usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 124usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 125usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 126usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 127usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 128usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 129usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 130usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 131usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 132usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 133usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 134usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 135usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 136usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 137usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 138usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([42usize])),
                    (4usize, std::collections::BTreeSet::from([42usize])),
                    (41usize, std::collections::BTreeSet::from([42usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 139usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 41usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([41usize])),
                    (4usize, std::collections::BTreeSet::from([41usize])),
                    (41usize, std::collections::BTreeSet::from([41usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 41usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 82usize),
                    (1usize, 83usize),
                    (2usize, 141usize),
                    (3usize, 85usize),
                    (4usize, 86usize),
                    (5usize, 87usize),
                    (6usize, 88usize),
                    (7usize, 89usize),
                    (8usize, 90usize),
                    (9usize, 91usize),
                    (10usize, 92usize),
                    (11usize, 93usize),
                    (12usize, 94usize),
                    (13usize, 95usize),
                    (14usize, 96usize),
                    (15usize, 97usize),
                    (16usize, 98usize),
                    (17usize, 99usize),
                    (18usize, 100usize),
                    (19usize, 101usize),
                    (20usize, 102usize),
                    (21usize, 103usize),
                    (22usize, 104usize),
                    (23usize, 105usize),
                    (24usize, 106usize),
                    (25usize, 107usize),
                    (26usize, 108usize),
                    (27usize, 109usize),
                    (28usize, 110usize),
                    (29usize, 111usize),
                    (30usize, 112usize),
                    (31usize, 113usize),
                    (32usize, 114usize),
                    (33usize, 115usize),
                    (34usize, 116usize),
                    (35usize, 117usize),
                    (36usize, 118usize),
                    (37usize, 119usize),
                    (38usize, 120usize),
                    (39usize, 121usize),
                    (40usize, 122usize),
                    (42usize, 123usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::RustCode, 142usize),
                    (GrammarNonTerminals::_TermSet24, 126usize),
                    (GrammarNonTerminals::__TermSet24Plus25, 127usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 35usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 88usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 89usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 98usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 99usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 100usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 101usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 102usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 103usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 104usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 105usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 106usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 107usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 108usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 109usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 110usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 111usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 115usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 116usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 117usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 118usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 119usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 121usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 122usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 123usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 124usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 125usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 126usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 127usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 128usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 129usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 130usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 131usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 132usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 133usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 134usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 135usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 136usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 137usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 138usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([44usize])),
                    (4usize, std::collections::BTreeSet::from([44usize])),
                    (41usize, std::collections::BTreeSet::from([44usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 143usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([43usize])),
                    (4usize, std::collections::BTreeSet::from([43usize])),
                    (41usize, std::collections::BTreeSet::from([43usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 82usize),
                    (1usize, 83usize),
                    (2usize, 145usize),
                    (3usize, 85usize),
                    (4usize, 86usize),
                    (5usize, 87usize),
                    (6usize, 88usize),
                    (7usize, 89usize),
                    (8usize, 90usize),
                    (9usize, 91usize),
                    (10usize, 92usize),
                    (11usize, 93usize),
                    (12usize, 94usize),
                    (13usize, 95usize),
                    (14usize, 96usize),
                    (15usize, 97usize),
                    (16usize, 98usize),
                    (17usize, 99usize),
                    (18usize, 100usize),
                    (19usize, 101usize),
                    (20usize, 102usize),
                    (21usize, 103usize),
                    (22usize, 104usize),
                    (23usize, 105usize),
                    (24usize, 106usize),
                    (25usize, 107usize),
                    (26usize, 108usize),
                    (27usize, 109usize),
                    (28usize, 110usize),
                    (29usize, 111usize),
                    (30usize, 112usize),
                    (31usize, 113usize),
                    (32usize, 114usize),
                    (33usize, 115usize),
                    (34usize, 116usize),
                    (35usize, 117usize),
                    (36usize, 118usize),
                    (37usize, 119usize),
                    (38usize, 120usize),
                    (39usize, 121usize),
                    (40usize, 122usize),
                    (42usize, 123usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::RustCode, 146usize),
                    (GrammarNonTerminals::_TermSet24, 126usize),
                    (GrammarNonTerminals::__TermSet24Plus25, 127usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 35usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 88usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 89usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 98usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 99usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 100usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 101usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 102usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 103usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 104usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 105usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 106usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 107usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 108usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 109usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 110usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 111usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 115usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 116usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 117usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 118usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 119usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 121usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 122usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 123usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 124usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 125usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 126usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 127usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 128usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 129usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 130usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 131usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 132usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 133usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 134usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 135usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 136usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 137usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 138usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([46usize])),
                    (4usize, std::collections::BTreeSet::from([46usize])),
                    (41usize, std::collections::BTreeSet::from([46usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 147usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([45usize])),
                    (4usize, std::collections::BTreeSet::from([45usize])),
                    (41usize, std::collections::BTreeSet::from([45usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 82usize),
                    (1usize, 83usize),
                    (2usize, 149usize),
                    (3usize, 85usize),
                    (4usize, 86usize),
                    (5usize, 87usize),
                    (6usize, 88usize),
                    (7usize, 89usize),
                    (8usize, 90usize),
                    (9usize, 91usize),
                    (10usize, 92usize),
                    (11usize, 93usize),
                    (12usize, 94usize),
                    (13usize, 95usize),
                    (14usize, 96usize),
                    (15usize, 97usize),
                    (16usize, 98usize),
                    (17usize, 99usize),
                    (18usize, 100usize),
                    (19usize, 101usize),
                    (20usize, 102usize),
                    (21usize, 103usize),
                    (22usize, 104usize),
                    (23usize, 105usize),
                    (24usize, 106usize),
                    (25usize, 107usize),
                    (26usize, 108usize),
                    (27usize, 109usize),
                    (28usize, 110usize),
                    (29usize, 111usize),
                    (30usize, 112usize),
                    (31usize, 113usize),
                    (32usize, 114usize),
                    (33usize, 115usize),
                    (34usize, 116usize),
                    (35usize, 117usize),
                    (36usize, 118usize),
                    (37usize, 119usize),
                    (38usize, 120usize),
                    (39usize, 121usize),
                    (40usize, 122usize),
                    (42usize, 123usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::RustCode, 150usize),
                    (GrammarNonTerminals::_TermSet24, 126usize),
                    (GrammarNonTerminals::__TermSet24Plus25, 127usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 35usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 88usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 89usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 98usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 99usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 100usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 101usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 102usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 103usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 104usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 105usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 106usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 107usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 108usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 109usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 110usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 111usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 115usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 116usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 117usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 118usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 119usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 121usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 122usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 123usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 124usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 125usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 126usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 127usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 128usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 129usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 130usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 131usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 132usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 133usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 134usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 135usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 136usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 137usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 138usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([54usize])),
                    (4usize, std::collections::BTreeSet::from([54usize])),
                    (41usize, std::collections::BTreeSet::from([54usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 151usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([53usize])),
                    (4usize, std::collections::BTreeSet::from([53usize])),
                    (41usize, std::collections::BTreeSet::from([53usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 82usize),
                    (1usize, 83usize),
                    (2usize, 153usize),
                    (3usize, 85usize),
                    (4usize, 86usize),
                    (5usize, 87usize),
                    (6usize, 88usize),
                    (7usize, 89usize),
                    (8usize, 90usize),
                    (9usize, 91usize),
                    (10usize, 92usize),
                    (11usize, 93usize),
                    (12usize, 94usize),
                    (13usize, 95usize),
                    (14usize, 96usize),
                    (15usize, 97usize),
                    (16usize, 98usize),
                    (17usize, 99usize),
                    (18usize, 100usize),
                    (19usize, 101usize),
                    (20usize, 102usize),
                    (21usize, 103usize),
                    (22usize, 104usize),
                    (23usize, 105usize),
                    (24usize, 106usize),
                    (25usize, 107usize),
                    (26usize, 108usize),
                    (27usize, 109usize),
                    (28usize, 110usize),
                    (29usize, 111usize),
                    (30usize, 112usize),
                    (31usize, 113usize),
                    (32usize, 114usize),
                    (33usize, 115usize),
                    (34usize, 116usize),
                    (35usize, 117usize),
                    (36usize, 118usize),
                    (37usize, 119usize),
                    (38usize, 120usize),
                    (39usize, 121usize),
                    (40usize, 122usize),
                    (42usize, 123usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::RustCode, 154usize),
                    (GrammarNonTerminals::_TermSet24, 126usize),
                    (GrammarNonTerminals::__TermSet24Plus25, 127usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 35usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 88usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 89usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 98usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 99usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 100usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 101usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 102usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 103usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 104usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 105usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 106usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 107usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 108usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 109usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 110usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 111usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 115usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 116usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 117usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 118usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 119usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 121usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 122usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 123usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 124usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 125usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 126usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 127usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 128usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 129usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 130usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 131usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 132usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 133usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 134usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 135usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 136usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 137usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 138usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([56usize])),
                    (4usize, std::collections::BTreeSet::from([56usize])),
                    (41usize, std::collections::BTreeSet::from([56usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 155usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([55usize])),
                    (4usize, std::collections::BTreeSet::from([55usize])),
                    (41usize, std::collections::BTreeSet::from([55usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 157usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::error,
                    158usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([59usize])),
                    (4usize, std::collections::BTreeSet::from([59usize])),
                    (41usize, std::collections::BTreeSet::from([59usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 159usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([60usize])),
                    (4usize, std::collections::BTreeSet::from([60usize])),
                    (41usize, std::collections::BTreeSet::from([60usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 161usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::error,
                    162usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([57usize])),
                    (4usize, std::collections::BTreeSet::from([57usize])),
                    (41usize, std::collections::BTreeSet::from([57usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 163usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([58usize])),
                    (4usize, std::collections::BTreeSet::from([58usize])),
                    (41usize, std::collections::BTreeSet::from([58usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 52usize),
                    (14usize, 53usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::IdentOrLiteral, 69usize),
                    (GrammarNonTerminals::error, 165usize),
                    (GrammarNonTerminals::_IdentOrLiteralPlus26, 167usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 33usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 34usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 90usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 166usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([52usize])),
                    (4usize, std::collections::BTreeSet::from([52usize])),
                    (41usize, std::collections::BTreeSet::from([52usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 52usize),
                    (2usize, 168usize),
                    (14usize, 53usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::IdentOrLiteral,
                    74usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 33usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 34usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([51usize])),
                    (4usize, std::collections::BTreeSet::from([51usize])),
                    (41usize, std::collections::BTreeSet::from([51usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 170usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::error,
                    171usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([61usize])),
                    (4usize, std::collections::BTreeSet::from([61usize])),
                    (41usize, std::collections::BTreeSet::from([61usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 172usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([62usize])),
                    (4usize, std::collections::BTreeSet::from([62usize])),
                    (41usize, std::collections::BTreeSet::from([62usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 174usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::error,
                    175usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([63usize])),
                    (4usize, std::collections::BTreeSet::from([63usize])),
                    (41usize, std::collections::BTreeSet::from([63usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 176usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([64usize])),
                    (4usize, std::collections::BTreeSet::from([64usize])),
                    (41usize, std::collections::BTreeSet::from([64usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 178usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::error, 179usize),
                    (GrammarNonTerminals::_identPlus27, 181usize),
                    (GrammarNonTerminals::_identStar28, 183usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([(
                    2usize,
                    std::collections::BTreeSet::from([94usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 92usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 93usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 94usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 139usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([92usize])),
                    (2usize, std::collections::BTreeSet::from([92usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 92usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 180usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([66usize])),
                    (4usize, std::collections::BTreeSet::from([66usize])),
                    (41usize, std::collections::BTreeSet::from([66usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 182usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    2usize,
                    std::collections::BTreeSet::from([139usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 93usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 139usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([93usize])),
                    (2usize, std::collections::BTreeSet::from([93usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 93usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 184usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([65usize])),
                    (4usize, std::collections::BTreeSet::from([65usize])),
                    (41usize, std::collections::BTreeSet::from([65usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 82usize),
                    (1usize, 83usize),
                    (2usize, 186usize),
                    (3usize, 85usize),
                    (4usize, 86usize),
                    (5usize, 87usize),
                    (6usize, 88usize),
                    (7usize, 89usize),
                    (8usize, 90usize),
                    (9usize, 91usize),
                    (10usize, 92usize),
                    (11usize, 93usize),
                    (12usize, 94usize),
                    (13usize, 95usize),
                    (14usize, 96usize),
                    (15usize, 97usize),
                    (16usize, 98usize),
                    (17usize, 99usize),
                    (18usize, 100usize),
                    (19usize, 101usize),
                    (20usize, 102usize),
                    (21usize, 103usize),
                    (22usize, 104usize),
                    (23usize, 105usize),
                    (24usize, 106usize),
                    (25usize, 107usize),
                    (26usize, 108usize),
                    (27usize, 109usize),
                    (28usize, 110usize),
                    (29usize, 111usize),
                    (30usize, 112usize),
                    (31usize, 113usize),
                    (32usize, 114usize),
                    (33usize, 115usize),
                    (34usize, 116usize),
                    (35usize, 117usize),
                    (36usize, 118usize),
                    (37usize, 119usize),
                    (38usize, 120usize),
                    (39usize, 121usize),
                    (40usize, 122usize),
                    (42usize, 123usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::RustCode, 187usize),
                    (GrammarNonTerminals::_TermSet24, 126usize),
                    (GrammarNonTerminals::__TermSet24Plus25, 127usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 35usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 88usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 89usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 98usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 99usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 100usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 101usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 102usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 103usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 104usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 105usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 106usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 107usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 108usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 109usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 110usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 111usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 115usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 116usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 117usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 118usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 119usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 121usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 122usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 123usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 124usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 125usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 126usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 127usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 128usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 129usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 130usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 131usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 132usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 133usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 134usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 135usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 136usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 137usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 138usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([68usize])),
                    (4usize, std::collections::BTreeSet::from([68usize])),
                    (41usize, std::collections::BTreeSet::from([68usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 188usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([67usize])),
                    (4usize, std::collections::BTreeSet::from([67usize])),
                    (41usize, std::collections::BTreeSet::from([67usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 190usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    GrammarNonTerminals::error,
                    191usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([69usize])),
                    (4usize, std::collections::BTreeSet::from([69usize])),
                    (41usize, std::collections::BTreeSet::from([69usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 192usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([70usize])),
                    (4usize, std::collections::BTreeSet::from([70usize])),
                    (41usize, std::collections::BTreeSet::from([70usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 82usize),
                    (1usize, 83usize),
                    (2usize, 194usize),
                    (3usize, 85usize),
                    (4usize, 86usize),
                    (5usize, 87usize),
                    (6usize, 88usize),
                    (7usize, 89usize),
                    (8usize, 90usize),
                    (9usize, 91usize),
                    (10usize, 92usize),
                    (11usize, 93usize),
                    (12usize, 94usize),
                    (13usize, 95usize),
                    (14usize, 96usize),
                    (15usize, 97usize),
                    (16usize, 98usize),
                    (17usize, 99usize),
                    (18usize, 100usize),
                    (19usize, 101usize),
                    (20usize, 102usize),
                    (21usize, 103usize),
                    (22usize, 104usize),
                    (23usize, 105usize),
                    (24usize, 106usize),
                    (25usize, 107usize),
                    (26usize, 108usize),
                    (27usize, 109usize),
                    (28usize, 110usize),
                    (29usize, 111usize),
                    (30usize, 112usize),
                    (31usize, 113usize),
                    (32usize, 114usize),
                    (33usize, 115usize),
                    (34usize, 116usize),
                    (35usize, 117usize),
                    (36usize, 118usize),
                    (37usize, 119usize),
                    (38usize, 120usize),
                    (39usize, 121usize),
                    (40usize, 122usize),
                    (42usize, 123usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::RustCode, 195usize),
                    (GrammarNonTerminals::_TermSet24, 126usize),
                    (GrammarNonTerminals::__TermSet24Plus25, 127usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 35usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 88usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 89usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 98usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 99usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 100usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 101usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 102usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 103usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 104usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 105usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 106usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 107usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 108usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 109usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 110usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 111usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 115usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 116usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 117usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 118usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 119usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 121usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 122usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 123usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 124usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 125usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 126usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 127usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 128usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 129usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 130usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 131usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 132usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 133usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 134usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 135usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 136usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 137usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 138usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([72usize])),
                    (4usize, std::collections::BTreeSet::from([72usize])),
                    (41usize, std::collections::BTreeSet::from([72usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 196usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([71usize])),
                    (4usize, std::collections::BTreeSet::from([71usize])),
                    (41usize, std::collections::BTreeSet::from([71usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 4usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(2usize, 198usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([73usize])),
                    (4usize, std::collections::BTreeSet::from([73usize])),
                    (41usize, std::collections::BTreeSet::from([73usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([74usize])),
                    (4usize, std::collections::BTreeSet::from([74usize])),
                    (41usize, std::collections::BTreeSet::from([74usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([140usize])),
                    (4usize, std::collections::BTreeSet::from([140usize])),
                    (41usize, std::collections::BTreeSet::from([140usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 140usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (4usize, 67usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (GrammarNonTerminals::Rule, 199usize),
                    (GrammarNonTerminals::Directive, 200usize),
                    (GrammarNonTerminals::GrammarLine, 201usize),
                    (GrammarNonTerminals::_GrammarLinePlus29, 202usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([(
                    41usize,
                    std::collections::BTreeSet::from([142usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 0usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 36usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 37usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 38usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 39usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 40usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 41usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 140usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 142usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 142usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 143usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 143usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    41usize,
                    std::collections::BTreeSet::from([143usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 143usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(41usize, 204usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 144usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 144usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr_core::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    41usize,
                    std::collections::BTreeSet::from([141usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr_core::rule::ShiftedRuleRef {
                        rule: 141usize,
                        shifted: 1usize,
                    },
                ]),
            },
        ];
        let states: Vec<GrammarState> = states.into_iter().map(|state| state.into()).collect();
        Self {
            rules,
            states,
            classes: vec![
                vec!["ident"],
                vec!["colon"],
                vec!["semicolon"],
                vec!["pipe"],
                vec!["percent"],
                vec!["equal"],
                vec!["plus"],
                vec!["star"],
                vec!["question"],
                vec!["caret"],
                vec!["minus"],
                vec!["exclamation"],
                vec!["slash"],
                vec!["dot"],
                vec!["literal"],
                vec!["parengroup"],
                vec!["bracegroup"],
                vec!["lparen"],
                vec!["rparen"],
                vec!["lbracket"],
                vec!["rbracket"],
                vec!["left"],
                vec!["right"],
                vec!["token"],
                vec!["start"],
                vec!["eofdef"],
                vec!["tokentype"],
                vec!["userdata"],
                vec!["errortype"],
                vec!["moduleprefix"],
                vec!["lalr"],
                vec!["glr"],
                vec!["prec"],
                vec!["precedence"],
                vec!["nooptim"],
                vec!["dense"],
                vec!["trace"],
                vec!["dprec"],
                vec!["filter"],
                vec!["runtime"],
                vec!["location"],
                vec!["eof"],
            ],
        }
    }
}
// ==============================Generated Codes End===============================
